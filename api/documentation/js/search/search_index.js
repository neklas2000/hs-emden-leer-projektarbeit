var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.757,1,1.718]],["body/injectables/AccessTokenGuard.html",[0,1.342,1,3.043,2,2.124,3,0.255,4,0.255,5,0.226,6,4.919,7,4.404,8,2.089,9,5.8,10,0.3,11,0.017,12,0.615,13,4.919,14,3.455,15,0.255,16,0.1,17,0.015,18,0.015]],["title/injectables/AccessTokenStrategy.html",[0,0.757,19,2.47]],["body/injectables/AccessTokenStrategy.html",[0,1.05,2,1.444,3,0.173,4,0.173,5,0.154,8,1.636,10,0.316,11,0.017,12,0.418,14,2.35,15,0.173,16,0.068,17,0.011,18,0.011,19,3.426,20,4.949,21,2.733,22,4.541,23,4.614,24,0.496,25,1.202,26,3.011,27,5.528,28,1.941,29,4.541,30,1.205,31,3.345,32,3.688,33,0.644,34,3.345,35,0.871,36,0.602,37,0.532,38,0.871,39,3.345,40,1.15,41,5.154,42,4.059,43,0.912,44,3.345,45,5.154,46,3.057,47,4.949,48,3.345,49,2.995,50,3.426,51,3.345,52,2.733,53,3.345,54,3.345,55,2.995,56,2.524,57,2.35,58,2.995,59,3.709,60,2.995,61,2.995,62,1.85,63,2.201,64,1.338,65,2.055,66,3.345,67,3.345,68,3.878,69,1.85,70,1.444,71,2.995,72,3.345,73,3.345,74,3.878,75,3.345,76,3.345,77,3.345,78,3.345,79,1.514,80,3.345,81,2.156,82,3.709,83,3.345,84,4.541,85,1.669,86,3.878,87,2.07,88,1.85]],["title/classes/AllExceptionsFilter.html",[16,0.067,89,2.931]],["body/classes/AllExceptionsFilter.html",[3,0.193,4,0.193,5,0.171,10,0.282,11,0.017,12,0.466,15,0.193,16,0.076,17,0.012,18,0.012,24,0.553,25,1.292,30,1.758,33,0.61,35,0.936,36,0.647,37,0.504,38,0.936,40,0.944,70,2.107,81,2.741,89,4.369,90,1.687,91,5.441,92,3.728,93,3.682,94,6.307,95,4.355,96,4.321,97,7.125,98,3.009,99,3.372,100,4.321,101,5.657,102,6.307,103,6.691,104,4.321,105,4.105,106,5.657,107,4.88,108,2.307,109,3.728,110,3.046,111,2.561,112,4.321,113,4.321,114,4.321,115,4.321,116,6.307,117,3.046,118,4.321,119,4.321,120,5.657,121,3.728,122,4.321,123,4.321,124,4.321,125,4.321,126,4.321,127,3.728,128,4.321,129,3.728,130,4.321]],["title/modules/AppModule.html",[131,1.08,132,2.674]],["body/modules/AppModule.html",[3,0.175,4,0.175,5,0.155,10,0.337,11,0.017,12,0.422,15,0.175,16,0.069,17,0.012,18,0.012,69,1.865,131,1.707,132,5.497,133,1.601,134,1.601,135,1.77,136,1.77,137,1.601,138,1.77,139,1.77,140,3.373,141,3.373,142,4.507,143,4.507,144,4.507,145,4.507,146,4.507,147,4.507,148,4.507,149,4.507,150,3.93,151,2.396,152,1.77,153,1.77,154,3.909,155,2.667,156,2.087,157,1.39,158,5.999,159,0.745,160,5.999,161,3.909,162,3.909,163,3.909,164,3.909,165,3.909,166,3.909,167,3.909,168,3.909,169,3.909,170,3.909,171,3.909,172,3.019,173,3.909,174,3.909,175,3.373]],["title/controllers/AuthenticationController.html",[176,1.29,177,2.674]],["body/controllers/AuthenticationController.html",[1,1.31,3,0.129,4,0.129,5,0.115,10,0.309,11,0.017,12,0.312,15,0.129,16,0.051,17,0.009,18,0.009,24,0.37,25,0.977,30,0.899,33,0.606,35,0.929,36,0.643,37,0.559,38,0.929,40,1.227,43,0.609,46,2.681,52,2.039,56,1.883,57,1.754,58,2.235,59,2.039,60,2.235,62,1.381,64,1.356,70,1.593,79,2.774,81,1.752,98,1.381,99,2.155,110,2.039,111,1.936,127,5.971,176,0.984,177,3.014,178,0.984,179,2.235,180,1.545,181,2.894,182,4.388,183,4.388,184,4.388,185,3.928,186,2.894,187,4.847,188,7.178,189,2.093,190,4.276,191,2.894,192,3.489,193,2.894,194,4.846,195,2.894,196,2.894,197,1.93,198,2.894,199,2.894,200,2.894,201,2.894,202,4.339,203,4.276,204,2.894,205,3.31,206,2.039,207,1.545,208,1.459,209,2.497,210,2.039,211,2.894,212,3.082,213,2.235,214,2.235,215,2.039,216,2.427,217,1.545,218,1.545,219,1.754,220,3.689,221,3.633,222,2.039,223,2.894,224,2.894,225,5.086,226,2.894,227,2.497,228,4.225,229,4.276,230,4.276,231,5.618,232,5.618,233,5.618,234,5.618,235,5.618,236,4.276,237,4.276,238,4.276,239,4.276,240,1.545,241,2.894,242,2.894,243,2.235,244,4.276,245,1.754,246,2.894,247,2.894,248,2.894,249,2.894,250,2.894,251,2.894,252,2.783,253,2.894,254,2.894]],["title/modules/AuthenticationModule.html",[131,1.08,142,2.47]],["body/modules/AuthenticationModule.html",[3,0.18,4,0.18,5,0.159,10,0.334,11,0.017,12,0.434,14,2.438,15,0.18,16,0.071,17,0.012,18,0.012,19,4.545,32,3.728,99,3.52,110,2.836,131,1.732,133,1.648,134,1.648,135,1.821,136,1.821,137,1.648,138,2.756,139,2.756,142,5.054,150,3.963,151,2.443,152,1.821,153,1.821,155,2.72,156,2.148,157,1.431,172,3.107,177,4.29,178,2.069,212,4.568,255,3.471,256,4.023,257,3.471,258,3.471,259,3.728,260,4.545,261,4.023,262,5.395,263,4.023,264,3.107,265,2.438,266,1.499,267,2.283,268,4.023,269,3.107,270,4.023,271,4.023]],["title/injectables/AuthenticationService.html",[0,0.757,212,2.299]],["body/injectables/AuthenticationService.html",[0,0.731,2,0.879,3,0.105,4,0.105,5,0.093,10,0.287,11,0.017,12,0.254,15,0.226,16,0.042,17,0.008,18,0.008,24,0.302,25,0.836,28,2.284,30,1.138,32,3.231,33,0.653,35,1.001,36,0.692,37,0.585,38,1.001,40,1.267,43,1.061,56,1.535,57,1.429,61,2.829,62,3.133,64,1.144,65,1.43,70,1.885,77,2.035,81,2.818,82,3.862,85,2.96,87,3.096,88,2.767,95,1.535,111,2.291,159,0.45,182,3.16,183,3.16,184,3.16,185,3.468,197,1.988,202,3.909,212,2.22,213,2.829,214,1.822,219,3.514,252,4.072,259,2.702,264,1.822,269,1.822,272,1.822,273,3.663,274,4.49,275,2.359,276,3.096,277,6.051,278,2.922,279,2.359,280,3.663,281,2.359,282,3.893,283,2.11,284,3.663,285,2.359,286,3.663,287,2.359,288,3.663,289,2.359,290,2.359,291,2.359,292,2.359,293,3.909,294,2.359,295,2.359,296,2.291,297,2.035,298,1.339,299,1.535,300,1.663,301,2.035,302,1.822,303,1.339,304,1.822,305,2.359,306,3.16,307,4.49,308,2.359,309,3.663,310,2.359,311,3.663,312,1.748,313,2.359,314,6.424,315,2.359,316,2.359,317,4.49,318,2.359,319,2.035,320,2.035,321,3.663,322,2.359,323,2.359,324,2.359,325,2.359,326,2.359,327,4.49,328,4.49,329,3.16,330,2.359,331,5.061,332,3.16,333,2.035,334,2.359,335,2.359,336,2.359,337,3.16,338,2.035,339,2.359,340,1.663,341,1.822,342,3.663,343,3.663,344,3.663,345,2.035,346,2.035,347,2.035,348,2.035,349,2.359]],["title/classes/BadRequestException.html",[16,0.067,298,2.154]],["body/classes/BadRequestException.html",[3,0.235,4,0.235,5,0.209,8,1.992,10,0.286,11,0.017,12,0.568,15,0.235,16,0.093,17,0.014,18,0.014,30,1.637,33,0.568,35,0.871,36,0.602,37,0.469,38,0.871,42,3.191,90,2.056,108,2.811,245,3.191,298,3.638,348,4.543,350,5.53,351,4.543,352,3.483,353,4.517,354,5.266,355,3.638,356,3.191,357,3.427,358,2.989,359,5.266,360,2.654,361,5.266,362,5.266,363,5.266,364,4.543]],["title/classes/BaseEntityWithExtras.html",[16,0.067,365,1.81]],["body/classes/BaseEntityWithExtras.html",[3,0.202,4,0.202,5,0.179,8,1.809,10,0.202,11,0.017,15,0.26,16,0.079,17,0.013,18,0.013,24,0.578,25,1.329,26,3.865,33,0.734,37,0.402,40,1.486,43,1.044,63,3.861,64,1.421,90,1.762,159,0.86,365,3.073,366,5.438,367,2.094,368,3.486,369,5.556,370,3.861,371,6.803,372,3.861,373,3.861,374,4.513,375,4.513,376,4.513,377,4.513,378,3.438,379,3.894,380,3.894,381,4.513]],["title/classes/BaseException.html",[16,0.067,352,1.913]],["body/classes/BaseException.html",[3,0.221,4,0.221,5,0.196,8,1.916,10,0.221,11,0.017,12,0.533,15,0.221,16,0.087,17,0.013,18,0.013,30,1.536,33,0.533,35,0.817,36,0.565,37,0.549,38,0.817,43,0.877,71,3.817,90,1.929,107,5.795,108,3.755,129,6.067,352,3.107,355,3.812,358,3.812,360,3.386,382,3.817,383,6.163,384,6.717,385,3.812,386,2.805,387,4.957,388,4.942,389,4.263,390,4.942,391,4.942,392,2.995]],["title/injectables/CryptoService.html",[0,0.757,259,2.026]],["body/injectables/CryptoService.html",[0,1.292,2,1.994,3,0.239,4,0.289,5,0.212,10,0.289,11,0.017,12,0.577,15,0.239,16,0.094,17,0.014,18,0.014,24,0.685,25,1.479,33,0.577,35,0.885,36,0.613,37,0.477,38,0.885,40,1.169,43,1.054,64,1.118,259,3.457,278,4.214,393,4.619,394,6.474,395,6.474,396,5.353,397,4.135,398,5.353]],["title/injectables/DateService.html",[0,0.757,99,1.913]],["body/injectables/DateService.html",[0,0.751,2,0.91,3,0.109,4,0.109,5,0.097,10,0.168,11,0.017,12,0.263,15,0.109,16,0.043,17,0.008,18,0.008,24,0.313,25,0.859,33,0.495,35,0.622,36,0.431,37,0.409,38,0.622,40,1.285,43,0.975,64,0.786,70,1.71,81,2.804,88,2.657,98,3.455,99,2.965,111,2.078,121,5.459,245,1.48,304,3.982,360,1.897,389,4.448,399,2.107,400,1.402,401,4.589,402,3.763,403,5.156,404,3.763,405,2.443,406,5.075,407,5.156,408,6.327,409,5.156,410,5.156,411,6.933,412,7.138,413,6.745,414,5.906,415,5.156,416,6.327,417,3.246,418,2.313,419,5.459,420,5.156,421,4.448,422,5.156,423,5.156,424,6.629,425,6.327,426,5.156,427,3.246,428,3.763,429,3.763,430,4.589,431,4.589,432,4.589,433,3.763,434,3.763,435,3.763,436,5.156,437,3.763,438,5.156,439,5.156,440,5.156,441,5.156,442,5.156,443,4.448,444,3.763,445,2.443,446,5.156,447,4.804,448,3.763,449,1.051,450,3.763,451,3.763,452,5.882,453,5.156,454,3.246,455,2.443,456,3.763,457,3.763,458,3.763,459,3.763,460,3.763,461,1.886,462,2.107,463,3.763,464,2.009,465,2.443,466,2.443,467,2.443,468,2.443,469,2.443,470,3.763,471,2.443,472,2.443,473,2.443,474,2.443,475,2.443,476,2.443,477,2.443,478,2.443,479,3.763]],["title/classes/IncorrectCredentialsException.html",[16,0.067,299,2.47]],["body/classes/IncorrectCredentialsException.html",[3,0.235,4,0.235,5,0.209,8,1.992,10,0.286,11,0.017,12,0.568,15,0.235,16,0.093,17,0.014,18,0.014,30,1.637,33,0.568,35,0.871,36,0.602,37,0.469,38,0.871,62,2.512,90,2.056,108,2.811,219,3.191,299,4.172,352,3.483,353,4.517,355,3.638,356,3.191,357,3.427,358,2.989,360,2.654,443,4.543,480,5.53,481,4.543,482,5.266,483,5.266,484,5.266,485,5.266,486,4.067,487,5.266]],["title/entities/MilestoneEstimate.html",[367,1.128,488,2.154]],["body/entities/MilestoneEstimate.html",[3,0.17,4,0.17,5,0.151,8,1.181,10,0.284,11,0.017,15,0.17,16,0.067,17,0.011,18,0.011,24,0.487,26,2.98,28,1.235,33,0.718,36,0.677,37,0.66,43,1.019,64,1.235,65,1.484,98,3.032,159,0.725,189,2.478,222,4.479,266,1.416,283,1.181,365,2.477,367,1.13,370,2.157,372,2.157,373,2.157,378,2.772,386,2.157,400,1.934,449,2.234,454,4.479,488,2.947,489,5.924,490,3.279,491,6.354,492,1.656,493,4.33,494,6.354,495,5.482,496,3.583,497,4.479,498,3.801,499,2.98,500,3.801,501,3.174,502,2.474,503,5.192,504,3.801,505,4.479,506,3.801,507,3.379,508,3.146,509,3.801,510,3.583,511,3.203,512,3.379,513,2.304,514,2.304,515,2.03,516,2.304,517,2.679,518,3.801,519,3.146]],["title/controllers/MilestoneEstimateController.html",[176,1.29,520,2.674]],["body/controllers/MilestoneEstimateController.html",[1,1.825,3,0.18,4,0.18,5,0.16,10,0.324,11,0.017,12,0.435,15,0.18,16,0.071,17,0.012,18,0.012,24,0.516,25,1.234,33,0.583,35,0.894,36,0.618,37,0.481,38,0.894,40,1.18,43,0.868,64,1.128,69,1.924,70,1.502,159,0.769,176,1.37,178,1.37,180,2.153,189,2.013,192,3.422,207,2.153,208,2.032,216,1.924,217,2.153,218,2.153,240,2.153,464,2.153,488,2.288,492,1.408,520,3.808,521,5.257,522,3.478,523,4.032,524,2.622,525,2.496,526,1.735,527,2.786,528,3.121,529,2.923,530,2.971,531,2.923,532,4.032,533,1.924,534,3.274,535,4.032,536,2.032,537,2.153,538,2.153,539,2.288,540,2.288,541,2.288,542,3.693,543,4.032,544,3.114,545,4.032,546,5.403,547,5.403,548,5.403,549,4.032,550,2.443,551,4.032]],["title/modules/MilestoneEstimateModule.html",[131,1.08,143,2.47]],["body/modules/MilestoneEstimateModule.html",[3,0.226,4,0.226,5,0.2,10,0.326,11,0.017,12,0.546,15,0.226,16,0.089,17,0.014,18,0.014,131,1.932,133,2.072,134,2.072,135,2.29,136,2.29,137,2.072,138,3.073,139,2.29,143,4.831,151,2.831,152,2.29,153,2.29,155,2.55,156,2.701,157,1.799,178,2.307,266,1.884,267,2.871,488,2.871,520,4.784,542,4.498,552,4.364,553,4.364,554,5.058,555,5.058,556,5.058]],["title/injectables/MilestoneEstimateService.html",[0,0.757,542,2.299]],["body/injectables/MilestoneEstimateService.html",[0,1.111,2,1.571,3,0.188,4,0.188,5,0.167,10,0.296,11,0.017,12,0.455,15,0.188,16,0.074,17,0.012,18,0.012,24,0.54,25,1.271,30,1.73,33,0.672,35,1.031,36,0.713,37,0.555,38,1.031,40,1.216,43,0.887,64,1.163,111,1.909,157,1.5,159,0.804,283,2.06,488,2.393,492,1.624,524,2.682,525,2.553,526,1.815,527,2.818,528,3.152,529,2.956,530,3.001,531,2.956,533,2.012,542,3.374,544,3.257,557,5.718,558,3.638,559,4.217,560,3.762,561,4.217,562,5.567,563,4.217,564,4.217,565,2.393,566,4.217,567,4.217,568,4.217]],["title/classes/NoAffectedRowException.html",[16,0.067,569,2.299]],["body/classes/NoAffectedRowException.html",[3,0.227,4,0.227,5,0.201,8,1.95,10,0.28,11,0.017,12,0.549,15,0.227,16,0.089,17,0.014,18,0.014,30,1.58,33,0.549,35,0.841,36,0.582,37,0.559,38,0.841,42,3.082,90,1.985,105,3.31,108,2.715,352,3.429,353,4.422,355,3.561,356,3.082,357,3.31,358,2.886,360,2.563,364,4.387,569,3.802,570,5.413,571,4.75,572,4.387,573,5.085,574,5.085,575,5.085,576,6.274,577,5.085,578,5.085,579,5.085,580,5.085,581,3.927,582,5.085]],["title/controllers/ProfileController.html",[176,1.29,583,2.674]],["body/controllers/ProfileController.html",[1,1.607,3,0.159,4,0.159,5,0.141,10,0.327,11,0.017,12,0.383,15,0.159,16,0.062,17,0.011,18,0.011,24,0.454,25,1.131,33,0.615,35,0.943,36,0.653,37,0.508,38,0.943,40,1.246,43,0.957,46,2.945,64,1.441,69,1.693,70,1.322,79,1.386,87,1.895,88,1.693,159,0.677,176,1.206,178,1.206,180,1.895,189,2.124,192,3.547,194,4.405,197,2.212,205,3.223,207,1.895,208,1.789,209,3.062,216,1.693,217,1.895,218,1.895,221,3.456,240,1.895,243,2.741,276,3.045,296,2.794,299,2.31,302,2.741,303,2.014,312,2.363,319,4.272,320,3.062,464,1.895,492,1.609,527,2.409,534,3.001,536,1.789,540,2.014,541,2.014,550,3.001,583,3.49,584,3.062,585,3.549,586,5.703,587,5.703,588,5.703,589,3.549,590,3.549,591,3.549,592,3.549,593,3.549,594,3.49,595,3.549,596,2.501,597,2.014,598,1.895,599,3.549,600,3.549,601,3.549,602,3.549,603,3.549,604,3.549,605,3.549,606,3.549,607,3.549]],["title/modules/ProfileModule.html",[131,1.08,144,2.47]],["body/modules/ProfileModule.html",[3,0.233,4,0.233,5,0.206,10,0.307,11,0.017,12,0.562,15,0.233,16,0.092,17,0.014,18,0.014,131,1.957,133,2.134,134,2.134,135,2.358,136,2.358,137,2.134,138,2.882,139,2.358,144,4.865,150,4.243,151,2.882,152,2.358,153,2.358,155,3.209,172,4.023,178,2.337,583,4.847,608,5.209,609,5.209,610,5.209]],["title/entities/Project.html",[367,1.128,611,1.554]],["body/entities/Project.html",[3,0.134,4,0.134,5,0.119,8,0.93,10,0.301,11,0.017,15,0.134,16,0.053,17,0.01,18,0.01,24,0.383,26,2.614,28,0.972,33,0.753,36,0.751,37,0.665,43,0.993,64,1.083,65,1.168,79,1.711,98,2.724,159,0.57,189,2.599,197,1.951,266,1.115,283,0.93,303,1.698,365,2.091,367,0.89,370,1.698,372,1.698,373,1.698,378,2.34,385,2.488,386,1.698,400,1.633,449,2.457,492,1.488,493,2.853,496,3.143,499,2.614,501,2.9,502,1.948,508,2.656,510,3.143,511,3.391,512,2.853,513,1.813,514,1.813,515,1.598,516,1.813,517,2.109,519,2.656,597,3.449,598,1.598,611,1.795,612,2.582,613,5.243,614,6.078,615,5.71,616,5.71,617,5.243,618,5.71,619,6.078,620,2.993,621,3.063,622,4.006,623,3.089,624,4.383,625,4.905,626,4.905,627,2.993,628,4.383,629,2.993,630,2.993,631,3.781,632,2.993,633,3.089,634,2.993,635,4.383,636,2.993,637,3.781,638,3.385,639,2.993,640,3.449,641,3.385,642,4.383,643,2.993,644,2.993,645,4.41,646,2.311,647,2.311,648,2.993]],["title/controllers/ProjectController.html",[176,1.29,649,2.674]],["body/controllers/ProjectController.html",[1,1.528,3,0.151,4,0.151,5,0.134,10,0.316,11,0.017,12,0.364,15,0.151,16,0.059,17,0.01,18,0.01,24,0.432,25,1.092,33,0.651,35,0.998,36,0.691,37,0.538,38,0.998,40,1.318,43,0.942,46,3.157,64,1.33,69,1.61,70,1.257,159,0.643,176,1.147,178,1.147,180,1.802,189,2.248,192,3.612,194,4.286,197,1.894,205,3.612,206,3.912,207,1.802,208,1.701,216,1.61,217,1.802,218,1.802,221,2.897,228,3.369,240,1.802,296,3.079,464,1.802,492,1.573,524,2.388,525,2.273,526,1.452,527,2.656,528,2.99,529,2.786,530,2.846,531,2.786,533,1.61,534,2.897,536,1.701,537,1.802,538,1.802,539,1.916,540,1.916,541,1.916,550,2.897,594,3.369,596,2.379,598,1.802,611,1.383,649,3.369,650,2.912,651,2.912,652,2.963,653,2.648,654,2.607,655,3.375,656,3.375,657,3.375,658,2.197,659,3.375,660,2.045,661,3.363,662,3.375,663,3.375,664,4.78,665,4.78,666,4.78,667,3.375,668,3.375,669,3.375,670,3.375,671,3.375]],["title/entities/ProjectMember.html",[367,1.128,621,1.913]],["body/entities/ProjectMember.html",[3,0.165,4,0.165,5,0.147,8,1.15,10,0.294,11,0.017,15,0.228,16,0.065,17,0.011,18,0.011,24,0.474,26,2.938,28,1.202,33,0.711,36,0.423,37,0.634,43,0.894,64,1.217,65,1.444,79,1.989,159,0.705,189,2.454,197,2.211,222,4.428,266,1.378,283,1.15,303,2.099,365,2.431,367,1.1,370,2.099,372,2.099,373,2.099,378,2.721,386,2.099,400,1.898,449,2.193,492,1.638,496,2.242,499,2.938,502,3.317,510,3.533,511,2.938,512,3.794,513,2.242,514,2.242,515,1.975,516,2.242,519,3.088,611,3.046,621,2.568,660,2.242,672,5.26,673,2.857,674,6.282,675,5.42,676,3.699,677,3.936,678,3.699,679,4.396,680,3.699,681,5.684,682,2.857,683,5.684,684,3.699,685,5.096,686,3.699,687,3.936,688,3.936,689,3.699]],["title/controllers/ProjectMemberController.html",[176,1.29,690,2.674]],["body/controllers/ProjectMemberController.html",[1,1.825,3,0.18,4,0.18,5,0.16,10,0.324,11,0.017,12,0.435,15,0.18,16,0.071,17,0.012,18,0.012,24,0.516,25,1.234,33,0.583,35,0.894,36,0.618,37,0.481,38,0.894,40,1.18,43,0.868,64,1.128,69,1.924,70,1.502,159,0.769,176,1.37,178,1.37,180,2.153,189,2.013,192,3.422,207,2.153,208,2.032,216,1.924,217,2.153,218,2.153,240,2.153,464,2.153,492,1.408,524,2.622,525,2.496,526,1.735,527,2.786,528,3.121,529,2.923,530,2.971,531,2.923,533,1.924,534,3.274,536,2.032,537,2.153,538,2.153,539,2.288,540,2.288,541,2.288,550,2.443,621,2.032,646,3.114,690,3.808,691,5.257,692,3.478,693,4.032,694,4.032,695,4.032,696,3.254,697,4.032,698,4.032,699,5.403,700,5.403,701,5.403,702,4.032,703,4.032]],["title/classes/ProjectMemberInvitePendingDefault1717365845661.html",[16,0.067,704,2.931]],["body/classes/ProjectMemberInvitePendingDefault1717365845661.html",[3,0.079,4,0.079,5,0.07,10,0.079,11,0.017,15,0.079,16,0.031,17,0.006,18,0.006,24,0.227,25,0.666,28,1.66,33,0.401,35,0.482,36,0.544,37,0.331,38,0.482,40,0.637,43,0.253,63,2.9,65,2.746,85,3.286,90,0.693,93,1.899,98,2.438,159,0.338,197,0.867,245,1.075,282,2.607,283,1.337,312,3.105,400,1.087,418,0.894,449,3.026,492,1.89,507,3.671,508,2.251,611,2.31,633,3.032,653,3.105,677,3.322,704,3.322,705,3.711,706,1.531,707,2.618,708,2.056,709,2.056,710,1.775,711,2.056,712,4.117,713,1.775,714,2.056,715,1.775,716,5.382,717,5.897,718,4.97,719,3.601,720,6.067,721,5.111,722,5.026,723,5.601,724,5.601,725,3.322,726,4.86,727,3.322,728,3.322,729,2.517,730,4.356,731,3.322,732,3.322,733,3.947,734,3.322,735,4.356,736,3.322,737,5.026,738,5.026,739,5.026,740,3.947,741,5.601,742,3.947,743,3.947,744,2.253,745,2.253,746,2.253,747,3.204]],["title/modules/ProjectMemberModule.html",[131,1.08,145,2.47]],["body/modules/ProjectMemberModule.html",[3,0.226,4,0.226,5,0.2,10,0.326,11,0.017,12,0.546,15,0.226,16,0.089,17,0.014,18,0.014,131,1.932,133,2.072,134,2.072,135,2.29,136,2.29,137,2.072,138,3.073,139,2.29,145,4.831,151,2.831,152,2.29,153,2.29,155,2.55,156,2.701,157,1.799,178,2.307,266,1.884,267,2.871,621,2.55,690,4.784,696,3.963,748,4.364,749,4.364,750,5.058,751,5.058,752,4.364]],["title/injectables/ProjectMemberService.html",[0,0.757,696,2.026]],["body/injectables/ProjectMemberService.html",[0,1.056,2,1.456,3,0.175,4,0.175,5,0.155,10,0.287,11,0.017,12,0.422,15,0.175,16,0.069,17,0.012,18,0.012,24,0.5,25,1.209,30,1.645,33,0.693,35,1.063,36,0.736,37,0.573,38,1.063,40,1.31,43,0.854,64,1.343,81,1.601,111,1.77,157,1.39,159,0.745,283,2.152,296,2.91,341,3.019,492,1.564,524,2.581,525,2.457,526,1.682,527,2.764,528,3.099,529,2.9,530,2.95,531,2.9,533,1.865,560,3.649,565,2.219,621,2.667,646,3.019,696,2.825,753,5.795,754,3.373,755,4.565,756,3.909,757,3.909,758,5.292,759,5.292,760,3.909,761,3.909,762,3.909,763,3.909,764,3.909,765,3.909,766,3.909,767,3.909,768,3.909,769,3.909]],["title/entities/ProjectMilestone.html",[367,1.128,501,1.81]],["body/entities/ProjectMilestone.html",[3,0.179,4,0.179,5,0.158,8,1.243,10,0.303,11,0.017,15,0.179,16,0.07,17,0.012,18,0.012,24,0.512,26,3.059,28,1.299,33,0.7,36,0.742,37,0.578,43,0.992,64,1.267,65,1.561,159,0.762,189,2.417,266,1.489,283,1.243,365,2.564,367,1.189,370,2.269,372,2.269,373,2.269,378,2.869,386,2.269,400,2.001,488,3.842,492,1.691,499,3.059,501,2.564,502,2.602,510,3.677,511,3.059,512,3.497,513,2.423,514,2.423,515,2.135,516,2.423,519,3.256,544,3.088,611,3.084,622,3.088,625,4.15,626,4.15,645,4.15,660,2.423,770,5.84,771,3.45,772,6.769,773,4.15,774,5.373,775,3.998,776,3.998,777,3.998,778,4.635,779,3.998,780,3.998]],["title/controllers/ProjectMilestoneController.html",[176,1.29,781,2.674]],["body/controllers/ProjectMilestoneController.html",[1,1.539,3,0.152,4,0.152,5,0.135,10,0.316,11,0.017,12,0.367,15,0.152,16,0.06,17,0.01,18,0.01,24,0.435,25,1.097,33,0.653,35,1.002,36,0.693,37,0.54,38,1.002,40,1.323,43,0.944,46,3.164,64,1.334,69,1.622,70,1.266,159,0.648,176,1.155,178,1.155,180,1.815,189,2.255,192,3.617,205,3.626,206,3.927,207,1.815,208,1.713,216,1.622,217,1.815,218,1.815,221,2.911,228,3.386,240,1.815,296,3.086,464,1.815,492,1.578,501,1.622,517,2.396,524,2.397,525,2.282,526,1.463,527,2.661,528,2.996,529,2.792,530,2.852,531,2.792,533,1.622,534,2.911,536,1.713,537,1.815,538,1.815,539,1.929,540,1.929,541,1.929,550,2.911,594,3.386,596,2.396,598,1.815,652,2.975,653,2.658,654,2.625,658,2.212,781,3.386,782,5.511,783,2.932,784,3.399,785,3.399,786,3.399,787,3.399,788,3.399,789,2.975,790,3.399,791,3.399,792,4.804,793,4.804,794,4.804,795,3.399,796,3.399,797,3.399,798,3.399]],["title/modules/ProjectMilestoneModule.html",[131,1.08,146,2.47]],["body/modules/ProjectMilestoneModule.html",[3,0.226,4,0.226,5,0.2,10,0.326,11,0.017,12,0.546,15,0.226,16,0.089,17,0.014,18,0.014,131,1.932,133,2.072,134,2.072,135,2.29,136,2.29,137,2.072,138,3.073,139,2.29,146,4.831,151,2.831,152,2.29,153,2.29,155,2.55,156,2.701,157,1.799,178,2.307,266,1.884,267,2.871,501,2.414,781,4.784,789,3.963,799,4.364,800,4.364,801,5.058,802,5.058,803,4.364]],["title/injectables/ProjectMilestoneService.html",[0,0.757,789,2.026]],["body/injectables/ProjectMilestoneService.html",[0,0.914,2,1.185,3,0.142,4,0.142,5,0.126,10,0.29,11,0.017,12,0.343,15,0.142,16,0.056,17,0.01,18,0.01,24,0.407,25,1.046,28,1.745,30,1.424,33,0.7,35,1.073,36,0.742,37,0.578,38,1.073,40,1.36,43,0.923,46,1.517,64,1.354,79,1.789,81,2.199,85,1.368,87,2.867,88,2.186,95,2.07,105,3.495,111,1.44,117,2.241,157,1.131,159,0.606,283,2.199,296,3.202,298,1.805,312,1.517,340,2.241,341,2.456,367,0.946,392,1.927,492,1.691,501,2.186,517,2.241,524,2.31,525,2.199,526,1.368,527,2.61,528,2.944,529,2.738,530,2.802,531,2.738,533,1.517,560,3.334,565,1.805,569,2.776,571,2.07,653,2.186,658,2.982,755,3.952,789,2.446,804,5.767,805,2.744,806,4.581,807,3.18,808,3.18,809,4.581,810,4.581,811,3.18,812,3.18,813,4.581,814,3.18,815,3.18,816,3.18,817,5.069,818,3.18,819,2.744,820,2.744,821,2.744,822,2.744,823,3.18,824,3.18,825,3.18,826,3.18,827,3.18,828,3.18,829,3.18,830,3.18,831,3.18,832,3.18,833,3.18,834,2.456,835,3.18,836,3.538,837,2.456,838,2.456]],["title/modules/ProjectModule.html",[131,1.08,147,2.47]],["body/modules/ProjectModule.html",[3,0.205,4,0.205,5,0.182,10,0.337,11,0.017,12,0.495,15,0.205,16,0.081,17,0.013,18,0.013,131,1.847,133,1.88,134,1.88,135,2.077,136,2.077,137,1.88,138,2.938,139,2.077,147,4.942,151,2.662,152,2.077,153,2.077,155,2.313,156,2.45,157,1.632,178,2.206,266,1.709,267,2.604,501,2.189,611,1.88,621,2.313,649,4.575,661,4.388,696,3.866,752,3.959,789,3.866,803,3.959,839,3.959,840,3.959,841,4.589,842,3.959,843,3.959,844,3.959,845,3.959,846,4.589]],["title/entities/ProjectReport.html",[367,1.128,640,2.154]],["body/entities/ProjectReport.html",[3,0.154,4,0.154,5,0.137,8,1.072,10,0.287,11,0.017,15,0.154,16,0.061,17,0.011,18,0.011,24,0.441,26,2.83,28,1.12,33,0.754,36,0.555,37,0.664,43,1.046,64,1.173,65,1.346,79,1.894,98,2.315,159,0.657,189,2.603,266,1.284,283,1.072,365,2.315,367,1.025,370,1.957,372,1.957,373,1.957,378,2.591,385,2.754,386,1.957,400,1.807,449,2.088,492,1.588,495,5.257,496,2.94,499,2.83,502,2.244,507,3.158,508,2.94,510,3.402,511,3.449,512,3.158,513,2.089,519,2.94,539,1.957,597,3.645,598,1.841,611,3.009,640,2.754,660,2.089,682,4.706,847,6.128,848,2.974,849,5.257,850,5.257,851,5.257,852,6.093,853,6.028,854,3.448,855,3.448,856,3.448,857,3.448,858,3.448,859,4.852,860,3.448,861,3.448,862,4.186,863,3.448,864,3.448]],["title/controllers/ProjectReportController.html",[176,1.29,865,2.674]],["body/controllers/ProjectReportController.html",[1,1.531,3,0.151,4,0.151,5,0.134,10,0.316,11,0.017,12,0.365,15,0.151,16,0.059,17,0.01,18,0.01,24,0.433,25,1.093,33,0.652,35,0.999,36,0.691,37,0.538,38,0.999,40,1.32,43,0.942,46,3.158,64,1.331,69,1.613,70,1.259,159,0.644,176,1.149,178,1.149,180,1.805,189,2.25,192,3.613,205,3.616,206,3.915,207,1.805,208,1.704,216,2.284,217,1.805,218,1.805,221,2.9,222,2.383,228,3.373,240,1.805,296,3.081,464,1.805,492,1.575,524,2.39,525,2.275,526,1.455,527,2.657,528,2.991,529,2.788,530,2.848,531,2.788,533,1.613,534,2.9,536,1.704,537,1.805,538,1.805,539,1.919,540,1.919,541,1.919,550,2.9,594,3.373,596,2.383,598,1.805,640,1.919,647,2.611,652,2.966,654,2.611,865,3.373,866,5.5,867,2.917,868,3.381,869,4.793,870,3.381,871,3.381,872,3.381,873,2.917,874,3.381,875,3.366,876,3.381,877,3.381,878,4.786,879,4.786,880,4.786,881,3.381,882,3.381,883,3.381,884,3.381]],["title/modules/ProjectReportModule.html",[131,1.08,148,2.47]],["body/modules/ProjectReportModule.html",[3,0.226,4,0.226,5,0.2,10,0.326,11,0.017,12,0.546,15,0.226,16,0.089,17,0.014,18,0.014,131,1.932,133,2.072,134,2.072,135,2.29,136,2.29,137,2.072,138,3.073,139,2.29,148,4.831,151,2.831,152,2.29,153,2.29,155,2.55,156,2.701,157,1.799,178,2.307,266,1.884,267,2.871,640,2.871,865,4.784,875,4.498,885,4.364,886,4.364,887,5.058,888,5.058,889,5.058]],["title/injectables/ProjectReportService.html",[0,0.757,875,2.299]],["body/injectables/ProjectReportService.html",[0,0.972,2,1.291,3,0.155,4,0.155,5,0.137,10,0.288,11,0.017,12,0.374,15,0.155,16,0.061,17,0.011,18,0.011,24,0.444,25,1.112,28,1.83,30,1.514,33,0.694,35,1.064,36,0.736,37,0.573,38,1.064,40,1.334,43,0.95,46,2.914,64,1.276,79,1.353,81,1.995,85,1.491,87,3.006,88,2.324,95,2.256,105,3.665,111,1.569,117,2.443,157,1.233,159,0.661,283,2.175,296,3.103,298,1.967,301,2.99,340,2.443,392,2.101,492,1.677,524,2.423,525,2.307,526,1.491,527,2.676,528,3.011,529,2.807,530,2.866,531,2.807,533,1.654,560,3.466,565,1.967,569,2.952,640,1.967,647,2.677,652,2.6,834,2.677,836,3.762,837,2.677,838,2.677,869,4.202,873,4.202,875,2.952,890,5.757,891,2.99,892,3.466,893,3.466,894,4.871,895,4.871,896,3.466,897,3.466,898,3.466,899,3.466,900,3.466,901,3.466,902,3.466,903,3.466,904,3.466,905,3.466,906,3.466,907,3.466]],["title/injectables/ProjectService.html",[0,0.757,661,2.299]],["body/injectables/ProjectService.html",[0,0.821,2,1.024,3,0.123,4,0.123,5,0.109,10,0.305,11,0.017,12,0.297,15,0.123,16,0.048,17,0.009,18,0.009,24,0.352,25,0.94,28,2.001,30,1.279,33,0.633,35,0.97,36,0.671,37,0.523,38,0.97,40,1.197,43,0.956,64,1.286,70,1.533,79,1.073,81,2.522,85,2.357,87,2.925,88,2.354,95,2.679,105,3.566,111,2.234,117,1.938,157,0.978,159,0.524,282,3.32,283,2.04,296,3.039,298,1.56,312,1.964,340,2.901,392,1.666,492,1.711,493,1.789,501,1.312,524,2.123,525,2.021,526,1.183,527,2.563,528,2.825,529,2.615,530,2.689,531,2.615,533,1.312,560,3.109,565,1.56,569,2.494,571,1.789,611,2.403,613,2.372,617,3.551,621,1.386,623,1.938,652,2.198,653,1.964,658,2.679,660,1.666,661,2.494,679,2.372,696,2.925,778,2.372,789,2.925,817,4.726,819,2.372,820,2.372,821,2.372,822,2.372,834,2.123,836,3.179,837,2.123,838,3.179,842,2.372,843,2.372,844,2.372,845,2.372,908,2.372,909,2.749,910,4.934,911,4.934,912,2.749,913,4.116,914,4.116,915,2.749,916,2.749,917,2.749,918,2.749,919,2.749,920,4.116,921,4.934,922,4.116,923,4.934,924,2.749,925,2.749,926,2.749,927,2.749,928,2.749,929,4.116,930,2.749,931,4.116,932,2.749,933,2.749,934,4.116,935,2.749,936,4.116,937,2.749,938,2.749,939,2.749,940,2.749]],["title/classes/ProjektarbeitAPI1711999577974.html",[16,0.067,941,2.931]],["body/classes/ProjektarbeitAPI1711999577974.html",[3,0.1,4,0.1,5,0.089,10,0.1,11,0.017,15,0.1,16,0.039,17,0.008,18,0.008,24,0.557,25,0.804,28,1.846,33,0.469,35,0.583,36,0.68,37,0.439,38,0.583,40,0.769,43,0.319,62,1.07,63,3.223,65,3.003,85,3.228,90,0.876,93,2.292,98,2.554,159,0.428,197,1.047,219,1.36,282,3.243,283,1.531,312,2.834,400,1.312,418,1.131,449,2.886,461,2.72,492,1.795,497,1.936,505,1.936,507,2.292,508,2.635,611,2.017,631,1.936,633,1.581,637,1.936,638,1.733,652,3.171,653,2.834,675,1.936,677,1.733,683,1.936,687,1.733,688,1.733,707,3.064,708,2.482,709,2.482,711,2.482,712,4.458,714,2.482,716,5.124,717,5.317,718,4.869,719,3.772,721,5.124,722,4.587,723,5.317,724,5.615,725,2.72,726,4.387,727,2.72,728,2.72,729,3.039,730,3.804,731,2.72,732,2.72,733,3.804,734,2.72,735,3.804,736,2.72,737,4.587,738,4.587,739,4.587,740,3.358,741,5.317,742,4.387,743,3.358,744,2.72,745,2.72,746,1.733,849,1.936,850,1.936,851,1.936,853,4.249,862,1.936,941,3.804,942,4.249,943,1.936,944,2.244,945,2.244,946,2.244,947,1.733,948,5.584,949,1.936,950,1.733,951,1.733,952,2.244,953,3.522,954,5.124,955,5.94,956,1.733,957,3.358,958,1.733,959,1.733,960,1.936,961,5.306]],["title/injectables/RefreshTokenGuard.html",[0,0.757,210,2.674]],["body/injectables/RefreshTokenGuard.html",[0,1.337,2,2.111,3,0.253,4,0.253,5,0.225,7,4.378,8,2.082,9,5.78,10,0.299,11,0.017,12,0.611,13,4.89,14,3.435,15,0.253,16,0.1,17,0.015,18,0.015,210,4.721,962,4.89,963,5.78]],["title/injectables/RefreshTokenStrategy.html",[0,0.757,260,2.47]],["body/injectables/RefreshTokenStrategy.html",[0,1.043,2,1.43,3,0.172,4,0.172,5,0.152,8,1.625,10,0.315,11,0.017,12,0.414,14,2.326,15,0.172,16,0.068,17,0.011,18,0.011,21,2.706,22,4.51,23,4.59,24,0.492,25,1.194,26,2.996,27,5.505,28,1.931,29,4.51,30,1.193,31,3.312,32,3.677,33,0.641,34,3.312,35,0.865,36,0.598,37,0.53,38,0.865,39,3.312,40,1.142,41,5.128,42,4.045,43,0.908,44,3.312,45,5.128,46,3.045,47,4.928,48,3.312,49,2.965,50,3.402,51,3.312,52,2.706,53,3.312,54,3.312,55,2.965,56,2.499,57,2.326,58,2.965,60,2.965,61,2.965,62,1.832,63,2.179,64,1.333,65,2.041,66,3.312,67,3.312,69,1.832,70,1.43,71,2.965,72,3.312,73,3.312,75,3.312,76,3.312,78,3.312,79,1.499,80,3.312,81,2.141,83,3.312,84,4.51,85,1.652,87,2.05,88,1.832,215,3.684,252,3.869,260,3.402,346,3.312,963,4.51,964,4.928,965,3.839,966,3.839,967,3.839]],["title/modules/ServicesModule.html",[131,1.08,149,2.47]],["body/modules/ServicesModule.html",[3,0.232,4,0.232,5,0.205,10,0.307,11,0.017,12,0.559,15,0.232,16,0.091,17,0.014,18,0.014,99,3.763,131,1.952,133,2.122,134,2.122,135,2.345,136,2.345,137,2.122,138,3.106,139,2.345,149,4.969,151,2.873,152,2.345,153,2.345,259,3.986,968,5.181,969,5.181,970,5.181,971,5.181,972,5.181]],["title/classes/StoredProcedureAndEvent1711999597974.html",[16,0.067,973,2.931]],["body/classes/StoredProcedureAndEvent1711999597974.html",[3,0.199,4,0.199,5,0.177,10,0.199,11,0.017,15,0.199,16,0.078,17,0.013,18,0.013,24,0.571,25,1.319,28,2.28,33,0.691,35,0.955,36,0.803,37,0.571,38,0.955,40,1.262,43,0.635,63,3.982,85,2.914,90,1.742,93,3.759,159,0.85,283,1.991,312,2.129,400,2.151,418,2.249,449,1.92,652,2.382,707,4.514,708,4.071,709,4.071,711,3.144,712,5.225,714,4.071,716,3.144,719,3.144,951,3.446,961,4.983,973,5.231,974,5.844,975,3.849,976,4.461,977,4.461,978,4.461,979,5.775,980,5.775,981,4.461,982,4.461,983,4.461,984,4.461,985,4.461,986,4.461,987,4.461,988,4.461,989,4.983,990,4.461]],["title/entities/TokenWhitelist.html",[265,2.299,367,1.128]],["body/entities/TokenWhitelist.html",[3,0.175,4,0.175,5,0.156,8,1.22,10,0.269,11,0.017,15,0.175,16,0.069,17,0.012,18,0.012,24,0.503,28,1.275,33,0.748,36,0.737,37,0.658,43,1.051,65,1.532,79,2.514,82,4.237,159,0.748,189,2.582,197,2.173,252,3.913,265,3.216,266,1.462,283,1.22,303,2.228,367,1.167,369,4.578,386,2.228,400,1.977,461,4.973,492,1.567,496,3.902,499,3.03,510,3.643,511,3.39,514,2.379,515,2.096,516,2.379,519,3.216,597,3.655,947,4.098,949,4.578,950,4.098,951,4.098,991,6.115,992,3.386,993,5.186,994,5.186,995,3.925,996,3.925,997,3.925,998,3.925,999,3.925,1000,3.925,1001,5.306,1002,3.925,1003,5.306,1004,4.578,1005,3.925]],["title/injectables/TokenWhitelistService.html",[0,0.757,32,2.026]],["body/injectables/TokenWhitelistService.html",[0,0.88,2,1.123,3,0.135,4,0.135,5,0.119,10,0.294,11,0.017,12,0.325,15,0.197,16,0.053,17,0.01,18,0.01,24,0.386,25,1.007,28,2.235,30,1.37,32,2.354,33,0.687,35,1.053,36,0.729,37,0.586,38,1.053,40,1.332,43,1.078,56,1.963,57,1.828,64,1.33,65,2.034,70,1.941,81,2.762,82,4.488,85,2.623,98,2.486,99,2.889,110,2.126,111,2.358,157,1.073,159,0.575,197,1.549,243,3.405,252,4.145,259,3.06,265,1.828,269,2.329,278,3.391,282,4.168,283,2.172,293,4.426,297,2.602,312,2.103,329,5.494,332,2.602,333,2.602,337,3.803,338,2.602,345,2.602,347,2.602,492,1.358,560,3.253,565,1.712,653,2.486,993,3.803,994,3.803,1006,5.079,1007,2.329,1008,4.408,1009,4.408,1010,4.408,1011,3.016,1012,3.016,1013,4.408,1014,4.408,1015,3.016,1016,4.408,1017,3.016,1018,3.016,1019,3.016,1020,4.408,1021,3.016,1022,4.408,1023,3.016,1024,2.602,1025,3.016,1026,5.21,1027,3.016,1028,4.408,1029,3.016,1030,3.016,1031,3.016,1032,3.016,1033,3.016,1034,3.016,1035,4.408]],["title/classes/UnauthorizedException.html",[16,0.067,50,2.47]],["body/classes/UnauthorizedException.html",[3,0.237,4,0.237,5,0.21,8,1.999,10,0.287,11,0.017,12,0.571,15,0.237,16,0.093,17,0.014,18,0.014,30,1.646,33,0.571,35,0.876,36,0.606,37,0.472,38,0.876,42,3.209,50,4.186,90,2.067,108,2.827,245,3.209,304,4.089,352,3.491,353,4.532,355,3.65,356,3.209,358,3.005,360,2.669,421,4.568,1036,4.568,1037,5.295,1038,5.295,1039,5.295,1040,5.295,1041,5.295,1042,4.089]],["title/entities/User.html",[197,1.128,367,1.128]],["body/entities/User.html",[3,0.14,4,0.14,5,0.124,8,0.976,10,0.289,11,0.017,15,0.14,16,0.055,17,0.01,18,0.01,24,0.402,26,2.686,33,0.761,36,0.709,37,0.678,43,0.97,62,2.786,64,1.113,79,2.754,159,0.598,189,2.627,197,1.349,219,3.539,265,3.913,266,1.169,365,2.165,367,0.933,370,1.781,372,1.781,373,1.781,378,2.423,400,1.69,492,1.522,496,3.754,499,2.686,511,3.501,513,1.902,514,1.902,515,1.676,516,1.902,597,4.316,598,1.676,611,2.727,622,2.424,625,3.505,626,3.505,645,3.505,651,5.344,660,1.902,682,2.424,956,3.505,957,3.505,958,3.505,959,3.505,960,3.915,1004,3.915,1024,2.708,1043,2.708,1044,5.839,1045,5.839,1046,5.839,1047,4.51,1048,5.839,1049,5.33,1050,3.915,1051,7.053,1052,3.139,1053,3.139,1054,3.139,1055,3.139,1056,3.139,1057,3.139,1058,3.139,1059,3.139,1060,4.538,1061,3.139,1062,3.139,1063,4.538,1064,3.139,1065,3.139]],["title/classes/UserAcademicTitle1714254731674.html",[16,0.067,1066,2.931]],["body/classes/UserAcademicTitle1714254731674.html",[3,0.074,4,0.074,5,0.066,10,0.074,11,0.017,15,0.074,16,0.029,17,0.006,18,0.006,24,0.212,25,0.629,28,1.604,33,0.381,35,0.455,36,0.523,37,0.315,38,0.455,40,0.601,43,0.235,63,2.802,65,2.813,85,3.298,90,0.646,93,1.791,98,2.356,159,0.315,197,1.832,219,2.497,282,2.497,283,1.28,312,3.047,400,1.025,418,0.834,449,2.965,492,1.87,507,3.568,508,2.142,511,0.834,611,2.245,633,2.904,653,3.047,707,2.491,708,1.94,709,1.94,711,1.94,712,4.011,714,1.94,716,5.391,717,5.907,718,4.989,719,3.48,720,6.191,721,5.057,722,5.006,723,5.542,724,5.542,725,3.182,726,4.533,727,3.182,728,3.182,730,4.234,731,3.182,732,3.182,733,3.813,734,3.182,735,4.234,736,3.182,737,5.006,738,4.932,739,4.932,740,3.813,741,5.542,742,3.813,743,3.813,744,2.126,745,2.126,746,2.126,747,3.049,948,4.516,956,3.182,957,2.126,958,3.182,959,3.182,1050,2.375,1066,3.182,1067,3.554,1068,1.427,1069,1.654,1070,1.654,1071,1.654,1072,2.752]],["title/classes/UserAlreadyExistsException.html",[16,0.067,300,2.674]],["body/classes/UserAlreadyExistsException.html",[3,0.229,4,0.229,5,0.203,8,1.959,10,0.282,11,0.017,12,0.553,15,0.229,16,0.09,17,0.014,18,0.014,30,1.593,33,0.553,35,0.848,36,0.586,37,0.457,38,0.848,43,0.972,62,3.258,90,2.001,108,2.737,197,1.524,300,4.443,352,3.442,355,4.043,356,3.106,357,3.336,358,2.909,360,2.583,486,3.959,989,4.422,1042,3.959,1073,4.869,1074,6.146,1075,4.422,1076,5.439,1077,5.126,1078,5.126,1079,5.126]],["title/controllers/UserController.html",[176,1.29,1080,2.674]],["body/controllers/UserController.html",[1,1.829,3,0.181,4,0.181,5,0.16,10,0.324,11,0.017,12,0.436,15,0.181,16,0.071,17,0.012,18,0.012,24,0.517,25,1.236,33,0.584,35,0.895,36,0.619,37,0.482,38,0.895,40,1.182,64,1.13,69,1.928,70,1.505,159,0.77,176,1.373,178,1.373,180,2.157,189,2.015,192,3.424,197,1.201,207,2.157,208,2.036,216,2.582,217,2.157,218,2.157,240,2.157,276,3.257,302,3.12,303,2.293,385,3.462,464,2.157,524,2.625,525,2.499,526,1.739,527,2.788,528,3.122,529,2.925,530,2.972,531,2.925,536,2.036,537,2.157,538,2.157,539,2.293,540,2.293,541,2.293,1047,4.179,1080,3.813,1081,3.486,1082,4.04,1083,4.04,1084,3.486,1085,5.411,1086,4.04,1087,4.04,1088,5.411,1089,5.411,1090,5.411,1091,4.04,1092,4.04,1093,4.04]],["title/classes/UserDoesNotExistException.html",[16,0.067,1094,2.931]],["body/classes/UserDoesNotExistException.html",[3,0.23,4,0.23,5,0.204,8,1.966,10,0.283,11,0.017,12,0.556,15,0.23,16,0.091,17,0.014,18,0.014,30,1.602,33,0.556,35,0.852,36,0.59,37,0.459,38,0.852,43,0.974,62,3.266,90,2.012,108,2.751,197,1.881,352,3.45,355,4.051,356,3.123,357,3.354,358,2.925,360,2.597,486,3.98,1042,3.98,1073,4.885,1076,5.457,1094,4.885,1095,4.446,1096,5.153,1097,5.153,1098,5.153,1099,5.153,1100,5.153]],["title/modules/UserModule.html",[131,1.08,150,2.154]],["body/modules/UserModule.html",[3,0.22,4,0.22,5,0.195,10,0.323,11,0.017,12,0.532,15,0.22,16,0.087,17,0.013,18,0.013,131,1.909,133,2.019,134,2.019,135,2.231,136,2.231,137,2.019,138,3.037,139,3.037,150,4.246,151,2.786,152,2.231,153,2.231,155,2.484,156,2.632,157,1.753,178,2.28,197,1.466,266,1.836,267,2.797,276,4.143,1080,4.729,1101,4.252,1102,4.252,1103,4.252,1104,4.929,1105,4.929]],["title/injectables/UserService.html",[0,0.757,276,2.026]],["body/injectables/UserService.html",[0,0.878,2,1.12,3,0.134,4,0.134,5,0.119,10,0.284,11,0.017,12,0.324,15,0.134,16,0.053,17,0.01,18,0.01,24,0.385,25,1.004,28,1.69,30,1.367,33,0.727,35,1.114,36,0.771,37,0.6,38,1.114,40,1.435,43,1.019,46,2.73,62,2.099,64,1.372,81,2.13,85,1.294,87,1.605,88,1.435,111,1.361,157,1.069,159,0.573,185,3.397,197,1.702,227,2.594,276,2.348,278,2.863,283,2.266,296,2.974,303,1.706,306,2.594,385,2.951,397,2.322,418,1.515,449,1.294,492,1.658,524,2.238,525,2.13,526,1.294,527,2.727,528,2.899,529,2.691,530,2.759,531,2.691,560,3.248,565,1.706,597,1.706,598,1.605,653,2.099,658,2.863,1047,4.016,1084,2.594,1106,2.594,1107,4.398,1108,4.398,1109,4.398,1110,3.007,1111,3.007,1112,4.398,1113,3.007,1114,4.398,1115,3.007,1116,4.398,1117,3.007,1118,4.398,1119,3.007,1120,3.007,1121,4.398,1122,3.007,1123,3.007,1124,4.398,1125,3.007,1126,3.007,1127,3.007,1128,5.722,1129,3.007,1130,3.007,1131,3.007,1132,3.007,1133,3.007,1134,4.398,1135,3.007,1136,3.007,1137,3.007,1138,3.007,1139,3.007]],["title/coverage.html",[1140,4.474]],["body/coverage.html",[0,1.394,1,1.086,5,0.095,6,2.071,7,2.867,11,0.017,16,0.122,17,0.008,18,0.008,19,1.562,20,1.854,21,2.616,32,1.281,37,0.214,50,1.562,59,1.692,88,1.145,89,1.854,91,2.071,92,2.071,99,1.21,137,0.983,176,2.138,177,1.692,179,1.854,197,1.104,210,1.692,212,1.454,215,1.692,216,1.145,259,1.281,260,1.562,265,1.454,272,1.854,276,1.281,298,1.362,299,1.562,300,1.692,350,2.071,351,2.071,352,1.21,365,1.145,366,1.854,367,1.871,368,1.854,382,1.854,392,4.792,393,2.071,399,2.071,406,3.916,480,2.071,481,2.071,488,1.362,489,2.071,490,2.071,493,2.416,499,1.21,501,1.145,515,1.281,520,1.692,521,2.071,522,2.071,536,1.21,537,1.281,538,1.281,542,1.454,557,2.071,558,2.071,569,1.454,570,2.071,571,1.562,572,2.071,583,1.692,584,2.071,611,0.983,612,2.071,621,1.21,623,2.616,640,1.362,641,2.867,649,1.692,650,2.071,661,1.454,672,1.854,673,1.854,690,1.692,691,2.071,692,2.071,696,1.281,704,1.854,705,2.071,706,2.071,718,1.562,753,2.071,754,2.071,770,2.071,771,2.071,773,2.867,781,1.692,782,2.071,783,2.071,789,1.281,804,2.071,805,2.071,847,2.071,848,2.071,865,1.692,866,2.071,867,2.071,875,1.454,890,2.071,891,2.071,908,2.071,941,1.854,942,2.071,943,2.071,962,2.071,964,1.854,973,1.854,974,2.071,975,2.071,991,2.071,992,2.071,1006,1.854,1007,1.854,1036,2.071,1043,2.071,1066,1.854,1067,2.071,1068,2.071,1073,2.867,1074,2.071,1075,2.071,1080,1.692,1081,2.071,1094,1.854,1095,2.071,1106,2.071,1140,2.071,1141,2.4,1142,2.4,1143,2.4,1144,5.84,1145,7.674,1146,2.4,1147,3.712,1148,3.202,1149,7.467,1150,2.071,1151,2.867,1152,2.071,1153,2.071,1154,2.071,1155,2.4,1156,2.4,1157,3.202,1158,3.202,1159,2.071,1160,3.202,1161,2.071,1162,6.291,1163,5.108,1164,2.071,1165,6.291,1166,3.202,1167,6.026,1168,2.071,1169,2.071,1170,5.428,1171,2.071,1172,2.071,1173,2.071,1174,2.071,1175,2.071,1176,2.071,1177,2.071,1178,2.071,1179,2.071,1180,2.071,1181,2.071,1182,3.202,1183,3.202,1184,2.071,1185,2.071,1186,3.202,1187,2.071,1188,2.071,1189,3.712,1190,2.4,1191,2.4,1192,3.202,1193,2.4,1194,2.071,1195,2.071,1196,2.4]],["title/dependencies.html",[134,1.87,1197,2.445]],["body/dependencies.html",[11,0.017,12,0.562,14,3.157,17,0.014,18,0.014,23,4.023,52,3.671,55,4.917,109,4.494,134,2.134,157,1.853,159,1.214,208,2.625,264,4.023,278,3.39,397,4.023,462,4.494,1198,6.877,1199,5.209,1200,5.209,1201,5.209,1202,5.209,1203,5.209,1204,5.209,1205,5.209,1206,5.209,1207,5.209,1208,5.209,1209,5.209,1210,5.209,1211,5.209,1212,5.209,1213,5.209,1214,5.209,1215,5.209,1216,5.209,1217,5.209,1218,5.209,1219,5.209,1220,5.209]],["title/miscellaneous/enumerations.html",[1221,1.69,1222,3.939]],["body/miscellaneous/enumerations.html",[11,0.016,17,0.015,18,0.015,24,0.75,418,3.442,672,4.524,673,5.275,681,5.892,687,5.275,688,5.275,1221,3.128,1222,5.054,1223,5.054]],["title/miscellaneous/functions.html",[1221,1.69,1224,3.939]],["body/miscellaneous/functions.html",[11,0.017,17,0.013,18,0.013,24,0.602,33,0.507,35,1.086,36,0.751,37,0.615,38,1.086,40,1.305,79,1.835,137,2.446,159,0.896,192,2.369,216,2.85,283,2.04,367,1.398,379,4.055,385,3.39,387,4.868,414,4.055,417,4.055,418,2.369,419,4.055,427,4.055,449,2.825,499,3.01,511,2.369,515,3.189,581,3.63,721,4.209,954,4.055,1153,4.055,1154,5.153,1164,4.055,1194,4.055,1195,5.153,1197,3.63,1221,2.51,1224,4.055,1225,4.701,1226,4.701,1227,4.701,1228,4.701,1229,4.701,1230,4.701,1231,5.972,1232,6.564,1233,4.701,1234,4.701,1235,4.701,1236,4.701,1237,4.701,1238,4.701,1239,4.701,1240,4.701,1241,4.701,1242,4.701,1243,5.972,1244,5.972,1245,5.972]],["title/index.html",[24,0.486,1246,3.274]],["body/index.html",[2,1.391,11,0.017,17,0.011,18,0.011,19,3.814,32,3.128,90,1.458,99,3.179,131,1.063,132,5.446,133,1.53,134,1.53,135,1.691,136,1.691,137,1.53,138,1.691,139,1.691,140,3.222,141,3.222,142,4.998,143,4.303,144,4.303,145,4.303,146,4.303,147,4.706,148,4.303,149,4.554,150,4.044,151,2.322,152,1.691,153,1.691,178,1.269,212,4.24,255,3.222,257,3.222,258,3.222,259,3.368,260,3.814,266,1.391,276,3.735,542,3.551,552,3.222,553,3.222,638,2.885,661,3.551,696,3.368,748,3.222,749,3.222,789,3.368,799,3.222,800,3.222,839,3.222,840,3.222,875,3.551,885,3.222,886,3.222,1101,3.222,1102,3.222,1103,3.222,1246,3.222,1247,3.735,1248,3.735,1249,3.735,1250,3.735]],["title/modules.html",[133,2.124]],["body/modules.html",[11,0.014,17,0.014,18,0.014,132,3.742,133,2.175,142,3.456,143,3.456,144,3.456,145,3.456,146,3.456,147,3.456,148,3.456,149,3.456,150,3.013,1251,7.767,1252,7.767,1253,7.767,1254,7.767]],["title/properties.html",[400,1.701,1197,2.445]],["body/properties.html",[11,0.017,17,0.015,18,0.015,360,3.007,400,2.223,1255,5.967,1256,5.967,1257,5.967,1258,5.967,1259,5.967]],["title/miscellaneous/typealiases.html",[1221,1.69,1260,4.566]],["body/miscellaneous/typealiases.html",[11,0.014,17,0.013,18,0.013,20,3.703,21,4.903,24,0.614,37,0.686,43,0.682,47,5.373,57,3.665,65,1.872,179,3.703,187,5.217,202,4.671,213,4.671,214,4.671,220,5.217,221,3.665,272,3.703,293,4.671,366,3.703,367,1.798,368,4.671,378,3.229,382,3.703,387,4.262,597,3.432,964,3.703,1006,3.703,1007,4.671,1151,3.703,1221,2.56,1261,4.794,1262,6.047,1263,4.794,1264,6.047,1265,4.136,1266,4.794,1267,4.794,1268,5.217,1269,4.794,1270,6.625,1271,4.794,1272,4.136,1273,7.646,1274,4.794,1275,4.794,1276,4.136]],["title/miscellaneous/variables.html",[1221,1.69,1277,3.939]],["body/miscellaneous/variables.html",[11,0.018,17,0.006,18,0.006,24,0.227,37,0.52,42,2.602,43,0.987,49,1.367,59,2.051,64,1.447,79,1.447,81,2.969,175,4.653,197,0.865,215,2.051,245,1.764,296,1.317,312,0.844,365,2.435,367,1.831,380,4.403,385,1.652,387,3.597,392,2.246,400,0.659,418,3.654,447,3.705,449,3.077,493,2.413,525,0.725,527,1.677,529,0.725,530,1.944,531,0.725,536,1.868,537,2.293,538,2.88,571,1.894,581,4.166,623,2.613,641,2.863,652,0.945,653,0.844,718,3.51,773,2.863,947,1.367,950,1.367,1148,1.527,1150,2.511,1151,1.367,1152,2.511,1157,1.527,1158,3.198,1159,2.511,1160,1.527,1161,2.511,1166,1.527,1167,6.024,1168,3.198,1169,2.511,1170,3.705,1171,3.198,1172,2.511,1173,3.198,1174,2.511,1175,3.198,1176,2.511,1177,3.198,1178,2.511,1179,1.527,1180,2.511,1181,5.035,1182,1.527,1183,3.198,1184,2.511,1185,3.198,1186,1.527,1187,2.511,1188,3.198,1192,1.527,1221,0.945,1223,4.86,1265,2.511,1268,2.511,1272,2.511,1276,2.511,1277,1.527,1278,1.77,1279,2.91,1280,2.91,1281,2.91,1282,2.91,1283,2.91,1284,2.91,1285,1.77,1286,1.77,1287,1.77,1288,1.77,1289,1.77,1290,1.77,1291,1.77,1292,1.77,1293,1.77,1294,2.91,1295,1.77,1296,1.77,1297,1.77,1298,4.294,1299,2.91,1300,2.91,1301,2.91,1302,1.77,1303,4.294,1304,4.294,1305,4.294,1306,1.77,1307,6.287,1308,4.746,1309,1.77,1310,1.77,1311,1.77,1312,1.77,1313,1.77,1314,3.707,1315,1.77,1316,1.77,1317,3.707,1318,1.77,1319,1.77,1320,1.77,1321,1.77,1322,1.77,1323,1.77,1324,1.77,1325,3.707,1326,1.77,1327,1.77,1328,1.77,1329,1.77,1330,1.77,1331,1.77,1332,3.707,1333,1.77,1334,1.77,1335,1.77,1336,2.91,1337,1.77,1338,1.77,1339,1.77,1340,2.91,1341,1.77,1342,1.77,1343,1.77,1344,5.393,1345,5.393,1346,1.77,1347,1.77,1348,1.77,1349,1.77,1350,1.77,1351,1.77,1352,1.77,1353,1.77,1354,2.91,1355,3.707,1356,3.707,1357,1.77,1358,1.77,1359,2.91,1360,1.77,1361,1.77,1362,1.77,1363,2.91,1364,1.77,1365,2.91,1366,2.91,1367,1.77,1368,1.77,1369,1.77,1370,1.77,1371,1.77,1372,1.77,1373,1.77,1374,1.77,1375,1.77,1376,1.77,1377,1.77,1378,1.77,1379,1.77,1380,1.77,1381,1.77,1382,1.77,1383,1.77]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"classes/BaseException.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.2.1",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":434,"title":{},"body":{"injectables/DateService.html":{}}}],["1",{"_index":245,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BadRequestException.html":{},"injectables/DateService.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/UnauthorizedException.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1256,"title":{},"body":{"properties.html":{}}}],["1.4.6",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1247,"title":{},"body":{"index.html":{}}}],["10.0.1",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":453,"title":{},"body":{"injectables/DateService.html":{}}}],["13",{"_index":1250,"title":{},"body":{"index.html":{}}}],["14",{"_index":1249,"title":{},"body":{"index.html":{}}}],["15:37:28",{"_index":435,"title":{},"body":{"injectables/DateService.html":{}}}],["16.3.1",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":483,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["2.18.1",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":433,"title":{},"body":{"injectables/DateService.html":{}}}],["24",{"_index":451,"title":{},"body":{"injectables/DateService.html":{}}}],["3",{"_index":574,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["3.4.4",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":424,"title":{},"body":{"injectables/DateService.html":{}}}],["30m",{"_index":440,"title":{},"body":{"injectables/DateService.html":{}}}],["4",{"_index":1078,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["4.0.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1097,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["60",{"_index":452,"title":{},"body":{"injectables/DateService.html":{}}}],["7",{"_index":638,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"index.html":{}}}],["7.8.1",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1248,"title":{},"body":{"index.html":{}}}],["academic_title",{"_index":1050,"title":{},"body":{"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["academictitle",{"_index":1044,"title":{},"body":{"entities/User.html":{}}}],["access",{"_index":421,"title":{},"body":{"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["access_token",{"_index":947,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["access_token_cookie",{"_index":59,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token_expiration_date",{"_index":949,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{}}}],["accesstoken",{"_index":82,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenexpiration",{"_index":436,"title":{},"body":{"injectables/DateService.html":{}}}],["accesstokenexpirationdate",{"_index":993,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":19,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"index.html":{}}}],["accesstokenstrategy.fromcookie",{"_index":74,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["action",{"_index":741,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["actually",{"_index":578,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["add",{"_index":737,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["additional",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":486,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["affected",{"_index":571,"title":{},"body":{"classes/NoAffectedRowException.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ahead",{"_index":426,"title":{},"body":{"injectables/DateService.html":{}}}],["aliases",{"_index":1261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":89,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allows",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["already",{"_index":1074,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["alter",{"_index":717,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["appmodule",{"_index":132,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":409,"title":{},"body":{"injectables/DateService.html":{}}}],["argumentshost",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.isarray(request.query.fields[table",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(request.query.include",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(filters[field",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(where",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations[include",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets[table",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets(sparsefieldsets",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{}}}],["attribute",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["auth",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authenticationcontroller",{"_index":177,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":142,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationpayload",{"_index":187,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":212,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"index.html":{}}}],["authguard",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["author",{"_index":1259,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1041,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["await",{"_index":85,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{}}}],["bad",{"_index":359,"title":{},"body":{"classes/BadRequestException.html":{}}}],["badrequestexception",{"_index":298,"title":{"classes/BadRequestException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["badrequestexception(error",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["badrequestexception(exception",{"_index":838,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["base.exception",{"_index":356,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["baseentity",{"_index":369,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/TokenWhitelist.html":{}}}],["baseentitywithextras",{"_index":365,"title":{"classes/BaseEntityWithExtras.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseexception",{"_index":352,"title":{"classes/BaseException.html":{}},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["beforeinsert",{"_index":510,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{}}}],["begin",{"_index":981,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["being",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["body",{"_index":205,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["boolean",{"_index":222,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/MilestoneEstimate.html":{},"entities/ProjectMember.html":{},"controllers/ProjectReportController.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bootstrap(port",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browse",{"_index":1254,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1251,"title":{},"body":{"modules.html":{}}}],["cascade",{"_index":626,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["catch",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthenticationService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["catch(exception",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cause",{"_index":355,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["caused",{"_index":577,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["change",{"_index":720,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["class",{"_index":16,"title":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UnauthorizedException.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UnauthorizedException.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationmodule",{"_index":255,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_exports",{"_index":257,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_imports",{"_index":256,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":258,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule",{"_index":552,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule_providers",{"_index":553,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_profilemodule",{"_index":608,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":609,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_projectmembermodule",{"_index":748,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmembermodule_providers",{"_index":749,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule",{"_index":799,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule_providers",{"_index":800,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmodule",{"_index":839,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectmodule_providers",{"_index":840,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectreportmodule",{"_index":885,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_projectreportmodule_providers",{"_index":886,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":968,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":969,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_usermodule",{"_index":1101,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_exports",{"_index":1102,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":1103,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["code",{"_index":389,"title":{},"body":{"classes/BaseException.html":{},"injectables/DateService.html":{}}}],["column",{"_index":511,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"miscellaneous/functions.html":{}}}],["column({name",{"_index":496,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["column({type",{"_index":682,"title":{},"body":{"entities/ProjectMember.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["columnoptions",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.includes(field",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common/index",{"_index":513,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["conditions",{"_index":920,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push",{"_index":922,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push(where",{"_index":924,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":81,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":738,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["constructor(cause",{"_index":353,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{}}}],["constructor(email",{"_index":1076,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["constructor(httpadapterhost",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(milestoneestimaterepository",{"_index":559,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["constructor(private",{"_index":69,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(projectmemberrepository",{"_index":756,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["constructor(projectmilestonerepository",{"_index":807,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["constructor(projectreportrepository",{"_index":892,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["constructor(projectrepository",{"_index":909,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(status",{"_index":383,"title":{},"body":{"classes/BaseException.html":{}}}],["constructor(tokenwhitelistrepository",{"_index":1011,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["constructor(tokenwhitelistservice",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(userrepository",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["contains",{"_index":456,"title":{},"body":{"injectables/DateService.html":{}}}],["context",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["continue",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributor",{"_index":687,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":176,"title":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":223,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('milestone/estimates",{"_index":545,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["controller('profile",{"_index":603,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('project/members",{"_index":698,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["controller('project/milestones",{"_index":791,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["controller('project/reports",{"_index":877,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["controller('projects",{"_index":663,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controller('users",{"_index":1087,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":178,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{}}}],["cookie",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1140,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":652,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"miscellaneous/variables.html":{}}}],["create(partialreport",{"_index":895,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["create(payload",{"_index":654,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["create(project",{"_index":914,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createall",{"_index":755,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["createall(memberpartials",{"_index":759,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["createall(milestonepartials",{"_index":810,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createdproject",{"_index":929,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.id",{"_index":934,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.members",{"_index":939,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.milestones",{"_index":935,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createone",{"_index":806,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createone(payload",{"_index":813,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createparamdecorator(filtersfactory",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(includesfactory",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(sparsefieldsetsfactory",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(userfactory",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrepositoryfunctions",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":485,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["credentials.exception",{"_index":602,"title":{},"body":{"controllers/ProfileController.html":{}}}],["credentials.exception.ts",{"_index":481,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["credentials.exception.ts:5",{"_index":482,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["criteria",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.service",{"_index":971,"title":{},"body":{"modules/ServicesModule.html":{}}}],["crypto.sha256(payload.password).tostring(crypto.enc.hex",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["crypto.sha256(source).tostring(crypto.enc.hex",{"_index":398,"title":{},"body":{"injectables/CryptoService.html":{}}}],["crypto.sha256(where.password",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["cryptoservice",{"_index":259,"title":{"injectables/CryptoService.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"modules/ServicesModule.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["ctx",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curdate",{"_index":747,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["current",{"_index":416,"title":{},"body":{"injectables/DateService.html":{}}}],["current_date",{"_index":508,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["d",{"_index":450,"title":{},"body":{"injectables/DateService.html":{}}}],["data",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":580,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["datasource",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["date.getcurrenttimestampwithoffset('30m",{"_index":437,"title":{},"body":{"injectables/DateService.html":{}}}],["date.getexpirationdatewithoffset('30m",{"_index":448,"title":{},"body":{"injectables/DateService.html":{}}}],["date.service",{"_index":972,"title":{},"body":{"modules/ServicesModule.html":{}}}],["dateservice",{"_index":99,"title":{"injectables/DateService.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/DateService.html":{},"modules/ServicesModule.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["datetime",{"_index":461,"title":{},"body":{"injectables/DateService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{}}}],["datetime.fromjsdate(jsdate",{"_index":476,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.local",{"_index":469,"title":{},"body":{"injectables/DateService.html":{}}}],["day",{"_index":458,"title":{},"body":{"injectables/DateService.html":{}}}],["dd",{"_index":431,"title":{},"body":{"injectables/DateService.html":{}}}],["de",{"_index":479,"title":{},"body":{"injectables/DateService.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorator",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":189,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/filters.decorator",{"_index":600,"title":{},"body":{"controllers/ProfileController.html":{}}}],["decorators/index",{"_index":539,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/primary",{"_index":514,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["decorators/user.decorator",{"_index":209,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{}}}],["deeppartial",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":449,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"miscellaneous/variables.html":{}}}],["delete(userid",{"_index":1014,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["deleteresult",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["deliverables",{"_index":849,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["denied",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":360,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"properties.html":{}}}],["documentation",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":708,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["down(queryrunner",{"_index":711,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["drop",{"_index":722,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["eg",{"_index":439,"title":{},"body":{"injectables/DateService.html":{}}}],["email",{"_index":62,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["engine=innodb",{"_index":955,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["entities",{"_index":266,"title":{},"body":{"modules/AuthenticationModule.html":{},"entities/MilestoneEstimate.html":{},"modules/MilestoneEstimateModule.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"modules/ProjectMemberModule.html":{},"entities/ProjectMilestone.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"modules/ProjectReportModule.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"modules/UserModule.html":{},"index.html":{}}}],["entity",{"_index":367,"title":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity('milestone_estimate",{"_index":518,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["entity('project",{"_index":648,"title":{},"body":{"entities/Project.html":{}}}],["entity('project_member",{"_index":689,"title":{},"body":{"entities/ProjectMember.html":{}}}],["entity('project_milestone",{"_index":780,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["entity('project_report",{"_index":864,"title":{},"body":{"entities/ProjectReport.html":{}}}],["entity('token_whitelist",{"_index":1005,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["entity('user",{"_index":1065,"title":{},"body":{"entities/User.html":{}}}],["entity.getcolumns",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getproperties",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelations",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[field",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[include",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.name.tolowercase",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitylike",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entry",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":683,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["enumerations",{"_index":1222,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":56,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.access_token_expiration",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.jwt_access_secret",{"_index":77,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["env.jwt_refresh_secret",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["env.refresh_token_expiration",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["environment",{"_index":57,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{}}}],["errorhandler",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["estimate",{"_index":773,"title":{},"body":{"entities/ProjectMilestone.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["estimate.controller.ts",{"_index":522,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["estimate.controller.ts:18",{"_index":532,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.controller.ts:30",{"_index":535,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.milestone",{"_index":774,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["estimate.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["estimate.module.ts",{"_index":555,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["estimate.service.ts",{"_index":558,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["estimate.service.ts:15",{"_index":563,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:23",{"_index":564,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:9",{"_index":561,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.ts",{"_index":490,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["estimate.ts:24",{"_index":500,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:27",{"_index":509,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:30",{"_index":498,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:33",{"_index":506,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:36",{"_index":504,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimates",{"_index":772,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["estimation_date",{"_index":497,"title":{},"body":{"entities/MilestoneEstimate.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["estimationdate",{"_index":491,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["europe/berlin",{"_index":984,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["event",{"_index":988,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["event_scheduler",{"_index":987,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["example",{"_index":419,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["exception",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["exception.getstatus",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:13",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:7",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/bad",{"_index":821,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["exceptions/incorrect",{"_index":601,"title":{},"body":{"controllers/ProfileController.html":{}}}],["exceptions/index",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectReportService.html":{}}}],["exceptions/no",{"_index":819,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["executioncontext",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1098,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["exist.exception.ts",{"_index":1095,"title":{},"body":{"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["exist.exception.ts:5",{"_index":1096,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["existingrelations",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existingrelations.includes(include",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":989,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAlreadyExistsException.html":{}}}],["exists.exception.ts",{"_index":1075,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:5",{"_index":1077,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["expiration",{"_index":420,"title":{},"body":{"injectables/DateService.html":{}}}],["expires",{"_index":235,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["expiresin",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":15,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["express",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["express.request",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["express.user",{"_index":194,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"classes/NoAffectedRowException.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["extension",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":75,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(request",{"_index":83,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":73,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extras.ts",{"_index":368,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extras.ts:12",{"_index":376,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:16",{"_index":374,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:20",{"_index":375,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:8",{"_index":377,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["false",{"_index":243,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"injectables/TokenWhitelistService.html":{}}}],["field",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.split",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.length",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...(request.query.fields[table",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...entry.split",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.slice(1",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields[0",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets.decorator.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldsets[field",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table][field",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters",{"_index":536,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters(milestoneestimate",{"_index":546,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["filters(project",{"_index":664,"title":{},"body":{"controllers/ProjectController.html":{}}}],["filters(projectmember",{"_index":699,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["filters(projectmilestone",{"_index":792,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["filters(projectreport",{"_index":878,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["filters(user",{"_index":1088,"title":{},"body":{"controllers/UserController.html":{}}}],["filters(userentity",{"_index":605,"title":{},"body":{"controllers/ProfileController.html":{}}}],["filters[field",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtersfactory",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":524,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(where",{"_index":526,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials(id",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuser",{"_index":1008,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findbyuser(userid",{"_index":1016,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findmanyoptions",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findone",{"_index":525,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findone(id",{"_index":533,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["findone(matriculationnumber",{"_index":1084,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneby",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findoneoptions",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findoptionsrelations",{"_index":531,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionsselect",{"_index":529,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionswhere",{"_index":527,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":958,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["firstname",{"_index":1045,"title":{},"body":{"entities/User.html":{}}}],["fk_2d04de5563e11736efb61e44285",{"_index":736,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_7115f82a61e31ac95b2681d83e4",{"_index":731,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_7e787585ded942fc095b659b594",{"_index":732,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_9884b2ee80eb70b7db4f12e8aed",{"_index":728,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_e7520163dafa7c1104fd672caad",{"_index":727,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_f7accb0136106f3050f8e96c5e8",{"_index":734,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["fk_fbe0e932e64303e1f63e3e16f5e",{"_index":725,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["following",{"_index":427,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["follows",{"_index":422,"title":{},"body":{"injectables/DateService.html":{}}}],["forbiddenexception",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forbiddenexception('access",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["foreign",{"_index":723,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["format",{"_index":428,"title":{},"body":{"injectables/DateService.html":{}}}],["fromcookie",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["function",{"_index":406,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["functions",{"_index":1224,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functions.ts",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":515,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatetokens",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generatetokens(userid",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get(':id",{"_index":534,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["get(':matriculationnumber",{"_index":1085,"title":{},"body":{"controllers/UserController.html":{}}}],["getcolumns",{"_index":370,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getcurrenttimestampwithoffset",{"_index":402,"title":{},"body":{"injectables/DateService.html":{}}}],["getcurrenttimestampwithoffset(offsetwithunit",{"_index":404,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset",{"_index":403,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset(offsetwithunit",{"_index":444,"title":{},"body":{"injectables/DateService.html":{}}}],["getprofile",{"_index":586,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(user",{"_index":589,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid",{"_index":587,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(id",{"_index":591,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getproperties",{"_index":371,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["getrelations",{"_index":372,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getrelationtypes",{"_index":373,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getrepositorytoken(milestoneestimate",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(project",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(projectmember",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(projectmilestone",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(projectreport",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(tokenwhitelist",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrepositorytoken(user",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":443,"title":{},"body":{"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{}}}],["global",{"_index":986,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["goes",{"_index":1100,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["guards/access",{"_index":540,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["guards/index",{"_index":211,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["hash",{"_index":394,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hash(source",{"_index":395,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hashedaccesstoken",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["hashedrefreshedtoken",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hashedrefreshtoken",{"_index":1035,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["hazards",{"_index":850,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["hh:mm:ss",{"_index":432,"title":{},"body":{"injectables/DateService.html":{}}}],["host",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hsel",{"_index":390,"title":{},"body":{"classes/BaseException.html":{}}}],["hsel_mta",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(context.getrequest",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(context.getresponse",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["httponly",{"_index":231,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpstatus",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["httpstatus.internal_server_error",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":492,"title":{},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["import",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include.split",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes",{"_index":538,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["includes(milestoneestimate",{"_index":548,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["includes(project",{"_index":666,"title":{},"body":{"controllers/ProjectController.html":{}}}],["includes(projectmember",{"_index":701,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["includes(projectmilestone",{"_index":794,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["includes(projectreport",{"_index":880,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["includes(user",{"_index":1090,"title":{},"body":{"controllers/UserController.html":{}}}],["includes.length",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...(request.query.include",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...entry.split",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.slice(1",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes[0",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includesfactory",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":484,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["incorrectcredentialsexception",{"_index":299,"title":{"classes/IncorrectCredentialsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["incorrectcredentialsexception(null",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["increment",{"_index":415,"title":{},"body":{"injectables/DateService.html":{}}}],["incremented",{"_index":442,"title":{},"body":{"injectables/DateService.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":582,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["initiated",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":565,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["injectrepository(milestoneestimate",{"_index":566,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["injectrepository(project",{"_index":919,"title":{},"body":{"injectables/ProjectService.html":{}}}],["injectrepository(projectmember",{"_index":764,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["injectrepository(projectmilestone",{"_index":823,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["injectrepository(projectreport",{"_index":901,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["injectrepository(tokenwhitelist",{"_index":1025,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["injectrepository(user",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["instanceof",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["int",{"_index":957,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["invite_pending",{"_index":677,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["invitepending",{"_index":674,"title":{},"body":{"entities/ProjectMember.html":{}}}],["isc",{"_index":1258,"title":{},"body":{"properties.html":{}}}],["javascript",{"_index":446,"title":{},"body":{"injectables/DateService.html":{}}}],["jest.fn",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":1003,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["joincolumn()@onetoone(undefined",{"_index":1000,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["js",{"_index":397,"title":{},"body":{"injectables/CryptoService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["jsdate",{"_index":474,"title":{},"body":{"injectables/DateService.html":{}}}],["jsonapiincludes",{"_index":1264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jwt",{"_index":23,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":72,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":263,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.register",{"_index":270,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtpayload",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":724,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["last_name",{"_index":959,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["lastname",{"_index":1046,"title":{},"body":{"entities/User.html":{}}}],["lax",{"_index":234,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["legend",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["level",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":1257,"title":{},"body":{"properties.html":{}}}],["line",{"_index":423,"title":{},"body":{"injectables/DateService.html":{}}}],["literal",{"_index":1273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["locale",{"_index":478,"title":{},"body":{"injectables/DateService.html":{}}}],["login",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["login(email",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(payload",{"_index":186,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["logout(user",{"_index":193,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout(userid",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logoutresult",{"_index":220,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/typealiases.html":{}}}],["luxon",{"_index":462,"title":{},"body":{"injectables/DateService.html":{},"dependencies.html":{}}}],["m",{"_index":454,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{}}}],["m.estimates",{"_index":503,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["manytoone",{"_index":512,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["manytoone(undefined",{"_index":502,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["matching",{"_index":18,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matriculation_number",{"_index":956,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["matriculationnumber",{"_index":1047,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["meaning",{"_index":441,"title":{},"body":{"injectables/DateService.html":{}}}],["mediumtext",{"_index":853,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["member",{"_index":623,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["member.controller.ts",{"_index":692,"title":{},"body":{"controllers/ProjectMemberController.html":{},"coverage.html":{}}}],["member.controller.ts:18",{"_index":694,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.controller.ts:30",{"_index":695,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["member.module.ts",{"_index":751,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["member.project",{"_index":624,"title":{},"body":{"entities/Project.html":{}}}],["member.service.ts",{"_index":754,"title":{},"body":{"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["member.service.ts:15",{"_index":757,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:21",{"_index":762,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:29",{"_index":763,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:45",{"_index":760,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.ts",{"_index":673,"title":{},"body":{"entities/ProjectMember.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["member.ts:31",{"_index":676,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:34",{"_index":684,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:37",{"_index":678,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:40",{"_index":686,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:43",{"_index":680,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member/entities",{"_index":844,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{}}}],["member/services",{"_index":843,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{}}}],["memberpartials",{"_index":761,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartials.map((memberpartial",{"_index":767,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["members",{"_index":613,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectService.html":{}}}],["memberservice",{"_index":911,"title":{},"body":{"injectables/ProjectService.html":{}}}],["message",{"_index":358,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["metadata",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["migrationinterface",{"_index":707,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["milestone",{"_index":493,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["milestone.controller.ts",{"_index":783,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"coverage.html":{}}}],["milestone.controller.ts:19",{"_index":786,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:31",{"_index":785,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:39",{"_index":787,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:53",{"_index":788,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["milestone.module.ts",{"_index":802,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["milestone.project",{"_index":628,"title":{},"body":{"entities/Project.html":{}}}],["milestone.service.ts",{"_index":805,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["milestone.service.ts:17",{"_index":808,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:23",{"_index":815,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:31",{"_index":816,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:47",{"_index":814,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:54",{"_index":811,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:64",{"_index":818,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.ts",{"_index":771,"title":{},"body":{"entities/ProjectMilestone.html":{},"coverage.html":{}}}],["milestone.ts:26",{"_index":776,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:29",{"_index":777,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:32",{"_index":779,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:37",{"_index":775,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone/entities",{"_index":845,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{}}}],["milestone/estimates",{"_index":523,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["milestone/services",{"_index":842,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{}}}],["milestone_estimate",{"_index":735,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["milestone_estimate_repository_token",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["milestone_reached",{"_index":505,"title":{},"body":{"entities/MilestoneEstimate.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["milestoneestimate",{"_index":488,"title":{"entities/MilestoneEstimate.html":{}},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"coverage.html":{}}}],["milestoneestimatecontroller",{"_index":520,"title":{"controllers/MilestoneEstimateController.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"coverage.html":{}}}],["milestoneestimatemodule",{"_index":143,"title":{"modules/MilestoneEstimateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MilestoneEstimateModule.html":{},"index.html":{},"modules.html":{}}}],["milestoneestimaterepository",{"_index":562,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["milestoneestimateservice",{"_index":542,"title":{"injectables/MilestoneEstimateService.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"coverage.html":{},"index.html":{}}}],["milestoneid",{"_index":745,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["milestonepartials",{"_index":812,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonepartials.map((milestonepartial",{"_index":831,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonereached",{"_index":494,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["milestones",{"_index":614,"title":{},"body":{"entities/Project.html":{}}}],["milestoneservice",{"_index":910,"title":{},"body":{"injectables/ProjectService.html":{}}}],["milliseconds",{"_index":460,"title":{},"body":{"injectables/DateService.html":{}}}],["minute",{"_index":459,"title":{},"body":{"injectables/DateService.html":{}}}],["minutes",{"_index":425,"title":{},"body":{"injectables/DateService.html":{}}}],["miscellaneous",{"_index":1221,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":430,"title":{},"body":{"injectables/DateService.html":{}}}],["module",{"_index":131,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["mysql",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":264,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":88,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"controllers/ProfileController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newproject",{"_index":927,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newproject.save",{"_index":930,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newrecord",{"_index":1029,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newrecord.save",{"_index":1031,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newreport",{"_index":905,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["newreport.save",{"_index":907,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["noaffectedrowexception",{"_index":569,"title":{"classes/NoAffectedRowException.html":{}},"body":{"classes/NoAffectedRowException.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["noaffectedrowexception(null",{"_index":837,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["notfoundexception",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":65,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":597,"title":{},"body":{"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":385,"title":{},"body":{"classes/BaseException.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["oberservable",{"_index":218,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["oberservable.ts",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":447,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["object.hasown(exception",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object.hasown(payload",{"_index":826,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["object.hasown(req.cookies",{"_index":67,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["object.hasown(request.query",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectives",{"_index":851,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["observable",{"_index":192,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["occured",{"_index":361,"title":{},"body":{"classes/BadRequestException.html":{}}}],["official_end",{"_index":631,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["official_start",{"_index":633,"title":{},"body":{"entities/Project.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["officialend",{"_index":615,"title":{},"body":{"entities/Project.html":{}}}],["officialstart",{"_index":616,"title":{},"body":{"entities/Project.html":{}}}],["offset",{"_index":411,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit",{"_index":438,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit.replace(offset.tostring",{"_index":468,"title":{},"body":{"injectables/DateService.html":{}}}],["ondelete",{"_index":625,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["one",{"_index":408,"title":{},"body":{"injectables/DateService.html":{}}}],["onetomany",{"_index":645,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":622,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetoone",{"_index":1004,"title":{},"body":{"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":1062,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":387,"title":{},"body":{"classes/BaseException.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":1246,"title":{"index.html":{}},"body":{"index.html":{}}}],["owner",{"_index":617,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectService.html":{}}}],["ownerid",{"_index":744,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["package",{"_index":1197,"title":{"dependencies.html":{},"properties.html":{}},"body":{"miscellaneous/functions.html":{}}}],["param",{"_index":464,"title":{},"body":{"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":550,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["param('matriculationnumber",{"_index":1092,"title":{},"body":{"controllers/UserController.html":{}}}],["parameter",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(regex.exec(offsetwithunit)[0",{"_index":467,"title":{},"body":{"injectables/DateService.html":{}}}],["parser",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partialentity",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partialreport",{"_index":897,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["passport",{"_index":55,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":262,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":22,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passreqtocallback",{"_index":78,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passthrough",{"_index":225,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["password",{"_index":219,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["patch",{"_index":596,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patch(':id",{"_index":594,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patchone",{"_index":869,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["patchone(id",{"_index":873,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["path",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{}}}],["payload.id",{"_index":827,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["payload.password",{"_index":227,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["payload?.password",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["payload[attribute",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["performing",{"_index":362,"title":{},"body":{"classes/BadRequestException.html":{}}}],["phone_number",{"_index":960,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{}}}],["phonenumber",{"_index":1048,"title":{},"body":{"entities/User.html":{}}}],["plus(offset",{"_index":471,"title":{},"body":{"injectables/DateService.html":{}}}],["port",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":206,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["post('login",{"_index":190,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('logout",{"_index":241,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('refresh",{"_index":249,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('register",{"_index":203,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["prefix",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["present",{"_index":1099,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["primary",{"_index":954,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid",{"_index":499,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid(options",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["procedure",{"_index":979,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["profile",{"_index":585,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilecontroller",{"_index":583,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":144,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":611,"title":{"entities/Project.html":{}},"body":{"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectMilestone.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"coverage.html":{}}}],["project.members",{"_index":679,"title":{},"body":{"entities/ProjectMember.html":{},"injectables/ProjectService.html":{}}}],["project.members.map((member",{"_index":938,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.milestones",{"_index":778,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectService.html":{}}}],["project.milestones.map((milestone",{"_index":933,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.owner",{"_index":1060,"title":{},"body":{"entities/User.html":{}}}],["project.reports",{"_index":859,"title":{},"body":{"entities/ProjectReport.html":{}}}],["project/members",{"_index":693,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["project/milestones",{"_index":784,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["project/reports",{"_index":868,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["project\\`(\\`id",{"_index":743,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["project_member",{"_index":726,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["project_member_repository_token",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project_milestone",{"_index":733,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["project_milestone\\`(\\`id",{"_index":746,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["project_milestone_repository_token",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project_report",{"_index":730,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["project_report_repository_token",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project_repository_token",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectcontroller",{"_index":649,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectid",{"_index":742,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["projectmember",{"_index":621,"title":{"entities/ProjectMember.html":{}},"body":{"entities/Project.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmember.save",{"_index":769,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmembercontroller",{"_index":690,"title":{"controllers/ProjectMemberController.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"coverage.html":{}}}],["projectmemberinvitependingdefault.ts",{"_index":706,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"coverage.html":{}}}],["projectmemberinvitependingdefault.ts:4",{"_index":710,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{}}}],["projectmemberinvitependingdefault.ts:6",{"_index":715,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{}}}],["projectmemberinvitependingdefault.ts:84",{"_index":713,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{}}}],["projectmemberinvitependingdefault1717365845661",{"_index":704,"title":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{}},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"coverage.html":{}}}],["projectmembermodule",{"_index":145,"title":{"modules/ProjectMemberModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectMemberModule.html":{},"index.html":{},"modules.html":{}}}],["projectmemberrepository",{"_index":758,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmembers",{"_index":936,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmemberservice",{"_index":696,"title":{"injectables/ProjectMemberService.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmilestone",{"_index":501,"title":{"entities/ProjectMilestone.html":{}},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmilestone.save",{"_index":833,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["projectmilestonecontroller",{"_index":781,"title":{"controllers/ProjectMilestoneController.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"coverage.html":{}}}],["projectmilestonemodule",{"_index":146,"title":{"modules/ProjectMilestoneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{},"index.html":{},"modules.html":{}}}],["projectmilestonerepository",{"_index":809,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["projectmilestones",{"_index":931,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmilestoneservice",{"_index":789,"title":{"injectables/ProjectMilestoneService.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmodule",{"_index":147,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectreport",{"_index":640,"title":{"entities/ProjectReport.html":{}},"body":{"entities/Project.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["projectreportcontroller",{"_index":865,"title":{"controllers/ProjectReportController.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"coverage.html":{}}}],["projectreportmodule",{"_index":148,"title":{"modules/ProjectReportModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectReportModule.html":{},"index.html":{},"modules.html":{}}}],["projectreportrepository",{"_index":894,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["projectreportservice",{"_index":875,"title":{"injectables/ProjectReportService.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{},"index.html":{}}}],["projectrepository",{"_index":913,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectrole",{"_index":681,"title":{},"body":{"entities/ProjectMember.html":{},"miscellaneous/enumerations.html":{}}}],["projects",{"_index":651,"title":{},"body":{"controllers/ProjectController.html":{},"entities/User.html":{}}}],["projectservice",{"_index":661,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projektarbeitapi.ts",{"_index":943,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"coverage.html":{}}}],["projektarbeitapi.ts:4",{"_index":944,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["projektarbeitapi.ts:51",{"_index":945,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["projektarbeitapi.ts:6",{"_index":946,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["projektarbeitapi1711999577974",{"_index":941,"title":{"classes/ProjektarbeitAPI1711999577974.html":{}},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"coverage.html":{}}}],["promise",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["promise.resolve",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve([entity",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve([options",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve(options",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve(where",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promisetoobservable",{"_index":216,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["promisetoobservable(promise",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promisetoobservable(this.authenticationservice.logout(user['sub",{"_index":242,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.authenticationservice.register(payload",{"_index":224,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.findall(where",{"_index":549,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.findone(id",{"_index":551,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.projectmemberservice.findall(where",{"_index":702,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmemberservice.findone(id",{"_index":703,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.createone(payload",{"_index":796,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.findall(where",{"_index":795,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.findone(id",{"_index":797,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.update(id",{"_index":798,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectreportservice.create(payload",{"_index":884,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectreportservice.findall(where",{"_index":881,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectreportservice.findone(id",{"_index":882,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectservice.create(payload",{"_index":669,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findall(where",{"_index":667,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findone(id",{"_index":668,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.update(id",{"_index":671,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.userservice.findall(where",{"_index":1091,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.findbyid(user['sub",{"_index":604,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.findbyidandcredentials(id",{"_index":606,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.update(id",{"_index":607,"title":{},"body":{"controllers/ProfileController.html":{}}}],["properties",{"_index":400,"title":{"properties.html":{}},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["properties.includes(field",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":379,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"miscellaneous/functions.html":{}}}],["propertydecorator",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":581,"title":{},"body":{"classes/NoAffectedRowException.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1042,"title":{},"body":{"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["providemilestoneestimaterepository",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideprojectmemberrepository",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideprojectmilestonerepository",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideprojectreportrepository",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideprojectrepository",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["providetokenwhitelistrepository",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideuserrepository",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":63,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["query",{"_index":364,"title":{},"body":{"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{}}}],["queryrunner",{"_index":712,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["queryrunner.query",{"_index":716,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["queryrunner.query(`alter",{"_index":1072,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{}}}],["queryrunner.query(`drop",{"_index":961,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["queryrunner.query(`set",{"_index":985,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["raw",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":70,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{}}}],["references",{"_index":739,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["reflect",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":963,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh_token",{"_index":950,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_cookie",{"_index":215,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_expiration_date",{"_index":951,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{}}}],["refreshtoken",{"_index":252,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenexpirationdate",{"_index":994,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenguard",{"_index":210,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["refreshtokens(email",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshtokens(user",{"_index":198,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refreshtokenstrategy",{"_index":260,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"index.html":{}}}],["refreshtokenstrategy.fromcookie",{"_index":966,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["regex",{"_index":465,"title":{},"body":{"injectables/DateService.html":{}}}],["regexp(/\\d",{"_index":466,"title":{},"body":{"injectables/DateService.html":{}}}],["register",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["register(payload",{"_index":201,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["register(undefined",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register(userdata",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["registered",{"_index":1079,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["registereduser",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.email",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.id",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.password",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerpayload",{"_index":202,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["rel_fbe0e932e64303e1f63e3e16f5",{"_index":953,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["relations",{"_index":530,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["relations[include",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations[table",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relationtypes",{"_index":378,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"miscellaneous/typealiases.html":{}}}],["reload",{"_index":830,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["remove",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeexpiredtokens",{"_index":980,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["removeexpiredtokensevent",{"_index":990,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["removeoptions",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report",{"_index":641,"title":{},"body":{"entities/Project.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["report.controller.ts",{"_index":867,"title":{},"body":{"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["report.controller.ts:19",{"_index":871,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:31",{"_index":872,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:45",{"_index":874,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:62",{"_index":870,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["report.module.ts",{"_index":888,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["report.project",{"_index":642,"title":{},"body":{"entities/Project.html":{}}}],["report.service.ts",{"_index":891,"title":{},"body":{"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["report.service.ts:16",{"_index":893,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:22",{"_index":898,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:30",{"_index":899,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:46",{"_index":900,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:60",{"_index":896,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.ts",{"_index":848,"title":{},"body":{"entities/ProjectReport.html":{},"coverage.html":{}}}],["report.ts:25",{"_index":856,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:28",{"_index":863,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:31",{"_index":861,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:34",{"_index":854,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:37",{"_index":855,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:40",{"_index":857,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:43",{"_index":858,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:46",{"_index":860,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report_date",{"_index":507,"title":{},"body":{"entities/MilestoneEstimate.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["report_interval",{"_index":637,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["reportdate",{"_index":495,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/ProjectReport.html":{}}}],["reportinterval",{"_index":618,"title":{},"body":{"entities/Project.html":{}}}],["reports",{"_index":619,"title":{},"body":{"entities/Project.html":{}}}],["repository",{"_index":560,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["repository.provider.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":457,"title":{},"body":{"injectables/DateService.html":{}}}],["representing",{"_index":410,"title":{},"body":{"injectables/DateService.html":{}}}],["req",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies",{"_index":66,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies[access_token_cookie",{"_index":68,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["req.cookies[refresh_token_cookie",{"_index":965,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["request",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"miscellaneous/variables.html":{}}}],["request.exception",{"_index":822,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["request.exception.ts",{"_index":351,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:5",{"_index":354,"title":{},"body":{"classes/BadRequestException.html":{}}}],["request.query.fields",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.fields[table",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter[field",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.include",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requires",{"_index":1040,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["res",{"_index":188,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.clearcookie(access_token_cookie",{"_index":246,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.clearcookie(refresh_token_cookie",{"_index":247,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.cookie(access_token_cookie",{"_index":229,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.cookie(refresh_token_cookie",{"_index":237,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reset",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["response",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{}}}],["responsebody",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":228,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["result.accesstoken",{"_index":230,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["result.affected",{"_index":244,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["result.refreshtoken",{"_index":238,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["resulted",{"_index":575,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["results",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":675,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["routes/authentication/authentication.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/authentication/entities",{"_index":1024,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"entities/User.html":{}}}],["routes/authentication/services",{"_index":58,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["routes/milestoneestimate/entities",{"_index":544,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{}}}],["routes/milestoneestimate/milestone",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/milestoneestimate/services",{"_index":543,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["routes/profile/profile.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/project/entities",{"_index":660,"title":{},"body":{"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/ProjectService.html":{},"entities/User.html":{}}}],["routes/project/project.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/project/services",{"_index":662,"title":{},"body":{"controllers/ProjectController.html":{}}}],["routes/projectmember/entities",{"_index":646,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{}}}],["routes/projectmember/project",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/projectmember/services",{"_index":697,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["routes/projectmilestone/entities",{"_index":517,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{}}}],["routes/projectmilestone/project",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/projectmilestone/services",{"_index":790,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["routes/projectreport/entities",{"_index":647,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["routes/projectreport/project",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["routes/projectreport/services",{"_index":876,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["routes/user/entities",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/TokenWhitelist.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["routes/user/services",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["routes/user/user.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{}}}],["row",{"_index":579,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["row.exception",{"_index":820,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["row.exception.ts",{"_index":572,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["row.exception.ts:5",{"_index":573,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rows",{"_index":576,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rxjs",{"_index":208,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["samesite",{"_index":233,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["save",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saveoptions",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["secretorkey",{"_index":76,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["secure",{"_index":232,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["select",{"_index":528,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sequence_number",{"_index":862,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["sequencenumber",{"_index":852,"title":{},"body":{"entities/ProjectReport.html":{}}}],["services",{"_index":267,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["services/crypto.service",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["services/date.service",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/TokenWhitelistService.html":{}}}],["services/services.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["servicesmodule",{"_index":149,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["set",{"_index":982,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["setzone('europe/berlin",{"_index":470,"title":{},"body":{"injectables/DateService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/ServicesModule.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["sparsefieldsets",{"_index":537,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sparsefieldsets(milestoneestimate",{"_index":547,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["sparsefieldsets(project",{"_index":665,"title":{},"body":{"controllers/ProjectController.html":{}}}],["sparsefieldsets(projectmember",{"_index":700,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["sparsefieldsets(projectmilestone",{"_index":793,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["sparsefieldsets(projectreport",{"_index":879,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["sparsefieldsets(user",{"_index":1089,"title":{},"body":{"controllers/UserController.html":{}}}],["sparsefieldsetsfactory",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sql",{"_index":363,"title":{},"body":{"classes/BadRequestException.html":{}}}],["src/.../access",{"_index":1266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../authentication.controller.ts",{"_index":1262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":1270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base",{"_index":1271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base.exception.ts",{"_index":1269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.ts",{"_index":1263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../filters.decorator.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../includes.decorator.ts",{"_index":1265,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1268,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../milestone",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../primary",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project",{"_index":1223,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../promise",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../refresh",{"_index":1267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../repository",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sparse",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token",{"_index":1272,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["src/authentication/authentication.module.ts",{"_index":261,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/controllers/authentication.controller.ts",{"_index":179,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/authentication/controllers/authentication.controller.ts:36",{"_index":204,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/controllers/authentication.controller.ts:44",{"_index":191,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/controllers/authentication.controller.ts:74",{"_index":196,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/controllers/authentication.controller.ts:96",{"_index":200,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/entities/token",{"_index":991,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["src/authentication/services/authentication.service.ts",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/authentication/services/authentication.service.ts:124",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:139",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:32",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:40",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:70",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:92",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/authentication.service.ts:96",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/services/token",{"_index":1006,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/base",{"_index":366,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/decorators/filters.decorator.ts",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/includes.decorator.ts",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/primary",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/decorators/sparse",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environment.ts",{"_index":1274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/exceptions/bad",{"_index":350,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["src/exceptions/base.exception.ts",{"_index":382,"title":{},"body":{"classes/BaseException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/exceptions/base.exception.ts:9",{"_index":388,"title":{},"body":{"classes/BaseException.html":{}}}],["src/exceptions/incorrect",{"_index":480,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["src/exceptions/no",{"_index":570,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts",{"_index":1036,"title":{},"body":{"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts:5",{"_index":1037,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["src/exceptions/user",{"_index":1073,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["src/filters/all",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/guards/access",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/guards/refresh",{"_index":962,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1711999577974",{"_index":942,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"coverage.html":{}}}],["src/migrations/1711999597974",{"_index":974,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{},"coverage.html":{}}}],["src/migrations/1714254731674",{"_index":1067,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{},"coverage.html":{}}}],["src/migrations/1717365845661",{"_index":705,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"coverage.html":{}}}],["src/mocks/providers/milestone",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/providers/project",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/providers/repository",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/providers/token",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/providers/user",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/profile/controllers/profile.controller.ts",{"_index":584,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/controllers/profile.controller.ts:21",{"_index":590,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/controllers/profile.controller.ts:35",{"_index":592,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/controllers/profile.controller.ts:53",{"_index":595,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":610,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/project/controllers/project.controller.ts",{"_index":650,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/project/controllers/project.controller.ts:19",{"_index":656,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/controllers/project.controller.ts:31",{"_index":657,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/controllers/project.controller.ts:45",{"_index":655,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/controllers/project.controller.ts:55",{"_index":659,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/entities/project.ts",{"_index":612,"title":{},"body":{"entities/Project.html":{},"coverage.html":{}}}],["src/project/entities/project.ts:31",{"_index":620,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:34",{"_index":630,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:41",{"_index":634,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:44",{"_index":632,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:47",{"_index":639,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:50",{"_index":644,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:53",{"_index":636,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:58",{"_index":627,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:63",{"_index":643,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.ts:68",{"_index":629,"title":{},"body":{"entities/Project.html":{}}}],["src/project/member/controllers/project",{"_index":691,"title":{},"body":{"controllers/ProjectMemberController.html":{},"coverage.html":{}}}],["src/project/member/entities/project",{"_index":672,"title":{},"body":{"entities/ProjectMember.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/project/member/project",{"_index":750,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["src/project/member/services/project",{"_index":753,"title":{},"body":{"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["src/project/milestone/controllers/project",{"_index":782,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"coverage.html":{}}}],["src/project/milestone/entities/project",{"_index":770,"title":{},"body":{"entities/ProjectMilestone.html":{},"coverage.html":{}}}],["src/project/milestone/estimate/controllers/milestone",{"_index":521,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["src/project/milestone/estimate/entities/milestone",{"_index":489,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["src/project/milestone/estimate/milestone",{"_index":554,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["src/project/milestone/estimate/services/milestone",{"_index":557,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["src/project/milestone/project",{"_index":801,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["src/project/milestone/services/project",{"_index":804,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["src/project/project.module.ts",{"_index":841,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/project/report/controllers/project",{"_index":866,"title":{},"body":{"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["src/project/report/entities/project",{"_index":847,"title":{},"body":{"entities/ProjectReport.html":{},"coverage.html":{}}}],["src/project/report/project",{"_index":887,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["src/project/report/services/project",{"_index":890,"title":{},"body":{"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["src/project/services/project.service.ts",{"_index":908,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/project/services/project.service.ts:113",{"_index":918,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/services/project.service.ts:21",{"_index":912,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/services/project.service.ts:29",{"_index":916,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/services/project.service.ts:51",{"_index":917,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/services/project.service.ts:67",{"_index":915,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/crypto.service.ts",{"_index":393,"title":{},"body":{"injectables/CryptoService.html":{},"coverage.html":{}}}],["src/services/crypto.service.ts:7",{"_index":396,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/services/date.service.ts",{"_index":399,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/services/date.service.ts:10",{"_index":455,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:29",{"_index":445,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:56",{"_index":405,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/services.module.ts",{"_index":970,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/strategies/access",{"_index":20,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/strategies/refresh",{"_index":964,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tokens/index.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/index.ts",{"_index":1275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/user/controllers/user.controller.ts",{"_index":1081,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controllers/user.controller.ts:18",{"_index":1083,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:30",{"_index":1086,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/entities/user.ts",{"_index":1043,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.ts:35",{"_index":1055,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:38",{"_index":1052,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:41",{"_index":1057,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:44",{"_index":1054,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:47",{"_index":1056,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:50",{"_index":1053,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:53",{"_index":1058,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:56",{"_index":1059,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:59",{"_index":1061,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.ts:62",{"_index":1064,"title":{},"body":{"entities/User.html":{}}}],["src/user/services/user.service.ts",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/services/user.service.ts:17",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:23",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:31",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:47",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:51",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:55",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:63",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:69",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":1104,"title":{},"body":{"modules/UserModule.html":{}}}],["src/utils/promise",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{}}}],["status",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["statuscode",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["storedprocedureandevent.ts",{"_index":975,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{},"coverage.html":{}}}],["storedprocedureandevent.ts:24",{"_index":977,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["storedprocedureandevent.ts:4",{"_index":976,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["storedprocedureandevent.ts:6",{"_index":978,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["storedprocedureandevent1711999597974",{"_index":973,"title":{"classes/StoredProcedureAndEvent1711999597974.html":{}},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{},"coverage.html":{}}}],["strategies/index",{"_index":268,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategy",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(subcode).padstart(3",{"_index":391,"title":{},"body":{"classes/BaseException.html":{}}}],["string).split",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string).tostring(crypto.enc.hex",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["sub",{"_index":61,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["subcode",{"_index":384,"title":{},"body":{"classes/BaseException.html":{}}}],["subentity",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getcolumns",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getrelationtypes",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":221,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"miscellaneous/typealiases.html":{}}}],["successhandler",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":71,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseException.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["super(httpstatus.bad_request",{"_index":357,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["super(httpstatus.unauthorized",{"_index":1038,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["support",{"_index":1252,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1253,"title":{},"body":{"modules.html":{}}}],["t",{"_index":1276,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["t').concat('z",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["table",{"_index":718,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.split",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.length",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.slice(1",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables[0",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":407,"title":{},"body":{"injectables/DateService.html":{}}}],["this.authenticationservice.login(payload.email",{"_index":226,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authenticationservice.refreshtokens(useremail",{"_index":254,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.crypto.hash(accesstoken",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.crypto.hash(password",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.crypto.hash(refreshtoken",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.date.getcurrenttimestampwithoffset",{"_index":1028,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.getcurrenttimestampwithoffset('0m').replace",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.date.getexpirationdatewithoffset(env.access_token_expiration",{"_index":236,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.date.getexpirationdatewithoffset(env.refresh_token_expiration",{"_index":239,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.findbyuser(userid",{"_index":1026,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.generatetokens(registereduser.id",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(user.id",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(userwithoutpassword.id",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getexpirationdatewithoffset(offsetwithunit",{"_index":475,"title":{},"body":{"injectables/DateService.html":{}}}],["this.getrelations().concat(...this.getcolumns",{"_index":381,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["this.httpadapterhost",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.id",{"_index":519,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{}}}],["this.jwtservice.signasync",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.memberservice.createall",{"_index":937,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.milestoneestimaterepository.find",{"_index":567,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimaterepository.findone",{"_index":568,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneservice.createall",{"_index":932,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmemberrepository.create(memberpartial",{"_index":768,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.find",{"_index":765,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.findone",{"_index":766,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmilestonerepository.create(milestonepartial",{"_index":832,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.create(payload",{"_index":828,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.find",{"_index":824,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.findone",{"_index":825,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.save(entity",{"_index":829,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.update",{"_index":835,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectreportrepository.create(partialreport",{"_index":906,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.find",{"_index":902,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.findone",{"_index":903,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.update",{"_index":904,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportservice.patchone(id",{"_index":883,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["this.projectrepository.create",{"_index":928,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.find",{"_index":925,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.findone",{"_index":926,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.update",{"_index":940,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.tokenwhitelistrepository.create",{"_index":1030,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.delete",{"_index":1032,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.findone",{"_index":1033,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.remove(tokenwhitelistentry",{"_index":1027,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistservice.delete(userid",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.findbyuser(user.id",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.update",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.verifyaccesstoken(payload.sub",{"_index":86,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["this.tokenwhitelistservice.verifyrefreshtoken(payload.sub",{"_index":967,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["this.units[unit",{"_index":472,"title":{},"body":{"injectables/DateService.html":{}}}],["this.updatewhitelistedtokens",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userrepository.create(userdata",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyemail(email",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.findone(matriculationnumber",{"_index":1093,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throw",{"_index":87,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{}}}],["time",{"_index":412,"title":{},"body":{"injectables/DateService.html":{}}}],["time_zone",{"_index":983,"title":{},"body":{"classes/StoredProcedureAndEvent1711999597974.html":{}}}],["timestamp",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DateService.html":{}}}],["tinyint",{"_index":729,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{}}}],["toformat('yyyy",{"_index":477,"title":{},"body":{"injectables/DateService.html":{}}}],["tojsdate",{"_index":473,"title":{},"body":{"injectables/DateService.html":{}}}],["token",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["token.guard",{"_index":541,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["token.strategy.ts",{"_index":21,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token.strategy.ts:18",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:26",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:39",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token_whitelist",{"_index":719,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["token_whitelist_repository_token",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenpair",{"_index":1049,"title":{},"body":{"entities/User.html":{}}}],["tokenpairandowner",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tokens/index",{"_index":60,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["tokensresponse",{"_index":213,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenswithuserresponse",{"_index":214,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenwhitelist",{"_index":265,"title":{"entities/TokenWhitelist.html":{}},"body":{"modules/AuthenticationModule.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"coverage.html":{}}}],["tokenwhitelist.user",{"_index":1063,"title":{},"body":{"entities/User.html":{}}}],["tokenwhitelistentry",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.accesstoken",{"_index":1034,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.refreshtoken",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistrepository",{"_index":1013,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistservice",{"_index":32,"title":{"injectables/TokenWhitelistService.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["true",{"_index":79,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["ts",{"_index":463,"title":{},"body":{"injectables/DateService.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1260,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":380,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["typeormmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([milestoneestimate",{"_index":556,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":846,"title":{},"body":{"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([projectmember",{"_index":752,"title":{},"body":{"modules/ProjectMemberModule.html":{},"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([projectmilestone",{"_index":803,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([projectreport",{"_index":889,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["typeormmodule.forfeature([tokenwhitelist",{"_index":271,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1105,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["types/index",{"_index":598,"title":{},"body":{"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["unauthorized",{"_index":1039,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["unauthorizedexception",{"_index":50,"title":{"classes/UnauthorizedException.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["undefined",{"_index":386,"title":{},"body":{"classes/BaseException.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{}}}],["unique",{"_index":952,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{}}}],["unit",{"_index":413,"title":{},"body":{"injectables/DateService.html":{}}}],["units",{"_index":401,"title":{},"body":{"injectables/DateService.html":{}}}],["unknown",{"_index":49,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":709,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["up(queryrunner",{"_index":714,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["update",{"_index":653,"title":{},"body":{"controllers/ProjectController.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":658,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["update(undefined",{"_index":1018,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["updated",{"_index":834,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updated.affected",{"_index":836,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updatedfields",{"_index":817,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["updateprofile",{"_index":588,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":593,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatewhitelistedtokens",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updatewhitelistedtokens(undefined",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["used",{"_index":414,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":207,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard",{"_index":240,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard)@post('logout",{"_index":195,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard",{"_index":248,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard)@post('refresh",{"_index":199,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":197,"title":{"entities/User.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAcademicTitle1714254731674.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.id",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.matriculationnumber",{"_index":685,"title":{},"body":{"entities/ProjectMember.html":{}}}],["user.password",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["user.projects",{"_index":635,"title":{},"body":{"entities/Project.html":{}}}],["user.save",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["user.tokenpair",{"_index":1001,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["user['email",{"_index":251,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['refreshtoken",{"_index":253,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['sub",{"_index":670,"title":{},"body":{"controllers/ProjectController.html":{}}}],["user[attribute",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["user\\`(\\`id",{"_index":740,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["user_repository_token",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useracademictitle.ts",{"_index":1068,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{},"coverage.html":{}}}],["useracademictitle.ts:4",{"_index":1069,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{}}}],["useracademictitle.ts:6",{"_index":1071,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{}}}],["useracademictitle.ts:94",{"_index":1070,"title":{},"body":{"classes/UserAcademicTitle1714254731674.html":{}}}],["useracademictitle1714254731674",{"_index":1066,"title":{"classes/UserAcademicTitle1714254731674.html":{}},"body":{"classes/UserAcademicTitle1714254731674.html":{},"coverage.html":{}}}],["useralreadyexistsexception",{"_index":300,"title":{"classes/UserAlreadyExistsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["useralreadyexistsexception(email",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usercontroller",{"_index":1080,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["userdoesnotexistexception",{"_index":1094,"title":{"classes/UserDoesNotExistException.html":{}},"body":{"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["useremail",{"_index":250,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["userentity",{"_index":599,"title":{},"body":{"controllers/ProfileController.html":{}}}],["userfactory",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"injectables/TokenWhitelistService.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["usermodule",{"_index":150,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["userrepository",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1082,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":276,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["userwithoutpassword",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.email",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.id",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.password",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["utils/promise",{"_index":217,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["uuid",{"_index":721,"title":{},"body":{"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{},"miscellaneous/functions.html":{}}}],["uuid.decorator",{"_index":516,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["uuid.decorator.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(@req",{"_index":80,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(request",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["value",{"_index":418,"title":{},"body":{"injectables/DateService.html":{},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"classes/StoredProcedureAndEvent1711999597974.html":{},"classes/UserAcademicTitle1714254731674.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["varchar",{"_index":1051,"title":{},"body":{"entities/User.html":{}}}],["varchar(255",{"_index":948,"title":{},"body":{"classes/ProjektarbeitAPI1711999577974.html":{},"classes/UserAcademicTitle1714254731674.html":{}}}],["variable",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1277,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":84,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["verifyaccesstoken",{"_index":1009,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyaccesstoken(userid",{"_index":1020,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken",{"_index":1010,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken(userid",{"_index":1022,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["version",{"_index":1255,"title":{},"body":{"properties.html":{}}}],["viewer",{"_index":688,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1711999577974.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["where.members",{"_index":923,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.owner",{"_index":921,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.password",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["where?.password",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["whitelist",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["whitelist.service",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["whitelist.service.ts",{"_index":1007,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whitelist.service.ts:18",{"_index":1012,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:26",{"_index":1019,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:53",{"_index":1015,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:61",{"_index":1017,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:71",{"_index":1021,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:80",{"_index":1023,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.ts",{"_index":992,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["whitelist.ts:12",{"_index":995,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:18",{"_index":996,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:21",{"_index":998,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:27",{"_index":999,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:31",{"_index":1002,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:9",{"_index":997,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["wraps",{"_index":417,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["wrong",{"_index":487,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["yes",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yyyy",{"_index":429,"title":{},"body":{"injectables/DateService.html":{}}}],["zoom",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/access-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/access-token.strategy.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (req: Request) => string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Express.Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Express.Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Routes/Authentication/services';\nimport { ACCESS_TOKEN_COOKIE } from '@Tokens/index';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n\tpublic static fromCookie() {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, ACCESS_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[ACCESS_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tAccessTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_ACCESS_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Express.Request, payload: JwtPayload) {\n\t\tconst accessToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\n\t\tconst verified = await this.tokenWhitelistService.verifyAccessToken(payload.sub, accessToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost, date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/filters/all-exceptions.filter.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/all-exceptions.filter.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\nimport { DateService } from '@Services/date.service';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\tconstructor(\n\t\tprivate readonly httpAdapterHost: HttpAdapterHost,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\tcatch(exception: any, host: ArgumentsHost): void {\n\t\tconst { httpAdapter } = this.httpAdapterHost;\n\t\tconst context = host.switchToHttp();\n\t\tconst statusCode =\n\t\t\texception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tconst responseBody = {\n\t\t\ttimestamp: this.date.getCurrentTimestampWithOffset('0m').replace(' ', 'T').concat('Z'),\n\t\t\tpath: httpAdapter.getRequestUrl(context.getRequest()),\n\t\t\t...(Object.hasOwn(exception, 'response') ? exception.response : exception),\n\t\t\tstatus: statusCode,\n\t\t};\n\n\t\thttpAdapter.reply(context.getResponse(), responseBody, statusCode);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                        \n                            MilestoneEstimateModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            ProjectMemberModule\n                        \n                        \n                            ProjectMilestoneModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            ProjectReportModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DataSource } from 'typeorm';\n\nimport config from './config';\nimport { AuthenticationModule } from '@Routes/Authentication/authentication.module';\nimport { MilestoneEstimateModule } from '@Routes/MilestoneEstimate/milestone-estimate.module';\nimport { ProfileModule } from '@Routes/Profile/profile.module';\nimport { ProjectMemberModule } from '@Routes/ProjectMember/project-member.module';\nimport { ProjectMilestoneModule } from '@Routes/ProjectMilestone/project-milestone.module';\nimport { ProjectModule } from '@Routes/Project/project.module';\nimport { ProjectReportModule } from '@Routes/ProjectReport/project-report.module';\nimport { UserModule } from '@Routes/User/user.module';\nimport { ServicesModule } from '@Services/services.module';\n\n@Module({\n\timports: [\n\t\tTypeOrmModule.forRootAsync({\n\t\t\tuseFactory: () => config,\n\t\t}),\n\t\tAuthenticationModule,\n\t\tMilestoneEstimateModule,\n\t\tProfileModule,\n\t\tProjectMemberModule,\n\t\tProjectMilestoneModule,\n\t\tProjectModule,\n\t\tProjectReportModule,\n\t\tUserModule,\n\t\tServicesModule,\n\t],\n})\nexport class AppModule {\n\tconstructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/controllers/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                refreshTokens\n                            \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: AuthenticationPayload, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/controllers/authentication.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            AuthenticationPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/controllers/authentication.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/controllers/authentication.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/controllers/authentication.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res, UseGuards } from '@nestjs/common';\n\nimport { Response } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { User } from '@Decorators/user.decorator';\nimport env from '@Environment';\nimport { AccessTokenGuard, RefreshTokenGuard } from '@Guards/index';\nimport {\n\tAuthenticationService,\n\tRegisterPayload,\n\tTokensResponse,\n\tTokensWithUserResponse,\n} from '@Routes/Authentication/services';\nimport { DateService } from '@Services/date.service';\nimport { ACCESS_TOKEN_COOKIE, REFRESH_TOKEN_COOKIE } from '@Tokens/index';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\ntype AuthenticationPayload = {\n\temail: string;\n\tpassword: string;\n};\n\ntype LogoutResult = {\n\tsuccess: boolean;\n};\n\n@Controller('auth')\nexport class AuthenticationController {\n\tconstructor(\n\t\tprivate readonly authenticationService: AuthenticationService,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\t@Post('register')\n\tregister(\n\t\t@Body()\n\t\tpayload: RegisterPayload,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.register(payload));\n\t}\n\n\t@Post('login')\n\tlogin(\n\t\t@Body()\n\t\tpayload: AuthenticationPayload,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.login(payload.email, payload.password),\n\t\t\t(result) => {\n\t\t\t\tres.cookie(ACCESS_TOKEN_COOKIE, result.accessToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.ACCESS_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\tres.cookie(REFRESH_TOKEN_COOKIE, result.refreshToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.REFRESH_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n\n\t@UseGuards(AccessTokenGuard)\n\t@Post('logout')\n\tlogout(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.logout(user['sub']), (result) => {\n\t\t\tlet success = false;\n\n\t\t\tif (result.affected && result.affected === 1) success = true;\n\n\t\t\tif (success) {\n\t\t\t\tres.clearCookie(ACCESS_TOKEN_COOKIE);\n\t\t\t\tres.clearCookie(REFRESH_TOKEN_COOKIE);\n\t\t\t}\n\n\t\t\treturn { success } as LogoutResult;\n\t\t}) as Observable;\n\t}\n\n\t@UseGuards(RefreshTokenGuard)\n\t@Post('refresh')\n\trefreshTokens(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\tconst userEmail = user['email'];\n\t\tconst refreshToken = user['refreshToken'];\n\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.refreshTokens(userEmail, refreshToken),\n\t\t\t(result) => {\n\t\t\t\tres.cookie(ACCESS_TOKEN_COOKIE, result.accessToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.ACCESS_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\tres.cookie(REFRESH_TOKEN_COOKIE, result.refreshToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.REFRESH_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CryptoService\n                        \n                        \n                            DateService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                        \n                            TokenWhitelistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AuthenticationController } from './controllers';\nimport { TokenWhitelist } from './entities';\nimport { UserModule } from '@Routes/User/user.module';\nimport { AuthenticationService, TokenWhitelistService } from './services';\nimport { AccessTokenStrategy, RefreshTokenStrategy } from '@Strategies/index';\nimport { CryptoService } from '@Services/crypto.service';\nimport { DateService } from '@Services/date.service';\n\n@Module({\n\timports: [\n\t\tUserModule,\n\t\tPassportModule,\n\t\tJwtModule.register({}),\n\t\tTypeOrmModule.forFeature([TokenWhitelist]),\n\t],\n\tproviders: [\n\t\tAuthenticationService,\n\t\tTokenWhitelistService,\n\t\tCryptoService,\n\t\tDateService,\n\t\tAccessTokenStrategy,\n\t\tRefreshTokenStrategy,\n\t],\n\texports: [AuthenticationService],\n\tcontrollers: [AuthenticationController],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTokens\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateWhitelistedTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, tokenWhitelistService: TokenWhitelistService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/services/authentication.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(userId: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(email: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RegisterPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWhitelistedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWhitelistedTokens(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/authentication.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\n\nimport { DeepPartial, DeleteResult } from 'typeorm';\n\nimport env from '@Environment';\nimport {\n\tBadRequestException,\n\tIncorrectCredentialsException,\n\tUserAlreadyExistsException,\n} from '@Exceptions/index';\nimport { UserService } from '@Routes/User/services';\nimport { User } from '@Routes/User/entities';\nimport { TokenPairAndOwner, TokenWhitelistService } from './token-whitelist.service';\nimport { CryptoService } from '@Services/crypto.service';\n\nexport type RegisterPayload = DeepPartial & {\n\temail: string;\n\tpassword: string;\n};\n\nexport type TokensResponse = {\n\taccessToken: string;\n\trefreshToken: string;\n};\n\nexport type TokensWithUserResponse = TokensResponse & {\n\tuser: DeepPartial;\n};\n\n@Injectable()\nexport class AuthenticationService {\n\tconstructor(\n\t\tprivate readonly userService: UserService,\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly tokenWhitelistService: TokenWhitelistService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync register({\n\t\temail,\n\t\tpassword,\n\t\t...userData\n\t}: RegisterPayload): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (user !== null) {\n\t\t\tthrow new UserAlreadyExistsException(email, null);\n\t\t}\n\n\t\tconst registeredUser = await this.userService.register({\n\t\t\temail,\n\t\t\tpassword: this.crypto.hash(password),\n\t\t\t...userData,\n\t\t});\n\t\tdelete registeredUser.password;\n\n\t\tconst tokens = await this.generateTokens(registeredUser.id, registeredUser.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: registeredUser.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: registeredUser,\n\t\t};\n\t}\n\n\tasync login(email: string, password: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user || user.password !== this.crypto.hash(password)) {\n\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t}\n\n\t\tconst userWithoutPassword: DeepPartial = user;\n\t\tdelete userWithoutPassword.password;\n\n\t\tconst tokens = await this.generateTokens(userWithoutPassword.id, userWithoutPassword.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: userWithoutPassword.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: userWithoutPassword,\n\t\t};\n\t}\n\n\tlogout(userId: string): Promise {\n\t\treturn this.tokenWhitelistService.delete(userId);\n\t}\n\n\tasync refreshTokens(email: string, refreshToken: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst tokenWhitelistEntry = await this.tokenWhitelistService.findByUser(user.id);\n\n\t\tif (!tokenWhitelistEntry) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\n\t\tif (hashedRefreshedToken !== tokenWhitelistEntry.refreshToken) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst tokens = await this.generateTokens(user.id, user.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: user.id,\n\t\t});\n\n\t\treturn tokens;\n\t}\n\n\tasync updateWhitelistedTokens({\n\t\trefreshToken,\n\t\taccessToken,\n\t\tuserId,\n\t}: TokenPairAndOwner): Promise {\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\n\t\tawait this.tokenWhitelistService.update({\n\t\t\tuserId,\n\t\t\taccessToken: hashedAccessToken,\n\t\t\trefreshToken: hashedRefreshedToken,\n\t\t});\n\t}\n\n\tasync generateTokens(userId: string, email: string): Promise {\n\t\ttry {\n\t\t\tconst [accessToken, refreshToken] = await Promise.all([\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_ACCESS_SECRET,\n\t\t\t\t\t\texpiresIn: env.ACCESS_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_REFRESH_SECRET,\n\t\t\t\t\t\texpiresIn: env.REFRESH_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\treturn {\n\t\t\t\taccessToken,\n\t\t\t\trefreshToken,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new BadRequestException(error);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestException.html":{"url":"classes/BadRequestException.html","title":"class - BadRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/bad-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/bad-request.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class BadRequestException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 1, {\n\t\t\tmessage: 'Bad Request',\n\t\t\tdescription: 'An error occured while performing the sql query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithExtras.html":{"url":"classes/BaseEntityWithExtras.html","title":"class - BaseEntityWithExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithExtras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/base-entity-with-extras.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColumns\n                            \n                            \n                                    Static\n                                getProperties\n                            \n                            \n                                    Static\n                                getRelations\n                            \n                            \n                                    Static\n                                getRelationTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getColumns\n                        \n                    \n                \n            \n            \n                \n                        \n                    getColumns()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProperties()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelationTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelationTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         RelationTypes\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport type RelationTypes = {\n\t[property: string]: typeof BaseEntityWithExtras;\n};\n\nexport class BaseEntityWithExtras extends BaseEntity {\n\tpublic static getRelationTypes(): RelationTypes {\n\t\treturn {};\n\t}\n\n\tpublic static getRelations(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getColumns(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getProperties(): string[] {\n\t\treturn this.getRelations().concat(...this.getColumns());\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseException.html":{"url":"classes/BaseException.html","title":"class - BaseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/base.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: HttpStatus, subCode: number, undefined: Options)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/base.exception.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\ntype Options = {\n\tmessage: string;\n\tdescription: string;\n\tcause: any;\n};\n\nexport class BaseException extends HttpException {\n\tconstructor(status: HttpStatus, subCode: number, { message, description, cause }: Options) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tstatus,\n\t\t\t\tmessage,\n\t\t\t\tdescription,\n\t\t\t\tcode: `HSEL-${status}-${String(subCode).padStart(3, '0')}`,\n\t\t\t},\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tcause,\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptoService.html":{"url":"injectables/CryptoService.html","title":"injectable - CryptoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/crypto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(source: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/crypto.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class CryptoService {\n\thash(source: string): string {\n\t\treturn crypto.SHA256(source).toString(crypto.enc.Hex);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/date.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                UNITS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTimestampWithOffset\n                            \n                            \n                                getExpirationDateWithOffset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentTimestampWithOffset\n                        \n                    \n                \n            \n            \n                \ngetCurrentTimestampWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:56\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. It wraps the function getExpirationDateWithOffset and\nreturns the value as a string. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time in the following format:\n// yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\nconst accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string of the current timestamp incremented by the given offset and time unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpirationDateWithOffset\n                        \n                    \n                \n            \n            \n                \ngetExpirationDateWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:29\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time as a JavaScript date object\nconst accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                A javascript Date of the current time incremented by the given offset.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        UNITS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/services/date.service.ts:10\n                        \n                    \n\n            \n                \n                    This object contains the representation for one day and one minute in milliseconds.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DateTime } from 'luxon';\n\n@Injectable()\nexport class DateService {\n\t/**\n\t * This object contains the representation for one day and one minute in milliseconds.\n\t */\n\tprivate readonly UNITS = {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t};\n\n\t/**\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time as a JavaScript date object\n\t * const accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A javascript Date of the current time incremented by the given offset.\n\t */\n\tgetExpirationDateWithOffset(offsetWithUnit: string): Date {\n\t\tconst regex = new RegExp(/\\d*/);\n\t\tconst offset = parseInt(regex.exec(offsetWithUnit)[0]);\n\t\tconst unit = offsetWithUnit.replace(offset.toString(), '');\n\n\t\treturn DateTime.local()\n\t\t\t.setZone('Europe/Berlin')\n\t\t\t.plus(offset * (this.UNITS[unit] ?? 1))\n\t\t\t.toJSDate();\n\t}\n\n\t/**\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. It wraps the function `getExpirationDateWithOffset` and\n\t * returns the value as a string. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time in the following format:\n\t * // yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\n\t * const accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A string of the current timestamp incremented by the given offset and time unit.\n\t */\n\tgetCurrentTimestampWithOffset(offsetWithUnit: string): string {\n\t\tconst jsDate = this.getExpirationDateWithOffset(offsetWithUnit);\n\n\t\treturn DateTime.fromJSDate(jsDate)\n\t\t\t.setZone('Europe/Berlin')\n\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss', { locale: 'de-DE' });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectCredentialsException.html":{"url":"classes/IncorrectCredentialsException.html","title":"class - IncorrectCredentialsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectCredentialsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/incorrect-credentials.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/incorrect-credentials.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class IncorrectCredentialsException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 2, {\n\t\t\tmessage: 'Incorrect Credentials',\n\t\t\tdescription: 'The given password or the email address is wrong.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MilestoneEstimate.html":{"url":"entities/MilestoneEstimate.html","title":"entity - MilestoneEstimate","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MilestoneEstimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/estimate/entities/milestone-estimate.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                milestone\n                            \n                            \n                                    \n                                milestoneReached\n                            \n                            \n                                    \n                                reportDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'estimation_date', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/estimate/entities/milestone-estimate.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/estimate/entities/milestone-estimate.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectMilestone\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, m => m.estimates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/estimate/entities/milestone-estimate.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestoneReached\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'milestone_reached', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/estimate/entities/milestone-estimate.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/estimate/entities/milestone-estimate.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { ProjectMilestone } from '@Routes/ProjectMilestone/entities';\n\n@Entity('milestone_estimate')\nexport class MilestoneEstimate extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tmilestone: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['milestone'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'reportDate', 'estimationDate', 'milestoneReached'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ name: 'estimation_date', type: 'date' })\n\testimationDate: string;\n\n\t@Column({ name: 'milestone_reached', type: 'boolean' })\n\tmilestoneReached: boolean;\n\n\t@ManyToOne(() => ProjectMilestone, (m) => m.estimates)\n\tmilestone: ProjectMilestone;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MilestoneEstimateController.html":{"url":"controllers/MilestoneEstimateController.html","title":"controller - MilestoneEstimateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MilestoneEstimateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/estimate/controllers/milestone-estimate.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                milestone/estimates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/estimate/controllers/milestone-estimate.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/estimate/controllers/milestone-estimate.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations } from 'typeorm';\n\nimport { Filters, SparseFieldsets, Includes } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { MilestoneEstimateService } from '@Routes/MilestoneEstimate/services';\nimport { MilestoneEstimate } from '@Routes/MilestoneEstimate/entities';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('milestone/estimates')\nexport class MilestoneEstimateController {\n\tconstructor(private readonly milestoneEstimateService: MilestoneEstimateService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(MilestoneEstimate)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(MilestoneEstimate)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(MilestoneEstimate)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.findAll(where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(MilestoneEstimate)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(MilestoneEstimate)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(MilestoneEstimate)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.findOne(id, where, select, relations));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MilestoneEstimateModule.html":{"url":"modules/MilestoneEstimateModule.html","title":"module - MilestoneEstimateModule","body":"\n                   \n\n\n\n\n    Modules\n    MilestoneEstimateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/milestone/estimate/milestone-estimate.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MilestoneEstimateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MilestoneEstimateController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MilestoneEstimateController } from './controllers';\nimport { MilestoneEstimate } from './entities';\nimport { MilestoneEstimateService } from './services';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([MilestoneEstimate])],\n\tproviders: [MilestoneEstimateService],\n\tcontrollers: [MilestoneEstimateController],\n})\nexport class MilestoneEstimateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MilestoneEstimateService.html":{"url":"injectables/MilestoneEstimateService.html","title":"injectable - MilestoneEstimateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MilestoneEstimateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/estimate/services/milestone-estimate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(milestoneEstimateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/project/milestone/estimate/services/milestone-estimate.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        milestoneEstimateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/estimate/services/milestone-estimate.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/estimate/services/milestone-estimate.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { FindOptionsRelations, FindOptionsSelect, FindOptionsWhere, Repository } from 'typeorm';\n\nimport { MilestoneEstimate } from '@Routes/MilestoneEstimate/entities';\n\n@Injectable()\nexport class MilestoneEstimateService {\n\tconstructor(\n\t\t@InjectRepository(MilestoneEstimate)\n\t\tprivate milestoneEstimateRepository: Repository,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.milestoneEstimateRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.milestoneEstimateRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoAffectedRowException.html":{"url":"classes/NoAffectedRowException.html","title":"class - NoAffectedRowException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoAffectedRowException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/no-affected-row.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/no-affected-row.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class NoAffectedRowException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 3, {\n\t\t\tmessage: 'The request resulted in no affected rows.',\n\t\t\tdescription:\n\t\t\t\t'This exception can either be caused since actually no row was affected or the database ' +\n\t\t\t\t'type does not provide the information if rows were affected by the query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/controllers/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                getProfileById\n                            \n                            \n                                    \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/profile/controllers/profile.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileById(id: string, where: FindOptionsWhere)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/profile/controllers/profile.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/profile/controllers/profile.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsWhere } from 'typeorm';\n\nimport { User } from '@Decorators/user.decorator';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { UserService } from '@Routes/User/services';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\nimport { Nullable, Success } from '@Types/index';\nimport { User as UserEntity } from '@Routes/User/entities';\nimport { Filters } from '@Decorators/filters.decorator';\nimport { IncorrectCredentialsException } from '@Exceptions/incorrect-credentials.exception';\n\n@UseGuards(AccessTokenGuard)\n@Controller('profile')\nexport class ProfileController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tgetProfile(\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findById(user['sub']), (user) => {\n\t\t\tif (user) {\n\t\t\t\tdelete user.password;\n\t\t\t}\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Get(':id')\n\tgetProfileById(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(UserEntity)\n\t\twhere: FindOptionsWhere,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findByIdAndCredentials(id, where), (user) => {\n\t\t\tif (!user) {\n\t\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t\t}\n\n\t\t\tdelete user.password;\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Patch(':id')\n\tupdateProfile(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.update(id, payload), (user) => {\n\t\t\tif (user) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ProfileController } from './controllers';\nimport { UserModule } from '@Routes/User/user.module';\n\n@Module({\n\timports: [UserModule],\n\tproviders: [],\n\tcontrollers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/entities/project.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                members\n                            \n                            \n                                    \n                                milestones\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                officialEnd\n                            \n                            \n                                    \n                                officialStart\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                reportInterval\n                            \n                            \n                                    \n                                reports\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, member => member.project, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMilestone[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, milestone => milestone.project, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_end', nullable: true, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_start', type: 'date', default: () => CURRENT_DATE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.projects)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_interval', default: 7})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectReport[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, report => report.project, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { User } from '@Routes/User/entities';\nimport { ProjectMember } from '@Routes/ProjectMember/entities';\nimport { ProjectReport } from '@Routes/ProjectReport/entities';\nimport { ProjectMilestone } from '@Routes/ProjectMilestone/entities';\nimport { Nullable } from '@Types/index';\n\n@Entity('project')\nexport class Project extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\towner: User,\n\t\t\tmembers: ProjectMember,\n\t\t\treports: ProjectReport,\n\t\t\tmilestones: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['owner', 'members', 'reports', 'milestones'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name', 'officialStart', 'officialEnd', 'reportInterval', 'type'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@Column({\n\t\tname: 'official_start',\n\t\ttype: 'date',\n\t\tdefault: () => 'CURRENT_DATE',\n\t})\n\tofficialStart: string;\n\n\t@Column({ name: 'official_end', nullable: true, type: 'date' })\n\tofficialEnd: Nullable;\n\n\t@Column({ name: 'report_interval', default: 7 })\n\treportInterval: number;\n\n\t@Column()\n\ttype: string;\n\n\t@ManyToOne(() => User, (user) => user.projects)\n\towner: User;\n\n\t@OneToMany(() => ProjectMember, (member) => member.project, {\n\t\tonDelete: 'CASCADE',\n\t})\n\tmembers: ProjectMember[];\n\n\t@OneToMany(() => ProjectReport, (report) => report.project, {\n\t\tonDelete: 'CASCADE',\n\t})\n\treports: ProjectReport[];\n\n\t@OneToMany(() => ProjectMilestone, (milestone) => milestone.project, {\n\t\tonDelete: 'CASCADE',\n\t})\n\tmilestones: ProjectMilestone[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/controllers/project.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/project/controllers/project.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/project/controllers/project.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/controllers/project.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/controllers/project.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters, Includes, SparseFieldsets, User } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { Project } from '@Routes/Project/entities';\nimport { ProjectService } from '@Routes/Project/services';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\nimport { Success } from '@Types/index';\n\n@UseGuards(AccessTokenGuard)\n@Controller('projects')\nexport class ProjectController {\n\tconstructor(private readonly projectService: ProjectService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findAll(where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findOne(id, where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.create(payload, user['sub']));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMember.html":{"url":"entities/ProjectMember.html","title":"entity - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/member/entities/project-member.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                invitePending\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/member/entities/project-member.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        invitePending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invite_pending', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/member/entities/project-member.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.members)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/member/entities/project-member.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ProjectRole})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/member/entities/project-member.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.matriculationNumber)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/member/entities/project-member.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Routes/Project/entities';\nimport { User } from '@Routes/User/entities';\n\nexport enum ProjectRole {\n\tContributor = 'contributor',\n\tViewer = 'viewer',\n}\n\n@Entity('project_member')\nexport class ProjectMember extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tuser: User,\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['user', 'project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'role', 'invitePending'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ type: 'enum', enum: ProjectRole })\n\trole: ProjectRole;\n\n\t@Column({ name: 'invite_pending', type: 'boolean', default: true })\n\tinvitePending: boolean;\n\n\t@ManyToOne(() => User, (user) => user.matriculationNumber)\n\tuser: User;\n\n\t@ManyToOne(() => Project, (project) => project.members)\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMemberController.html":{"url":"controllers/ProjectMemberController.html","title":"controller - ProjectMemberController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMemberController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/member/controllers/project-member.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/members\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/project/member/controllers/project-member.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/member/controllers/project-member.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations } from 'typeorm';\n\nimport { Filters, SparseFieldsets, Includes } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ProjectMember } from '@Routes/ProjectMember/entities';\nimport { ProjectMemberService } from '@Routes/ProjectMember/services';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/members')\nexport class ProjectMemberController {\n\tconstructor(private readonly projectMemberService: ProjectMemberService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(ProjectMember)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMember)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMember)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.findAll(where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(ProjectMember)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMember)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMember)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.findOne(id, where, select, relations));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectMemberInvitePendingDefault1717365845661.html":{"url":"classes/ProjectMemberInvitePendingDefault1717365845661.html","title":"class - ProjectMemberInvitePendingDefault1717365845661","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectMemberInvitePendingDefault1717365845661\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1717365845661-ProjectMemberInvitePendingDefault.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ProjectMemberInvitePendingDefault1717365845661'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1717365845661-ProjectMemberInvitePendingDefault.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1717365845661-ProjectMemberInvitePendingDefault.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1717365845661-ProjectMemberInvitePendingDefault.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ProjectMemberInvitePendingDefault1717365845661 implements MigrationInterface {\n\tname = 'ProjectMemberInvitePendingDefault1717365845661';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`invite_pending\\` \\`invite_pending\\` tinyint NOT NULL DEFAULT 1`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`invite_pending\\` \\`invite_pending\\` tinyint NOT NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMemberModule.html":{"url":"modules/ProjectMemberModule.html","title":"module - ProjectMemberModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMemberModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/member/project-member.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMemberService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMemberController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMemberController } from './controllers';\nimport { ProjectMember } from './entities';\nimport { ProjectMemberService } from './services';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectMember])],\n\tproviders: [ProjectMemberService],\n\tcontrollers: [ProjectMemberController],\n})\nexport class ProjectMemberModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMemberService.html":{"url":"injectables/ProjectMemberService.html","title":"injectable - ProjectMemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/member/services/project-member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAll\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMemberRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/project/member/services/project-member.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMemberRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(memberPartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/member/services/project-member.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberPartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/member/services/project-member.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/member/services/project-member.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { ProjectMember } from '@Routes/ProjectMember/entities';\n\n@Injectable()\nexport class ProjectMemberService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMember)\n\t\tprivate projectMemberRepository: Repository,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMemberRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMemberRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tcreateAll(memberPartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmemberPartials.map((memberPartial) => {\n\t\t\t\tconst projectMember = this.projectMemberRepository.create(memberPartial);\n\n\t\t\t\treturn projectMember.save();\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMilestone.html":{"url":"entities/ProjectMilestone.html","title":"entity - ProjectMilestone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMilestone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/entities/project-milestone.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimates\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MilestoneEstimate[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, estimate => estimate.milestone, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/entities/project-milestone.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/entities/project-milestone.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/entities/project-milestone.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.milestones)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/milestone/entities/project-milestone.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { MilestoneEstimate } from '@Routes/MilestoneEstimate/entities';\nimport { Project } from '@Routes/Project/entities';\n\n@Entity('project_milestone')\nexport class ProjectMilestone extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t\testimates: MilestoneEstimate,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project', 'estimates'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@ManyToOne(() => Project, (project) => project.milestones)\n\tproject: Project;\n\n\t@OneToMany(() => MilestoneEstimate, (estimate) => estimate.milestone, {\n\t\tonDelete: 'CASCADE',\n\t})\n\testimates: MilestoneEstimate[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMilestoneController.html":{"url":"controllers/ProjectMilestoneController.html","title":"controller - ProjectMilestoneController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMilestoneController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/controllers/project-milestone.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/milestones\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/controllers/project-milestone.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/controllers/project-milestone.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/controllers/project-milestone.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/milestone/controllers/project-milestone.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters, SparseFieldsets, Includes } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ProjectMilestone } from '@Routes/ProjectMilestone/entities';\nimport { ProjectMilestoneService } from '@Routes/ProjectMilestone/services';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\nimport { Success } from '@Types/index';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/milestones')\nexport class ProjectMilestoneController {\n\tconstructor(private readonly projectMilestoneService: ProjectMilestoneService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(ProjectMilestone)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMilestone)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMilestone)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.findAll(where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.createOne(payload));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(ProjectMilestone)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMilestone)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMilestone)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.findOne(id, where, select, relations));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMilestoneModule.html":{"url":"modules/ProjectMilestoneModule.html","title":"module - ProjectMilestoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMilestoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/milestone/project-milestone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMilestoneService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMilestoneController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMilestoneController } from './controllers';\nimport { ProjectMilestone } from './entities';\nimport { ProjectMilestoneService } from './services';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectMilestone])],\n\tproviders: [ProjectMilestoneService],\n\tcontrollers: [ProjectMilestoneController],\n})\nexport class ProjectMilestoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMilestoneService.html":{"url":"injectables/ProjectMilestoneService.html","title":"injectable - ProjectMilestoneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMilestoneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/milestone/services/project-milestone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAll\n                            \n                            \n                                createOne\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMilestoneRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/project/milestone/services/project-milestone.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMilestoneRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(milestonePartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/services/project-milestone.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                milestonePartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOne\n                        \n                    \n                \n            \n            \n                \ncreateOne(payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/services/project-milestone.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/services/project-milestone.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/services/project-milestone.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/milestone/services/project-milestone.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { ProjectMilestone } from '@Routes/ProjectMilestone/entities';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\n\n@Injectable()\nexport class ProjectMilestoneService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMilestone)\n\t\tprivate projectMilestoneRepository: Repository,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tcreateOne(payload: DeepPartial): Promise {\n\t\tif (Object.hasOwn(payload, 'id')) delete payload.id;\n\t\tconst entity = this.projectMilestoneRepository.create(payload);\n\n\t\treturn this.projectMilestoneRepository.save(entity, { reload: true });\n\t}\n\n\tcreateAll(milestonePartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmilestonePartials.map((milestonePartial) => {\n\t\t\t\tconst projectMilestone = this.projectMilestoneRepository.create(milestonePartial);\n\n\t\t\t\treturn projectMilestone.save();\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectMilestoneRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectMemberService->ProjectModule\n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectModule -->\n\nProjectMilestoneService->ProjectModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMemberService\n                        \n                        \n                            ProjectMilestoneService\n                        \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectController } from './controllers';\nimport { Project } from './entities';\nimport { ProjectService } from './services';\nimport { ProjectMilestoneService } from './milestone/services';\nimport { ProjectMemberService } from './member/services';\nimport { ProjectMember } from './member/entities';\nimport { ProjectMilestone } from './milestone/entities';\n\n@Module({\n\timports: [\n\t\tTypeOrmModule.forFeature([Project]),\n\t\tTypeOrmModule.forFeature([ProjectMilestone]),\n\t\tTypeOrmModule.forFeature([ProjectMember]),\n\t],\n\tproviders: [ProjectService, ProjectMilestoneService, ProjectMemberService],\n\tcontrollers: [ProjectController],\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectReport.html":{"url":"entities/ProjectReport.html","title":"entity - ProjectReport","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/report/entities/project-report.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deliverables\n                            \n                            \n                                    \n                                hazards\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                objectives\n                            \n                            \n                                    \n                                other\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                reportDate\n                            \n                            \n                                    \n                                sequenceNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliverables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hazards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.reports)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sequenceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'sequence_number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/report/entities/project-report.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/index';\nimport { Project } from '@Routes/Project/entities';\nimport { Nullable } from '@Types/index';\n\n@Entity('project_report')\nexport class ProjectReport extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'sequenceNumber', 'reportDate', 'deliverables', 'hazards', 'objectives', 'other'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'sequence_number' })\n\tsequenceNumber: number;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ type: 'mediumtext' })\n\tdeliverables: string;\n\n\t@Column({ type: 'mediumtext' })\n\thazards: string;\n\n\t@Column({ type: 'mediumtext' })\n\tobjectives: string;\n\n\t@Column({ type: 'mediumtext', nullable: true })\n\tother: Nullable;\n\n\t@ManyToOne(() => Project, (project) => project.reports)\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectReportController.html":{"url":"controllers/ProjectReportController.html","title":"controller - ProjectReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/report/controllers/project-report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/reports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/project/report/controllers/project-report.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/project/report/controllers/project-report.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/report/controllers/project-report.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/report/controllers/project-report.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters, SparseFieldsets, Includes } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ProjectReport } from '@Routes/ProjectReport/entities';\nimport { ProjectReportService } from '@Routes/ProjectReport/services';\nimport { Success } from '@Types/index';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/reports')\nexport class ProjectReportController {\n\tconstructor(private readonly projectReportService: ProjectReportService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(ProjectReport)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectReport)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectReport)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.findAll(where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Filters(ProjectReport)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectReport)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectReport)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.findOne(id, where, select, relations));\n\t}\n\n\t@Patch(':id')\n\tpatchOne(\n\t\t@Param('id')\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.projectReportService.patchOne(id, payload),\n\t\t\t(result: boolean) => {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: result,\n\t\t\t\t};\n\t\t\t},\n\t\t) as Observable;\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.create(payload));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectReportModule.html":{"url":"modules/ProjectReportModule.html","title":"module - ProjectReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\n\nProjectReportService\n\nProjectReportService\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/report/project-report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectReportService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectReportController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectReportController } from './controllers';\nimport { ProjectReport } from './entities';\nimport { ProjectReportService } from './services';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectReport])],\n\tproviders: [ProjectReportService],\n\tcontrollers: [ProjectReportController],\n})\nexport class ProjectReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectReportService.html":{"url":"injectables/ProjectReportService.html","title":"injectable - ProjectReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/report/services/project-report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectReportRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/project/report/services/project-report.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectReportRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(partialReport: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/report/services/project-report.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialReport\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/report/services/project-report.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/report/services/project-report.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/report/services/project-report.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { BadRequestException, NoAffectedRowException } from '@Exceptions/index';\nimport { ProjectReport } from '@Routes/ProjectReport/entities';\n\n@Injectable()\nexport class ProjectReportService {\n\tconstructor(\n\t\t@InjectRepository(ProjectReport)\n\t\tprivate projectReportRepository: Repository,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectReportRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectReportRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tasync patchOne(id: string, payload: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectReportRepository.update({ id }, payload);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tcreate(partialReport: DeepPartial): Promise {\n\t\tconst newReport = this.projectReportRepository.create(partialReport);\n\n\t\treturn newReport.save();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectRepository: Repository, milestoneService: ProjectMilestoneService, memberService: ProjectMemberService)\n                    \n                \n                        \n                            \n                                Defined in src/project/services/project.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        milestoneService\n                                                  \n                                                        \n                                                                        ProjectMilestoneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        ProjectMemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(project: DeepPartial, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/services/project.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/services/project.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/services/project.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/services/project.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { Project } from '@Routes/Project/entities';\nimport { ProjectMilestoneService } from '../milestone/services';\nimport { ProjectMemberService } from '../member/services';\nimport { ProjectMember } from '../member/entities';\nimport { ProjectMilestone } from '../milestone/entities';\n\n@Injectable()\nexport class ProjectService {\n\tconstructor(\n\t\t@InjectRepository(Project)\n\t\tprivate projectRepository: Repository,\n\t\tprivate readonly milestoneService: ProjectMilestoneService,\n\t\tprivate readonly memberService: ProjectMemberService,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\tconst conditions: FindOptionsWhere[] = [];\n\n\t\tif (where.owner) {\n\t\t\tconditions.push({ owner: where.owner });\n\t\t\tdelete where.owner;\n\t\t}\n\n\t\tif (where.members) {\n\t\t\tconditions.push({ members: where.members });\n\t\t\tdelete where.members;\n\t\t}\n\n\t\tconditions.push(where);\n\n\t\treturn this.projectRepository.find({ where: conditions, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectRepository.findOne({\n\t\t\trelations,\n\t\t\tselect,\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync create(project: DeepPartial, userId: string): Promise {\n\t\ttry {\n\t\t\tconst newProject = this.projectRepository.create({\n\t\t\t\t...project,\n\t\t\t\towner: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst createdProject = await newProject.save();\n\n\t\t\tif (project.milestones) {\n\t\t\t\tconst projectMilestones = await this.milestoneService.createAll(\n\t\t\t\t\tproject.milestones.map((milestone: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...milestone,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.milestones = projectMilestones;\n\t\t\t}\n\n\t\t\tif (project.members) {\n\t\t\t\tconst projectMembers = await this.memberService.createAll(\n\t\t\t\t\tproject.members.map((member: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...member,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.members = projectMembers;\n\t\t\t}\n\n\t\t\treturn createdProject;\n\t\t} catch (exception) {\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjektarbeitAPI1711999577974.html":{"url":"classes/ProjektarbeitAPI1711999577974.html","title":"class - ProjektarbeitAPI1711999577974","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjektarbeitAPI1711999577974\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1711999577974-ProjektarbeitAPI.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ProjektarbeitAPI1711999577974'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1711999577974-ProjektarbeitAPI.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1711999577974-ProjektarbeitAPI.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1711999577974-ProjektarbeitAPI.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ProjektarbeitAPI1711999577974 implements MigrationInterface {\n\tname = 'ProjektarbeitAPI1711999577974';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`token_whitelist\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`access_token\\` varchar(255) NULL, \\`access_token_expiration_date\\` datetime NOT NULL, \\`refresh_token\\` varchar(255) NULL, \\`refresh_token_expiration_date\\` datetime NOT NULL, \\`userId\\` uuid NULL, UNIQUE INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` (\\`userId\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`user\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`matriculation_number\\` int NOT NULL, \\`first_name\\` varchar(255) NOT NULL, \\`last_name\\` varchar(255) NOT NULL, \\`email\\` varchar(255) NOT NULL, \\`password\\` varchar(255) NULL, \\`phone_number\\` varchar(255) NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_member\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`role\\` enum ('contributor', 'viewer') NOT NULL, \\`invite_pending\\` tinyint NOT NULL, \\`userId\\` uuid NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_report\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`sequence_number\\` int NOT NULL, \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`deliverables\\` mediumtext NOT NULL, \\`hazards\\` mediumtext NOT NULL, \\`objectives\\` mediumtext NOT NULL, \\`other\\` mediumtext NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE, \\`official_end\\` date NULL, \\`report_interval\\` int NOT NULL DEFAULT '7', \\`type\\` varchar(255) NOT NULL, \\`ownerId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_milestone\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`milestone_estimate\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`estimation_date\\` date NOT NULL, \\`milestone_reached\\` tinyint NOT NULL, \\`milestoneId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \\`milestone_estimate\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_milestone\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_report\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_member\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`user\\``);\n\t\tawait queryRunner.query(`DROP INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` ON \\`token_whitelist\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`token_whitelist\\``);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/refresh-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/refresh-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/refresh-token.strategy.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (req: Request) => string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Express.Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Express.Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Routes/Authentication/services';\nimport { REFRESH_TOKEN_COOKIE } from '@Tokens/index';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n\tpublic static fromCookie() {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, REFRESH_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[REFRESH_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tRefreshTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_REFRESH_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Express.Request, payload: JwtPayload) {\n\t\tconst refreshToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\n\t\tconst verified = await this.tokenWhitelistService.verifyRefreshToken(payload.sub, refreshToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn {\n\t\t\t...payload,\n\t\t\trefreshToken,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nCryptoService\n\nCryptoService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nCryptoService->ServicesModule\n\n\n\n\n\nDateService\n\nDateService\n\nServicesModule -->\n\nDateService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CryptoService\n                        \n                        \n                            DateService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CryptoService } from './crypto.service';\nimport { DateService } from './date.service';\n\n@Module({\n\tproviders: [CryptoService, DateService],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoredProcedureAndEvent1711999597974.html":{"url":"classes/StoredProcedureAndEvent1711999597974.html","title":"class - StoredProcedureAndEvent1711999597974","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoredProcedureAndEvent1711999597974\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1711999597974-StoredProcedureAndEvent.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'StoredProcedureAndEvent1711999597974'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1711999597974-StoredProcedureAndEvent.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1711999597974-StoredProcedureAndEvent.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1711999597974-StoredProcedureAndEvent.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class StoredProcedureAndEvent1711999597974 implements MigrationInterface {\n\tname = 'StoredProcedureAndEvent1711999597974';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`\n      CREATE PROCEDURE RemoveExpiredTokens()\n      BEGIN\n        SET time_zone = 'Europe/Berlin';\n        DELETE FROM token_whitelist WHERE refresh_token_expiration_date  {\n\t\tawait queryRunner.query(`SET GLOBAL event_scheduler = OFF;`);\n\t\tawait queryRunner.query(`DROP EVENT IF EXISTS RemoveExpiredTokensEvent;`);\n\t\tawait queryRunner.query(`DROP PROCEDURE IF EXISTS RemoveExpiredTokens`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TokenWhitelist.html":{"url":"entities/TokenWhitelist.html","title":"entity - TokenWhitelist","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TokenWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/entities/token-whitelist.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpirationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpirationDate\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token_expiration_date', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token_expiration_date', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn()@OneToOne(undefined, user => user.tokenPair)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/entities/token-whitelist.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, BeforeInsert, Column, Entity, JoinColumn, OneToOne } from 'typeorm';\n\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { User } from '@Routes/User/entities';\n\n@Entity('token_whitelist')\nexport class TokenWhitelist extends BaseEntity {\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'access_token', nullable: true })\n\taccessToken: string;\n\n\t@Column({\n\t\tname: 'access_token_expiration_date',\n\t\ttype: 'datetime',\n\t})\n\taccessTokenExpirationDate: string;\n\n\t@Column({ name: 'refresh_token', nullable: true })\n\trefreshToken: string;\n\n\t@Column({\n\t\tname: 'refresh_token_expiration_date',\n\t\ttype: 'datetime',\n\t})\n\trefreshTokenExpirationDate: string;\n\n\t@JoinColumn()\n\t@OneToOne(() => User, (user) => user.tokenPair)\n\tuser: User;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenWhitelistService.html":{"url":"injectables/TokenWhitelistService.html","title":"injectable - TokenWhitelistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenWhitelistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/services/token-whitelist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                findByUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyAccessToken\n                            \n                            \n                                    Async\n                                verifyRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistRepository: Repository, date: DateService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/services/token-whitelist.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/token-whitelist.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUser\n                        \n                    \n                \n            \n            \n                \nfindByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/token-whitelist.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/token-whitelist.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAccessToken(userId: string, accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/token-whitelist.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/token-whitelist.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeleteResult, Repository } from 'typeorm';\n\nimport env from '@Environment';\nimport { TokenWhitelist } from '@Routes/Authentication/entities';\nimport { DateService } from '@Services/date.service';\nimport { CryptoService } from '@Services/crypto.service';\n\nexport type TokenPairAndOwner = {\n\taccessToken: string;\n\trefreshToken: string;\n\tuserId: string;\n};\n\n@Injectable()\nexport class TokenWhitelistService {\n\tconstructor(\n\t\t@InjectRepository(TokenWhitelist)\n\t\tprivate readonly tokenWhitelistRepository: Repository,\n\t\tprivate readonly date: DateService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync update({ accessToken, refreshToken, userId }: TokenPairAndOwner): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry !== null) {\n\t\t\tawait this.tokenWhitelistRepository.remove(tokenWhitelistEntry);\n\t\t}\n\n\t\tconst accessTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.ACCESS_TOKEN_EXPIRATION,\n\t\t);\n\t\tconst refreshTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.REFRESH_TOKEN_EXPIRATION,\n\t\t);\n\n\t\tconst newRecord = this.tokenWhitelistRepository.create({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t\taccessToken,\n\t\t\taccessTokenExpirationDate,\n\t\t\trefreshToken,\n\t\t\trefreshTokenExpirationDate,\n\t\t});\n\n\t\tawait newRecord.save();\n\t}\n\n\tdelete(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.delete({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindByUser(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.findOne({\n\t\t\twhere: {\n\t\t\t\tuser: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync verifyAccessToken(userId: string, accessToken: string): Promise {\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\n\t\treturn tokenWhitelistEntry.accessToken === hashedAccessToken;\n\t}\n\n\tasync verifyRefreshToken(userId: string, refreshToken: string): Promise {\n\t\tconst hashedRefreshToken = this.crypto.hash(refreshToken);\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\n\t\treturn tokenWhitelistEntry.refreshToken === hashedRefreshToken;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedException.html":{"url":"classes/UnauthorizedException.html","title":"class - UnauthorizedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/unauthorized.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/unauthorized.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UnauthorizedException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.UNAUTHORIZED, 1, {\n\t\t\tmessage: 'Unauthorized',\n\t\t\tdescription: 'This request requires authorization provided by an access token.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                academicTitle\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                matriculationNumber\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                projects\n                            \n                            \n                                    \n                                tokenPair\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        academicTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'academic_title', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'first_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'last_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matriculationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'matriculation_number', nullable: true, type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'phone_number', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, project => project.owner, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenPair\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenWhitelist\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, tokenWhitelist => tokenWhitelist.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, OneToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/index';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Routes/Project/entities';\nimport { TokenWhitelist } from '@Routes/Authentication/entities';\nimport { Nullable } from '@Types/index';\n\n@Entity('user')\nexport class User extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tprojects: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['projects'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn [\n\t\t\t'id',\n\t\t\t'academicTitle',\n\t\t\t'matriculationNumber',\n\t\t\t'firstName',\n\t\t\t'lastName',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'phoneNumber',\n\t\t];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'academic_title', nullable: true, type: 'varchar' })\n\tacademicTitle: Nullable;\n\n\t@Column({ name: 'matriculation_number', nullable: true, type: 'int' })\n\tmatriculationNumber: Nullable;\n\n\t@Column({ name: 'first_name', nullable: true, type: 'varchar' })\n\tfirstName: Nullable;\n\n\t@Column({ name: 'last_name', nullable: true, type: 'varchar' })\n\tlastName: Nullable;\n\n\t@Column()\n\temail: string;\n\n\t@Column({ type: 'varchar' })\n\tpassword: string;\n\n\t@Column({ name: 'phone_number', nullable: true, type: 'varchar' })\n\tphoneNumber: Nullable;\n\n\t@OneToMany(() => Project, (project) => project.owner, { onDelete: 'CASCADE' })\n\tprojects: Project[];\n\n\t@OneToOne(() => TokenWhitelist, (tokenWhitelist) => tokenWhitelist.user)\n\ttokenPair: TokenWhitelist;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAcademicTitle1714254731674.html":{"url":"classes/UserAcademicTitle1714254731674.html","title":"class - UserAcademicTitle1714254731674","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAcademicTitle1714254731674\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1714254731674-UserAcademicTitle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UserAcademicTitle1714254731674'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1714254731674-UserAcademicTitle.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1714254731674-UserAcademicTitle.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1714254731674-UserAcademicTitle.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UserAcademicTitle1714254731674 implements MigrationInterface {\n\tname = 'UserAcademicTitle1714254731674';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`ALTER TABLE \\`user\\` ADD \\`academic_title\\` varchar(255) NULL`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`matriculation_number\\` \\`matriculation_number\\` int NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`first_name\\` \\`first_name\\` varchar(255) NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`last_name\\` \\`last_name\\` varchar(255) NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`password\\` \\`password\\` varchar(255) NOT NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`password\\` \\`password\\` varchar(255) NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`last_name\\` \\`last_name\\` varchar(255) NOT NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`first_name\\` \\`first_name\\` varchar(255) NOT NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`matriculation_number\\` \\`matriculation_number\\` int NOT NULL`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(`ALTER TABLE \\`user\\` DROP COLUMN \\`academic_title\\``);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAlreadyExistsException.html":{"url":"classes/UserAlreadyExistsException.html","title":"class - UserAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-already-exists.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UserAlreadyExistsException extends BaseException {\n\tconstructor(email: string, cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 4, {\n\t\t\tmessage: 'User already exists',\n\t\t\tdescription: `The provided email address (${email}) is already registered.`,\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(matriculationNumber: number, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':matriculationNumber')\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                matriculationNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters, Includes, SparseFieldsets } from '@Decorators/index';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { User } from '@Routes/User/entities';\nimport { UserService } from '@Routes/User/services';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('users')\nexport class UserController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(User)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(User)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(User)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.findAll(where, select, relations));\n\t}\n\n\t@Get(':matriculationNumber')\n\tfindOne(\n\t\t@Param('matriculationNumber')\n\t\tmatriculationNumber: number,\n\t\t@Filters(User)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(User)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(User)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.userService.findOne(matriculationNumber, where, select, relations),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDoesNotExistException.html":{"url":"classes/UserDoesNotExistException.html","title":"class - UserDoesNotExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDoesNotExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-does-not-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-does-not-exist.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UserDoesNotExistException extends BaseException {\n\tconstructor(email: string, cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 5, {\n\t\t\tmessage: 'User does not exist',\n\t\t\tdescription: `There is no user present who goes by the provided email address (${email}).`,\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserController } from './controllers';\nimport { User } from './entities';\nimport { UserService } from './services';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([User])],\n\tproviders: [UserService],\n\tcontrollers: [UserController],\n\texports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByIdAndCredentials\n                            \n                            \n                                findOne\n                            \n                            \n                                register\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIdAndCredentials\n                        \n                    \n                \n            \n            \n                \nfindByIdAndCredentials(id: string, where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(matriculationNumber: number, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                matriculationNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport * as crypto from 'crypto-js';\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { User } from '@Routes/User/entities';\nimport { Nullable } from '@Types/index';\n\n@Injectable()\nexport class UserService {\n\tconstructor(\n\t\t@InjectRepository(User)\n\t\tprivate userRepository: Repository,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.userRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tmatriculationNumber: number,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.userRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tmatriculationNumber,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tfindByEmail(email: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ email });\n\t}\n\n\tfindById(id: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ id });\n\t}\n\n\tfindByIdAndCredentials(id: string, where: FindOptionsWhere = {}): Promise> {\n\t\tif (where?.password) {\n\t\t\twhere.password = crypto.SHA256(where.password as string).toString(crypto.enc.Hex);\n\t\t}\n\n\t\treturn this.userRepository.findOneBy({ id, ...where });\n\t}\n\n\tregister(userData: DeepPartial): Promise {\n\t\tconst user = this.userRepository.create(userData);\n\n\t\treturn user.save();\n\t}\n\n\tasync update(id: string, payload: DeepPartial): Promise {\n\t\tconst user = await this.userRepository.findOneBy({ id });\n\n\t\tif (!user) {\n\t\t\tthrow new NotFoundException();\n\t\t}\n\n\t\tif (payload?.password) {\n\t\t\tpayload.password = crypto.SHA256(payload.password).toString(crypto.enc.Hex);\n\t\t}\n\n\t\tfor (const attribute in payload) {\n\t\t\tuser[attribute] = payload[attribute];\n\t\t}\n\n\t\treturn user.save();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/authentication/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/entities/token-whitelist.ts\n            \n            entity\n            TokenWhitelist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/authentication/services/token-whitelist.service.ts\n            \n            injectable\n            TokenWhitelistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/base-entity-with-extras.ts\n            \n            class\n            BaseEntityWithExtras\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            Filters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            filtersFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            Includes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            includesFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/primary-generated-uuid.decorator.ts\n            \n            function\n            PrimaryGeneratedUUID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            SparseFieldsets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            sparseFieldsetsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/bad-request.exception.ts\n            \n            class\n            BadRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/base.exception.ts\n            \n            class\n            BaseException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/incorrect-credentials.exception.ts\n            \n            class\n            IncorrectCredentialsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/no-affected-row.exception.ts\n            \n            class\n            NoAffectedRowException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/unauthorized.exception.ts\n            \n            class\n            UnauthorizedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-already-exists.exception.ts\n            \n            class\n            UserAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-does-not-exist.exception.ts\n            \n            class\n            UserDoesNotExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/access-token.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/refresh-token.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1711999577974-ProjektarbeitAPI.ts\n            \n            class\n            ProjektarbeitAPI1711999577974\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1711999597974-StoredProcedureAndEvent.ts\n            \n            class\n            StoredProcedureAndEvent1711999597974\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1714254731674-UserAcademicTitle.ts\n            \n            class\n            UserAcademicTitle1714254731674\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1717365845661-ProjectMemberInvitePendingDefault.ts\n            \n            class\n            ProjectMemberInvitePendingDefault1717365845661\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mocks/providers/milestone-estimate-repository.provider.ts\n            \n            variable\n            MILESTONE_ESTIMATE_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/milestone-estimate-repository.provider.ts\n            \n            variable\n            provideMilestoneEstimateRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-member-repository.provider.ts\n            \n            variable\n            PROJECT_MEMBER_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-member-repository.provider.ts\n            \n            variable\n            provideProjectMemberRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-milestone-repository.provider.ts\n            \n            variable\n            PROJECT_MILESTONE_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-milestone-repository.provider.ts\n            \n            variable\n            provideProjectMilestoneRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-report-repository.provider.ts\n            \n            variable\n            PROJECT_REPORT_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-report-repository.provider.ts\n            \n            variable\n            provideProjectReportRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-repository.provider.ts\n            \n            variable\n            PROJECT_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/project-repository.provider.ts\n            \n            variable\n            provideProjectRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/repository-functions.ts\n            \n            variable\n            createRepositoryFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/token-whitelist-repository.provider.ts\n            \n            variable\n            provideTokenWhitelistRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/token-whitelist-repository.provider.ts\n            \n            variable\n            TOKEN_WHITELIST_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/user-repository.provider.ts\n            \n            variable\n            provideUserRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/providers/user-repository.provider.ts\n            \n            variable\n            USER_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/controllers/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/controllers/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/project/entities/project.ts\n            \n            entity\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/member/controllers/project-member.controller.ts\n            \n            controller\n            ProjectMemberController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/project/member/entities/project-member.ts\n            \n            entity\n            ProjectMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/member/services/project-member.service.ts\n            \n            injectable\n            ProjectMemberService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/project/milestone/controllers/project-milestone.controller.ts\n            \n            controller\n            ProjectMilestoneController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/project/milestone/entities/project-milestone.ts\n            \n            entity\n            ProjectMilestone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/milestone/estimate/controllers/milestone-estimate.controller.ts\n            \n            controller\n            MilestoneEstimateController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/project/milestone/estimate/entities/milestone-estimate.ts\n            \n            entity\n            MilestoneEstimate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/milestone/estimate/services/milestone-estimate.service.ts\n            \n            injectable\n            MilestoneEstimateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/milestone/services/project-milestone.service.ts\n            \n            injectable\n            ProjectMilestoneService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/project/report/controllers/project-report.controller.ts\n            \n            controller\n            ProjectReportController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/project/report/entities/project-report.ts\n            \n            entity\n            ProjectReport\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/report/services/project-report.service.ts\n            \n            injectable\n            ProjectReportService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/project/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/crypto.service.ts\n            \n            injectable\n            CryptoService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/strategies/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/strategies/refresh-token.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tokens/index.ts\n            \n            variable\n            ACCESS_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tokens/index.ts\n            \n            variable\n            REFRESH_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/entities/user.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/promise-to-oberservable.ts\n            \n            function\n            promiseToObservable\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.0\n        \n            @nestjs/core : ^10.3.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.2.0\n        \n            dotenv : ^16.3.1\n        \n            luxon : ^3.4.4\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.1\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n        \n            typeorm-extension : ^3.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProjectRole   (src/.../project-member.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/project/member/entities/project-member.ts\n    \n        \n            \n                \n                    \n                        \n                        ProjectRole\n                    \n                \n                        \n                            \n                                 Contributor\n                            \n                        \n                        \n                            \n                                Value : contributor\n                            \n                        \n                        \n                            \n                                 Viewer\n                            \n                        \n                        \n                            \n                                Value : viewer\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PrimaryGeneratedUUID   (src/.../primary-generated-uuid.decorator.ts)\n                        \n                        \n                            promiseToObservable   (src/.../promise-to-oberservable.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(port: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/decorators/primary-generated-uuid.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PrimaryGeneratedUUID\n                        \n                    \n                \n            \n            \n                \nPrimaryGeneratedUUID(options: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n                        This decorator can be used on the property level of an entity.\nIt wraps the Column decorator from the typeorm package, which is being\ninitiated with the following default values\nExample :{\n   type: 'uuid',\n   default: () => 'UUID',\n   primary: true,\n   ...options,\n}The part ...options allows to provide any additional options, which can be\ndefined as a parameter of this decorator.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/promise-to-oberservable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        promiseToObservable\n                        \n                    \n                \n            \n            \n                \npromiseToObservable(promise$: Promise, successHandler?, errorHandler?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                promise$\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                successHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                errorHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\nServicesModule -->\n\nCryptoService->ServicesModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\nServicesModule -->\n\nDateService->ServicesModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\nProjectModule -->\n\nProjectMemberService->ProjectModule\n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\nProjectModule -->\n\nProjectMilestoneService->ProjectModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nProjectReportService\n\nProjectReportService\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MilestoneEstimateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMemberModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMilestoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : ISC\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationPayload   (src/.../authentication.controller.ts)\n                        \n                        \n                            Environment   (src/.../environment.ts)\n                        \n                        \n                            JsonApiIncludes   (src/.../includes.decorator.ts)\n                        \n                        \n                            JwtPayload   (src/.../access-token.strategy.ts)\n                        \n                        \n                            JwtPayload   (src/.../refresh-token.strategy.ts)\n                        \n                        \n                            LogoutResult   (src/.../authentication.controller.ts)\n                        \n                        \n                            Nullable   (src/.../index.ts)\n                        \n                        \n                            Options   (src/.../base.exception.ts)\n                        \n                        \n                            RegisterPayload   (src/.../authentication.service.ts)\n                        \n                        \n                            RelationTypes   (src/.../base-entity-with-extras.ts)\n                        \n                        \n                            Success   (src/.../index.ts)\n                        \n                        \n                            TokenPairAndOwner   (src/.../token-whitelist.service.ts)\n                        \n                        \n                            TokensResponse   (src/.../authentication.service.ts)\n                        \n                        \n                            TokensWithUserResponse   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authentication/controllers/authentication.controller.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LogoutResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/environment.ts\n    \n    \n        \n            \n                \n                    \n                    Environment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/decorators/includes.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    JsonApiIncludes\n                \n            \n            \n                \n                        string[]\n\n                \n            \n        \n    \n    src/strategies/access-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/strategies/refresh-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/index.ts\n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Success\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/exceptions/base.exception.ts\n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/authentication/services/authentication.service.ts\n    \n    \n        \n            \n                \n                    \n                    RegisterPayload\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensWithUserResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/base-entity-with-extras.ts\n    \n    \n        \n            \n                \n                    \n                    RelationTypes\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/authentication/services/token-whitelist.service.ts\n    \n    \n        \n            \n                \n                    \n                    TokenPairAndOwner\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_COOKIE   (src/.../index.ts)\n                        \n                        \n                            createRepositoryFunctions   (src/.../repository-functions.ts)\n                        \n                        \n                            Filters   (src/.../filters.decorator.ts)\n                        \n                        \n                            filtersFactory   (src/.../filters.decorator.ts)\n                        \n                        \n                            Includes   (src/.../includes.decorator.ts)\n                        \n                        \n                            includesFactory   (src/.../includes.decorator.ts)\n                        \n                        \n                            MILESTONE_ESTIMATE_REPOSITORY_TOKEN   (src/.../milestone-estimate-repository.provider.ts)\n                        \n                        \n                            PROJECT_MEMBER_REPOSITORY_TOKEN   (src/.../project-member-repository.provider.ts)\n                        \n                        \n                            PROJECT_MILESTONE_REPOSITORY_TOKEN   (src/.../project-milestone-repository.provider.ts)\n                        \n                        \n                            PROJECT_REPORT_REPOSITORY_TOKEN   (src/.../project-report-repository.provider.ts)\n                        \n                        \n                            PROJECT_REPOSITORY_TOKEN   (src/.../project-repository.provider.ts)\n                        \n                        \n                            provideMilestoneEstimateRepository   (src/.../milestone-estimate-repository.provider.ts)\n                        \n                        \n                            provideProjectMemberRepository   (src/.../project-member-repository.provider.ts)\n                        \n                        \n                            provideProjectMilestoneRepository   (src/.../project-milestone-repository.provider.ts)\n                        \n                        \n                            provideProjectReportRepository   (src/.../project-report-repository.provider.ts)\n                        \n                        \n                            provideProjectRepository   (src/.../project-repository.provider.ts)\n                        \n                        \n                            provideTokenWhitelistRepository   (src/.../token-whitelist-repository.provider.ts)\n                        \n                        \n                            provideUserRepository   (src/.../user-repository.provider.ts)\n                        \n                        \n                            REFRESH_TOKEN_COOKIE   (src/.../index.ts)\n                        \n                        \n                            SparseFieldsets   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            sparseFieldsetsFactory   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            TOKEN_WHITELIST_REPOSITORY_TOKEN   (src/.../token-whitelist-repository.provider.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            USER_REPOSITORY_TOKEN   (src/.../user-repository.provider.ts)\n                        \n                        \n                            userFactory   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-access_token'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-refresh_token'\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/repository-functions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRepositoryFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n\tfind: (options?: FindManyOptions) => Promise.resolve([options]),\n\tfindOne: (options: FindOneOptions) => Promise.resolve(options),\n\tfindOneBy: (where: FindOptionsWhere) => Promise.resolve(where),\n\tremove: (entity: T, options?: RemoveOptions) => [entity, options],\n\tcreate: (entityLike: DeepPartial) => entityLike,\n\tsave: (entity: T, options?: SaveOptions) => Promise.resolve([entity, options]),\n\tdelete: (criteria: string | number | FindOptionsWhere) => {\n\t\treturn Promise.resolve({\n\t\t\taffected: 1,\n\t\t\traw: '',\n\t\t\tcriteria,\n\t\t});\n\t},\n\tupdate: (criteria: string | number | FindOptionsWhere, partialEntity: DeepPartial) => {\n\t\treturn Promise.resolve({\n\t\t\taffected: 1,\n\t\t\traw: '',\n\t\t\tcriteria,\n\t\t\tpartialEntity,\n\t\t});\n\t},\n})\n                    \n                \n\n\n        \n    \n\n    src/decorators/filters.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Filters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(filtersFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtersFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst where: FindOptionsWhere = {};\n\n\tconst assignPartialEqualFilters = (\n\t\tfilters: object,\n\t\tfields: string[],\n\t\tvalue: string,\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst field = fields[0];\n\t\tfields = fields.slice(1);\n\t\tconst properties = entity.getProperties();\n\n\t\tif (!properties.includes(field)) return;\n\n\t\tif (fields.length === 0) {\n\t\t\tfilters[field] = value;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfilters[field] = {\n\t\t\t...(filters[field] || {}),\n\t\t};\n\t\tassignPartialEqualFilters(filters[field], fields, value, entity.getRelationTypes()[field]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'filter')) {\n\t\tfor (const field in request.query.filter as { [field: string]: string }) {\n\t\t\tassignPartialEqualFilters(where, field.split('.'), request.query.filter[field], entity);\n\t\t}\n\t}\n\n\treturn where;\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/includes.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Includes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(includesFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includesFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst relations: FindOptionsRelations = {};\n\n\tconst assignPartialIncludes = (\n\t\trelations: object,\n\t\tincludes: string[],\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst include = includes[0];\n\t\tincludes = includes.slice(1);\n\t\tconst existingRelations = entity.getRelations();\n\n\t\tif (!existingRelations.includes(include)) return;\n\n\t\tif (includes.length === 0) {\n\t\t\trelations[include] = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\trelations[include] = {\n\t\t\t...(relations[include] || {}),\n\t\t};\n\t\tassignPartialIncludes(relations[include], includes, entity.getRelationTypes()[include]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'include')) {\n\t\tconst includes: string[] = [];\n\n\t\tif (Array.isArray(request.query.include)) {\n\t\t\tfor (const entry of request.query.include as string[]) {\n\t\t\t\tincludes.push(...entry.split(','));\n\t\t\t}\n\t\t} else {\n\t\t\tincludes.push(...(request.query.include as string).split(','));\n\t\t}\n\n\t\tfor (const include of includes) {\n\t\t\tassignPartialIncludes(relations, include.split('.'), entity);\n\t\t}\n\t}\n\n\treturn relations;\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/milestone-estimate-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MILESTONE_ESTIMATE_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(MilestoneEstimate)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideMilestoneEstimateRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: MILESTONE_ESTIMATE_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/project-member-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROJECT_MEMBER_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(ProjectMember)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideProjectMemberRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: PROJECT_MEMBER_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/project-milestone-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROJECT_MILESTONE_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(ProjectMilestone)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideProjectMilestoneRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: PROJECT_MILESTONE_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/project-report-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROJECT_REPORT_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(ProjectReport)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideProjectReportRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: PROJECT_REPORT_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/project-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROJECT_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(Project)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideProjectRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: PROJECT_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/token-whitelist-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideTokenWhitelistRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: TOKEN_WHITELIST_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_WHITELIST_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(TokenWhitelist)\n                    \n                \n\n\n        \n    \n\n    src/mocks/providers/user-repository.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideUserRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : () => {\n\treturn {\n\t\tprovide: USER_REPOSITORY_TOKEN,\n\t\tuseFactory: jest.fn(() => createRepositoryFunctions()),\n\t};\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getRepositoryToken(User)\n                    \n                \n\n\n        \n    \n\n    src/decorators/sparse-fieldsets.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SparseFieldsets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(sparseFieldsetsFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparseFieldsetsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst sparseFieldsets: FindOptionsSelect = {};\n\n\tconst assignPartialSparseFieldsets = (\n\t\tfieldsets: object,\n\t\ttables: string[],\n\t\tfields: string[],\n\t\tsubEntity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst table = tables[0];\n\t\ttables = tables.slice(1);\n\t\tfieldsets[table] = {\n\t\t\t...(fieldsets[table] || {}),\n\t\t};\n\t\tconst relations = subEntity.getRelationTypes();\n\n\t\tif (!(table in relations)) return;\n\n\t\tsubEntity = relations[table];\n\n\t\tif (tables.length === 0) {\n\t\t\tconst columns = subEntity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[table][field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets[table], tables, fields, subEntity);\n\t};\n\n\tconst assignSparseFieldsets = (fieldsets: object, table: string, fields: string[]) => {\n\t\tif (table === entity.name.toLowerCase()) {\n\t\t\tconst columns = entity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets, table.split('.'), fields, entity);\n\t};\n\n\tif (Object.hasOwn(request.query, 'fields')) {\n\t\tfor (const table in request.query.fields as {\n\t\t\t[table: string]: string | string[];\n\t\t}) {\n\t\t\tconst fields: string[] = [];\n\n\t\t\tif (Array.isArray(request.query.fields[table])) {\n\t\t\t\tfor (const entry of request.query.fields[table] as string[]) {\n\t\t\t\t\tfields.push(...entry.split(','));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfields.push(...(request.query.fields[table] as string).split(','));\n\t\t\t}\n\n\t\t\tassignSparseFieldsets(sparseFieldsets, table, fields);\n\t\t}\n\t}\n\n\treturn sparseFieldsets;\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(userFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (data: unknown, ctx: ExecutionContext) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\n\treturn request.user;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
