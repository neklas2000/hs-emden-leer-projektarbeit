var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.691,1,1.779]],["body/injectables/AccessTokenGuard.html",[0,1.224,1,3.154,2,2.031,3,0.238,4,0.238,5,0.211,6,5.008,7,4.494,8,1.942,9,5.908,10,0.281,11,0.016,12,0.536,13,5.008,14,3.546,15,0.238,16,0.149,17,0.014,18,0.014]],["title/injectables/AccessTokenStrategy.html",[0,0.691,19,2.531]],["body/injectables/AccessTokenStrategy.html",[0,0.939,2,1.34,3,0.157,4,0.157,5,0.139,8,1.49,10,0.298,11,0.016,12,0.354,14,2.34,15,0.157,16,0.098,17,0.011,18,0.011,19,3.439,20,4.99,21,2.712,22,4.531,23,4.638,24,0.493,25,1.162,26,3.061,27,5.562,28,1.847,29,4.065,30,1.001,31,3.305,32,3.769,33,0.553,34,3.305,35,0.746,36,0.546,37,0.454,38,0.746,39,3.305,40,1.115,41,5.17,42,3.305,43,4.364,44,2.697,45,4.99,46,3.305,47,2.712,48,4.531,49,3.439,50,3.305,51,2.509,52,3.305,53,3.305,54,2.965,55,2.509,56,2.34,57,2.712,58,2.712,59,3.717,60,3.305,61,2.196,62,2.712,63,2.544,64,2.069,65,2.965,66,0.936,67,1.856,68,2.34,69,1.312,70,1.316,71,3.305,72,3.305,73,3.821,74,1.856,75,1.132,76,2.965,77,3.305,78,3.305,79,3.821,80,3.305,81,3.305,82,3.305,83,3.305,84,1.284,85,3.305,86,4.563,87,3.821,88,3.305,89,1.4,90,4.531,91,1.602,92,3.821,93,1.764,94,1.53]],["title/classes/AllExceptionsFilter.html",[16,0.099,95,2.991]],["body/classes/AllExceptionsFilter.html",[3,0.18,4,0.18,5,0.159,10,0.263,11,0.016,12,0.405,15,0.18,16,0.112,17,0.012,18,0.012,24,0.565,25,1.273,30,1.502,33,0.531,35,0.817,36,0.597,37,0.436,38,0.817,40,0.931,75,1.7,89,2.488,95,4.451,96,1.535,97,5.535,98,3.784,99,3.513,100,6.399,101,3.679,102,4.374,103,7.236,104,3.108,105,3.299,106,4.374,107,5.735,108,6.399,109,6.792,110,4.374,111,3.278,112,4.961,113,4.961,114,2.02,115,3.784,116,2.679,117,2.522,118,4.374,119,4.374,120,4.374,121,4.374,122,6.399,123,2.369,124,4.374,125,4.374,126,5.735,127,3.784,128,4.374,129,4.374,130,4.374,131,4.374,132,4.374,133,3.395,134,4.374,135,3.784,136,4.374]],["title/modules/AppModule.html",[137,1.242,138,2.735]],["body/modules/AppModule.html",[3,0.167,4,0.167,5,0.148,10,0.314,11,0.016,12,0.376,15,0.167,16,0.104,17,0.011,18,0.011,74,1.973,137,1.987,138,5.614,139,1.786,140,1.786,141,1.973,142,1.973,143,1.786,144,1.973,145,1.973,146,3.514,147,3.514,148,4.653,149,4.34,150,4.653,151,4.072,152,4.34,153,4.653,154,4.653,155,3.838,156,2.652,157,1.973,158,1.973,159,4.062,160,2.797,161,2.2,162,1.488,163,6.167,164,0.864,165,6.167,166,4.062,167,3.514,168,3.514,169,4.062,170,4.062,171,4.787,172,3.152,173,3.514,174,4.062,175,2.883,176,4.062,177,4.062]],["title/controllers/AuthenticationController.html",[178,1.352,179,2.735]],["body/controllers/AuthenticationController.html",[1,1.421,3,0.126,4,0.126,5,0.112,10,0.292,11,0.016,12,0.285,15,0.126,16,0.079,17,0.009,18,0.009,24,0.397,25,0.997,30,0.806,33,0.54,35,0.831,36,0.608,37,0.472,38,0.831,40,1.242,44,2.448,51,2.021,66,0.704,67,1.495,69,1.4,75,1.332,84,2.087,89,1.647,117,1.976,133,5.712,178,1.08,179,3.19,180,1.08,181,2.389,182,1.667,183,3.078,184,4.592,185,4.592,186,4.592,187,4.12,188,3.078,189,5.05,190,7.671,191,2.235,192,4.495,193,3.078,194,3.455,195,3.078,196,4.601,197,3.078,198,3.078,199,1.753,200,3.078,201,3.078,202,3.078,203,3.078,204,4.531,205,4.495,206,3.078,207,2.875,208,1.769,209,1.667,210,1.495,211,2.185,212,1.667,213,2.434,214,2.185,215,3.078,216,3.252,217,2.185,218,2.389,219,2.753,220,2.663,221,3.18,222,4.495,223,1.667,224,2.579,225,1.667,226,1.667,227,2.021,228,3.078,229,3.078,230,5.838,231,3.078,232,4.101,233,5.309,234,3.078,235,2.663,236,1.667,237,3.078,238,3.078,239,1.769,240,3.078,241,1.886,242,3.078,243,3.078,244,3.078,245,3.078,246,3.078,247,2.951,248,3.078,249,3.078]],["title/modules/AuthenticationModule.html",[137,1.242,148,2.531]],["body/modules/AuthenticationModule.html",[3,0.159,4,0.159,5,0.141,10,0.316,11,0.016,12,0.358,14,2.368,15,0.159,16,0.099,17,0.011,18,0.011,19,4.586,32,3.782,57,2.744,58,2.744,105,3.392,116,2.368,137,1.938,139,1.7,140,1.7,141,1.878,142,1.878,143,1.7,144,2.921,145,2.921,148,5.182,155,3.782,156,2.565,157,1.878,158,1.878,160,2.705,161,2.094,162,1.417,175,2.744,179,4.268,180,1.852,216,4.652,218,3.001,219,4.277,220,3.345,250,3.345,251,3.867,252,3.345,253,3.345,254,3.577,255,4.586,256,3.867,257,5.281,258,3.867,259,3.001,260,3.867,261,2.368,262,3.001,263,3.001,264,2.539,265,3.867,266,5.281,267,3.867,268,3.867,269,3.867]],["title/injectables/AuthenticationService.html",[0,0.691,216,2.36]],["body/injectables/AuthenticationService.html",[0,0.649,2,0.811,3,0.095,4,0.095,5,0.084,10,0.277,11,0.016,12,0.214,15,0.207,16,0.059,17,0.007,18,0.007,24,0.298,25,0.803,28,2.192,30,0.948,32,3.288,33,0.562,35,0.865,36,0.632,37,0.502,38,0.865,40,1.236,55,1.518,56,1.416,57,1.641,58,1.641,65,2.809,66,1.18,67,3.21,69,1.117,70,0.91,75,1.495,82,2,86,3.887,89,2.541,91,2.909,93,2.682,94,2.326,101,1.252,117,2.905,164,0.492,184,3.131,185,3.131,186,3.131,187,3.461,199,1.792,204,3.916,216,2.217,217,1.641,227,3.814,247,4.126,254,2.584,259,1.794,264,1.518,270,1.794,271,3.619,272,4.46,273,2.312,274,2.975,275,6.07,276,2.928,277,2.312,278,3.619,279,2.312,280,4.241,281,2.205,282,3.619,283,2.312,284,3.619,285,2.312,286,3.619,287,2.312,288,2.312,289,2.312,290,2.312,291,3.916,292,2.312,293,2.312,294,2.116,295,1.794,296,1.184,297,1.123,298,1.329,299,1.329,300,1.518,301,2,302,2,303,1.641,304,2,305,1.518,306,2,307,1.518,308,3.131,309,3.131,310,4.46,311,2.312,312,3.619,313,2.312,314,3.619,315,1.634,316,2.312,317,5.587,318,2.312,319,2.312,320,4.46,321,2.312,322,2.569,323,2,324,3.619,325,2.312,326,2.312,327,2.312,328,2.312,329,2.312,330,4.46,331,4.46,332,3.131,333,2.312,334,5.045,335,3.131,336,2,337,2.312,338,2,339,2.312,340,1.329,341,1.794,342,3.619,343,3.619,344,3.619,345,2,346,2,347,2,348,2,349,2.312,350,3.131,351,2,352,2.312]],["title/classes/BadRequestException.html",[16,0.099,297,1.872]],["body/classes/BadRequestException.html",[3,0.218,4,0.218,5,0.194,8,1.844,10,0.266,11,0.016,12,0.492,15,0.218,16,0.136,17,0.013,18,0.013,30,1.391,33,0.492,35,0.757,36,0.553,37,0.404,38,0.757,43,3.254,70,1.335,96,1.864,114,2.453,241,3.254,297,3.151,348,4.595,353,5.611,354,4.595,355,3.079,356,3.728,357,5.312,358,3.151,359,3.254,360,3.254,361,2.581,362,5.312,363,2.336,364,5.312,365,5.312,366,5.312,367,4.595]],["title/classes/BaseEntityWithExtras.html",[16,0.099,368,1.872]],["body/classes/BaseEntityWithExtras.html",[3,0.188,4,0.188,5,0.167,8,1.678,10,0.188,11,0.016,15,0.242,16,0.117,17,0.012,18,0.012,24,0.59,25,1.31,26,3.991,33,0.639,37,0.348,40,1.47,66,1.166,68,4.231,69,1.409,96,1.603,164,0.973,368,3.175,369,5.55,370,2.304,371,3.548,372,5.654,373,3.969,374,6.907,375,3.969,376,3.969,377,4.571,378,4.571,379,4.571,380,4.571,381,3.54,382,3.954,383,3.548,384,4.571]],["title/classes/BaseException.html",[16,0.099,355,1.695]],["body/classes/BaseException.html",[3,0.206,4,0.206,5,0.183,8,1.779,10,0.206,11,0.016,12,0.464,15,0.206,16,0.129,17,0.013,18,0.013,30,1.312,33,0.464,35,0.714,36,0.522,37,0.476,38,0.714,66,0.979,76,3.888,96,1.757,113,5.9,114,3.298,135,6.179,355,2.75,358,3.313,361,3.313,363,2.999,385,3.888,386,6.255,387,6.82,388,4.84,389,2.566,390,5.544,391,5.01,392,4.333,393,5.01,394,5.01,395,2.566]],["title/injectables/CookieService.html",[0,0.691,219,2.36]],["body/injectables/CookieService.html",[0,1.014,2,1.504,3,0.176,4,0.176,5,0.156,10,0.301,11,0.016,12,0.397,15,0.176,16,0.11,17,0.011,18,0.011,24,0.553,25,1.256,30,1.123,33,0.586,35,0.902,36,0.66,37,0.482,38,0.902,40,1.204,51,2.815,55,2.815,56,2.626,59,3.043,60,3.708,61,3.253,62,4.017,74,2.083,75,1.271,84,2.265,104,2.749,105,3.273,112,5.829,116,2.626,133,5.952,217,4.782,218,3.327,219,3.467,317,3.708,396,3.708,397,5.66,398,4.896,399,4.287,400,4.287,401,5.66,402,4.287,403,5.66,404,4.287,405,3.043,406,3.708,407,4.287,408,4.287,409,5.66,410,5.66,411,5.66,412,5.66,413,5.66,414,4.287,415,4.287,416,4.287,417,4.287,418,4.287,419,4.287]],["title/injectables/CryptoService.html",[0,0.691,254,1.974]],["body/injectables/CryptoService.html",[0,1.178,2,1.905,3,0.223,4,0.27,5,0.198,10,0.27,11,0.016,12,0.503,15,0.223,16,0.139,17,0.013,18,0.013,24,0.701,25,1.459,33,0.503,35,0.774,36,0.566,37,0.413,38,0.774,40,1.156,66,1.178,69,1.108,254,3.368,276,4.317,420,4.699,421,6.574,422,6.574,423,5.432,424,4.699,425,5.432]],["title/injectables/DateService.html",[0,0.691,105,1.872]],["body/injectables/DateService.html",[0,0.554,2,0.666,3,0.078,4,0.078,5,0.069,10,0.127,11,0.016,12,0.176,15,0.078,16,0.049,17,0.006,18,0.006,24,0.245,25,0.686,29,2.4,33,0.459,35,0.642,36,0.47,37,0.377,38,0.642,40,1.324,61,3.059,66,1.115,69,0.92,75,1.159,84,1.039,89,2.488,94,1.988,104,3.697,105,2.586,117,1.72,123,1.028,127,5.944,239,1.777,241,1.163,363,2.66,392,3.901,395,0.973,426,1.474,427,1.238,428,3.912,429,3.092,430,4.509,431,3.092,432,3.092,433,3.092,434,1.899,435,5.38,436,5.323,437,5.85,438,4.509,439,4.509,440,6.605,441,7.215,442,6.366,443,5.799,444,4.509,445,6.704,446,2.675,447,1.9,448,5.06,449,4.509,450,3.901,451,4.509,452,4.509,453,6.22,454,5.85,455,4.509,456,2.675,457,5.323,458,5.85,459,6.366,460,6.366,461,5.323,462,3.092,463,3.092,464,3.092,465,4.509,466,3.092,467,4.509,468,4.509,469,4.509,470,4.509,471,4.509,472,4.355,473,3.092,474,1.899,475,5.323,476,4.854,477,3.092,478,3.092,479,1.899,480,3.092,481,2.675,482,3.092,483,3.092,484,4.509,485,4.509,486,2.4,487,3.092,488,3.092,489,1.899,490,3.092,491,3.092,492,4.509,493,0.877,494,3.092,495,3.092,496,5.323,497,4.509,498,2.675,499,1.899,500,3.092,501,3.092,502,3.092,503,3.092,504,3.092,505,1.474,506,1.642,507,1.348,508,1.474,509,3.092,510,2.592,511,1.642,512,1.899,513,1.899,514,1.899,515,1.899,516,4.965,517,1.899,518,1.899,519,1.899,520,1.899,521,1.899,522,1.899,523,3.092,524,4.509,525,5.85,526,1.899,527,1.899,528,1.899,529,1.899,530,1.899,531,1.899,532,1.899]],["title/classes/DeleteProjectNotAllowedException.html",[16,0.099,533,2.735]],["body/classes/DeleteProjectNotAllowedException.html",[3,0.216,4,0.216,5,0.192,8,1.835,10,0.265,11,0.016,12,0.488,15,0.216,16,0.135,17,0.013,18,0.013,30,1.38,33,0.488,35,0.75,36,0.549,37,0.401,38,0.75,70,1.324,96,1.848,114,2.433,199,1.38,241,3.227,355,3.068,356,3.709,358,3.135,361,2.56,363,2.317,533,4.58,534,5.582,535,2.733,536,4.558,537,5.269,538,4.089,539,5.269,540,6.454,541,5.269,542,3.739]],["title/classes/IncorrectCredentialsException.html",[16,0.099,300,2.531]],["body/classes/IncorrectCredentialsException.html",[3,0.218,4,0.218,5,0.194,8,1.844,10,0.266,11,0.016,12,0.492,15,0.218,16,0.136,17,0.013,18,0.013,30,1.391,33,0.492,35,0.757,36,0.553,37,0.404,38,0.757,67,2.581,70,1.335,96,1.864,114,2.453,227,3.488,300,4.259,355,3.079,356,3.728,358,3.151,359,3.254,360,3.254,361,2.581,363,2.336,472,4.123,543,5.611,544,4.595,545,5.312,546,5.312,547,5.312,548,5.312,549,4.123,550,5.312]],["title/classes/InvalidUUIDFormatException.html",[16,0.099,551,2.735]],["body/classes/InvalidUUIDFormatException.html",[3,0.216,4,0.216,5,0.191,8,1.832,10,0.265,11,0.016,12,0.486,15,0.216,16,0.135,17,0.013,18,0.013,30,1.376,33,0.486,35,0.748,36,0.547,37,0.399,38,0.748,70,1.321,96,1.843,114,2.426,241,3.219,355,3.064,356,3.703,358,3.13,361,2.553,363,2.311,447,2.553,538,4.078,551,4.572,552,5.573,553,4.268,554,4.545,555,5.255,556,5.255,557,5.573,558,6.443,559,5.255,560,5.255,561,5.255]],["title/injectables/JsonApiInterceptor.html",[0,0.691,562,2.991]],["body/injectables/JsonApiInterceptor.html",[0,1.105,2,1.717,3,0.201,4,0.201,5,0.178,10,0.253,11,0.016,12,0.453,15,0.201,16,0.126,17,0.012,18,0.012,24,0.632,25,1.368,33,0.453,35,0.697,36,0.51,37,0.372,38,0.697,40,1.042,69,1.377,70,1.549,99,2.998,194,3.279,210,2.378,389,2.508,562,4.785,563,5.333,564,4.234,565,6.165,566,6.165,567,6.128,568,6.749,569,7.084,570,4.895,571,4.895,572,6.165,573,4.234,574,4.234,575,4.895,576,4.234,577,4.895,578,6.128]],["title/entities/MilestoneEstimate.html",[370,1.242,579,2.087]],["body/entities/MilestoneEstimate.html",[3,0.162,4,0.162,5,0.144,8,1.124,10,0.268,11,0.016,15,0.162,16,0.102,17,0.011,18,0.011,24,0.51,26,3.116,28,1.222,33,0.604,36,0.558,37,0.556,66,1.145,69,1.241,70,0.994,104,3.168,164,0.841,191,2.497,281,1.274,368,2.604,370,1.727,373,2.272,375,2.272,376,2.272,381,2.904,389,2.025,427,2.147,493,2.476,498,4.638,579,2.904,580,2.141,581,5.897,582,3.42,583,6.522,584,1.855,585,4.306,586,5.642,587,3.284,588,4.638,589,3.954,590,3.116,591,3.954,592,3.492,593,2.596,594,5.361,595,3.284,596,2.904,597,3.954,598,3.805,599,3.521,600,3.954,601,3.496,602,3.116,603,3.521,604,2.422,605,2.422,606,2.272,607,2.025,608,2.272,609,1.329,610,3.954,611,3.081]],["title/controllers/MilestoneEstimateController.html",[178,1.352,612,2.735]],["body/controllers/MilestoneEstimateController.html",[1,1.754,3,0.156,4,0.156,5,0.138,10,0.302,11,0.016,12,0.352,15,0.156,16,0.098,17,0.01,18,0.01,24,0.49,25,1.158,33,0.551,35,0.849,36,0.621,37,0.453,38,0.849,40,1.268,44,2.913,66,1.087,69,1.371,74,1.845,75,1.126,164,0.808,178,1.332,180,1.332,182,2.057,191,2.281,194,3.571,207,3.227,208,3.424,209,2.057,210,1.845,212,2.057,213,2.057,221,3.444,223,2.057,224,1.845,225,2.057,226,2.057,236,2.057,294,2.983,315,2.35,510,2.183,579,2.057,584,1.824,612,3.702,613,5.548,614,3.286,615,3.798,616,2.751,617,2.62,618,2.494,619,3.798,620,1.946,621,3.702,622,3.798,623,1.946,624,3.195,625,3.798,626,2.327,627,2.494,628,2.494,629,3.052,630,2.327,631,2.327,632,3.424,633,2.948,634,2.948,635,3.798,636,3.798,637,3.195,638,3.798,639,3.798]],["title/modules/MilestoneEstimateModule.html",[137,1.242,149,2.36]],["body/modules/MilestoneEstimateModule.html",[3,0.197,4,0.197,5,0.174,10,0.304,11,0.016,12,0.443,15,0.197,16,0.123,17,0.012,18,0.012,105,3.6,116,2.932,137,2.152,139,2.105,140,2.105,141,2.325,142,2.325,143,2.105,144,3.245,145,3.245,149,4.712,156,2.953,157,2.325,158,2.325,160,2.452,161,2.592,162,1.753,180,2.132,579,2.592,612,4.74,627,3.143,628,3.143,632,4.507,633,3.715,634,3.715,640,4.14,641,4.14,642,4.14,643,4.786,644,4.786,645,4.786,646,4.786,647,4.786]],["title/injectables/MilestoneEstimateService.html",[0,0.691,632,2.215]],["body/injectables/MilestoneEstimateService.html",[0,0.858,2,1.179,3,0.138,4,0.138,5,0.122,10,0.282,11,0.016,12,0.311,15,0.138,16,0.086,17,0.01,18,0.01,24,0.434,25,1.063,28,2.21,30,1.254,33,0.563,35,0.866,36,0.633,37,0.462,38,0.866,40,1.187,66,1.046,69,1.138,75,1.42,84,1.61,89,2.044,91,2.34,93,3.085,94,2.435,101,2.594,104,3.122,105,2.954,111,3.422,116,2.059,117,2.106,123,3.294,162,1.232,164,0.715,281,2.153,294,2.883,295,2.609,297,1.633,298,1.932,299,1.932,315,2.044,340,2.753,395,2.454,579,2.594,584,1.828,616,2.212,617,2.106,620,2.454,623,2.454,627,2.208,628,2.208,632,2.753,648,5.56,649,2.908,650,3.362,651,3.495,652,3.362,653,4.79,654,4.79,655,3.362,656,4.79,657,3.362,658,4.316,659,3.362,660,1.932,661,3.022,662,2.208,663,1.932,664,2.208,665,3.362,666,2.908,667,3.362,668,5.58,669,3.362,670,5.58,671,3.362,672,2.908,673,3.362,674,3.362,675,3.362,676,4.79,677,3.145,678,2.934,679,3.362,680,4.79]],["title/classes/NoAffectedRowException.html",[16,0.099,661,2.087]],["body/classes/NoAffectedRowException.html",[3,0.211,4,0.211,5,0.187,8,1.805,10,0.261,11,0.016,12,0.475,15,0.211,16,0.132,17,0.013,18,0.013,30,1.343,33,0.475,35,0.731,36,0.534,37,0.483,38,0.731,43,3.142,70,1.289,96,1.799,111,2.627,114,2.368,355,3.031,356,3.648,358,3.084,359,3.142,360,3.142,361,2.492,363,2.255,367,4.437,661,3.438,663,4.254,681,5.491,682,4.437,683,5.129,684,5.129,685,5.129,686,6.348,687,5.129,688,5.129,689,5.129,690,5.129,691,4.437,692,5.129]],["title/controllers/ProfileController.html",[178,1.352,693,2.735]],["body/controllers/ProfileController.html",[1,1.62,3,0.144,4,0.144,5,0.128,10,0.309,11,0.016,12,0.325,15,0.144,16,0.09,17,0.01,18,0.01,24,0.453,25,1.096,33,0.529,35,0.814,36,0.595,37,0.434,38,0.814,40,1.215,44,2.599,63,1.704,64,1.9,66,1.061,69,1.42,74,1.704,75,1.04,84,1.179,93,1.62,94,1.405,164,0.747,178,1.231,180,1.231,182,1.9,191,2.187,194,3.452,196,4.053,199,1.972,207,2.674,209,1.9,210,1.704,211,2.49,212,1.9,213,1.9,221,2.926,223,1.9,224,1.704,225,1.9,226,1.9,236,1.9,239,2.016,274,2.926,294,2.599,296,1.797,300,2.304,301,3.035,302,3.035,307,2.304,315,1.809,322,3.504,323,3.035,510,2.016,584,1.763,624,3.024,626,2.149,629,2.926,630,2.149,631,2.149,637,3.024,693,3.504,694,3.035,695,3.509,696,5.712,697,5.712,698,5.712,699,3.509,700,3.509,701,3.509,702,2.862,703,3.831,704,3.509,705,3.509,706,3.509,707,2.016,708,2.304,709,3.509,710,3.509,711,3.509,712,3.509,713,3.509,714,3.509]],["title/modules/ProfileModule.html",[137,1.242,150,2.531]],["body/modules/ProfileModule.html",[3,0.209,4,0.209,5,0.185,10,0.295,11,0.016,12,0.471,15,0.209,16,0.131,17,0.013,18,0.013,137,2.213,139,2.238,140,2.238,141,2.472,142,2.472,143,2.238,144,3.068,145,2.472,150,5.064,151,4.326,155,4.077,156,3.068,157,2.472,158,2.472,160,3.235,171,3.949,172,3.949,175,3.611,180,2.216,693,4.875,715,5.089,716,5.089,717,5.089,718,5.089]],["title/entities/Project.html",[370,1.242,535,1.412]],["body/entities/Project.html",[3,0.125,4,0.125,5,0.111,8,0.863,10,0.281,11,0.016,15,0.125,16,0.078,17,0.009,18,0.009,24,0.392,26,2.697,28,0.938,33,0.656,36,0.694,37,0.577,63,3.134,64,1.644,66,1.11,69,1.074,70,0.763,84,1.949,104,2.817,164,0.646,191,2.714,199,1.745,281,0.978,296,1.555,368,2.161,370,1.433,373,1.744,375,1.744,376,1.744,381,2.409,388,3.157,389,1.555,427,1.781,493,2.677,535,1.63,542,4.381,580,1.644,584,1.649,585,3.225,587,3.225,590,2.697,592,3.162,593,1.993,595,2.725,596,2.409,599,2.921,601,3.026,602,3.414,603,2.921,604,1.859,605,1.859,606,1.744,607,1.555,608,1.744,609,1.77,611,2.556,719,2.625,720,5.34,721,6.173,722,5.798,723,5.798,724,5.798,725,6.173,726,3.035,727,3.343,728,4.087,729,3.026,730,4.448,731,3.035,732,4.448,733,3.035,734,3.035,735,3.848,736,3.035,737,3.452,738,3.035,739,4.448,740,3.035,741,3.848,742,3.452,743,3.035,744,3.548,745,3.737,746,4.448,747,3.035,748,3.035,749,3.035,750,4.5,751,3.035]],["title/controllers/ProjectController.html",[178,1.352,752,2.735]],["body/controllers/ProjectController.html",[1,1.384,3,0.123,4,0.123,5,0.109,10,0.301,11,0.016,12,0.277,15,0.123,16,0.077,17,0.009,18,0.009,24,0.387,25,0.978,33,0.568,35,0.875,36,0.64,37,0.467,38,0.875,40,1.307,44,2.693,66,1.088,69,1.354,74,1.456,75,0.888,164,0.638,178,1.051,180,1.051,182,1.623,191,2.351,194,3.558,196,4.934,199,1.918,207,2.831,208,3.004,209,1.623,210,1.456,211,2.127,212,1.623,213,1.623,221,2.678,223,1.623,224,1.456,225,1.623,226,1.623,232,3.53,236,1.623,294,2.784,315,2.111,510,1.722,535,1.098,584,1.826,609,1.007,616,2.414,617,2.299,618,1.968,620,1.535,621,3.128,623,1.535,624,2.7,626,1.836,629,2.952,630,1.836,631,1.836,637,3.202,702,3.066,703,3.421,707,1.722,708,1.968,752,3.128,753,2.593,754,2.593,755,3.202,756,3.202,757,2.997,758,2.997,759,1.968,760,3.489,761,3.225,762,3.309,763,3.225,764,2.997,765,1.836,766,2.997,767,2.997,768,1.836,769,2.127,770,1.836,771,2.127,772,2.127,773,3.202,774,2.593,775,2.997,776,4.408,777,4.408,778,4.408,779,2.997,780,2.997,781,2.997,782,4.408,783,2.997,784,2.997]],["title/entities/ProjectMember.html",[370,1.242,727,2.087]],["body/entities/ProjectMember.html",[3,0.158,4,0.158,5,0.14,8,1.091,10,0.277,11,0.016,15,0.216,16,0.098,17,0.011,18,0.011,24,0.495,26,3.068,28,1.185,33,0.596,37,0.513,66,1.008,69,1.222,70,0.964,164,0.816,191,2.466,199,1.986,281,1.236,296,1.965,368,2.551,370,1.692,373,2.205,375,2.205,376,2.205,381,2.845,389,1.965,427,2.103,535,2.779,580,2.078,584,1.832,590,3.068,593,3.449,595,3.945,596,3.488,601,3.442,602,2.69,603,3.933,604,2.35,605,2.35,606,2.205,607,1.965,608,2.205,609,1.289,611,3.018,727,2.845,785,4.43,786,2.977,787,5.571,788,3.836,789,4.543,790,3.836,791,5.836,792,2.977,793,5.836,794,3.836,795,5.252,796,3.836,797,4.076,798,4.076,799,3.836]],["title/classes/ProjectMemberAlreadyExistsException.html",[16,0.099,800,2.735]],["body/classes/ProjectMemberAlreadyExistsException.html",[3,0.21,4,0.21,5,0.186,8,1.802,10,0.26,11,0.016,12,0.473,15,0.21,16,0.131,17,0.013,18,0.013,30,1.34,33,0.473,35,0.729,36,0.533,37,0.389,38,0.729,70,1.286,94,2.049,96,1.794,111,2.62,114,2.362,199,1.34,305,4.726,355,3.027,356,3.642,358,3.078,359,3.133,360,3.133,361,2.485,363,2.249,535,2.522,729,4.251,800,4.497,801,5.482,802,3.97,803,4.425,804,5.116,805,3.97,806,5.116,807,5.116,808,3.97]],["title/controllers/ProjectMemberController.html",[178,1.352,809,2.735]],["body/controllers/ProjectMemberController.html",[1,1.62,3,0.144,4,0.144,5,0.128,10,0.304,11,0.016,12,0.325,15,0.144,16,0.09,17,0.01,18,0.01,24,0.453,25,1.096,30,0.919,33,0.529,35,0.814,36,0.595,37,0.434,38,0.814,40,1.215,44,2.841,66,1.061,69,1.42,75,1.463,117,2.171,164,0.747,178,1.231,180,1.231,182,1.9,191,2.187,194,3.556,199,1.496,207,3.094,208,3.282,209,1.9,210,1.704,212,1.9,213,1.9,221,2.926,223,1.9,224,2.775,225,1.9,226,1.9,232,3.796,236,1.9,274,2.926,294,2.919,296,1.797,307,2.304,315,2.393,322,2.49,510,2.016,584,1.763,609,1.179,616,2.637,617,2.511,618,2.304,620,1.797,621,3.504,623,1.797,624,3.024,626,2.149,629,2.926,630,2.149,631,2.149,637,3.024,727,2.674,729,2.016,809,3.504,810,4.399,811,3.035,812,3.509,813,3.509,814,3.509,815,3.509,816,3.509,817,3.282,818,2.016,819,2.723,820,3.509,821,3.509,822,3.509,823,3.509,824,3.509,825,3.509,826,3.509,827,3.509]],["title/modules/ProjectMemberModule.html",[137,1.242,151,2.215]],["body/modules/ProjectMemberModule.html",[3,0.193,4,0.193,5,0.171,10,0.308,11,0.016,12,0.434,15,0.193,16,0.121,17,0.012,18,0.012,137,2.132,139,2.064,140,2.064,141,2.28,142,2.28,143,2.064,144,3.215,145,3.215,151,4.406,155,3.994,156,2.916,157,2.28,158,2.28,160,3.075,161,2.542,162,1.719,175,3.331,180,2.106,535,2.199,609,2.017,727,2.542,729,2.697,809,4.697,817,4.495,818,2.697,819,3.642,828,4.06,829,4.693,830,4.06,831,4.06,832,3.642,833,4.693,834,3.642,835,4.693,836,4.693]],["title/injectables/ProjectMemberService.html",[0,0.691,817,2.215]],["body/injectables/ProjectMemberService.html",[0,0.757,2,0.993,3,0.116,4,0.116,5,0.103,10,0.275,11,0.016,12,0.262,15,0.116,16,0.073,17,0.008,18,0.008,24,0.365,25,0.937,28,2.116,30,1.106,33,0.582,35,0.896,36,0.655,37,0.478,38,0.896,40,1.276,66,1.072,69,1.283,75,1.252,84,1.42,89,2.304,91,2.515,93,3.093,94,2.519,101,2.288,111,3.222,117,1.858,123,2.288,162,1.037,164,0.602,199,0.741,281,2.246,294,2.924,297,1.375,298,1.627,299,1.627,305,1.859,306,2.448,315,1.548,340,2.428,341,2.197,395,1.45,535,2.053,542,2.009,584,1.983,609,1.42,616,1.951,617,1.858,620,2.164,623,2.164,651,3.746,658,3.978,660,1.627,661,2.288,662,1.859,663,1.627,664,1.859,677,1.859,678,2.588,702,2.588,727,3.036,729,3.221,756,3.096,760,2.871,761,2.723,762,2.723,763,2.723,765,1.734,800,3.587,817,2.428,837,4.625,838,2.448,839,3.654,840,2.83,841,4.372,842,2.83,843,4.225,844,4.225,845,2.83,846,2.83,847,4.225,848,2.83,849,2.83,850,2.83,851,2.83,852,2.83,853,3.923,854,2.83,855,2.83,856,2.448,857,2.83,858,2.83,859,4.225,860,4.225,861,4.225,862,2.83,863,4.225,864,4.225,865,2.83,866,2.009,867,2.83,868,2.998,869,2.448,870,2.83]],["title/entities/ProjectMilestone.html",[370,1.242,592,1.974]],["body/entities/ProjectMilestone.html",[3,0.155,4,0.155,5,0.138,8,1.074,10,0.276,11,0.016,15,0.155,16,0.097,17,0.01,18,0.01,24,0.487,26,3.043,28,1.167,33,0.621,36,0.699,37,0.54,66,1.085,69,1.212,70,0.949,164,0.804,191,2.569,239,2.17,281,1.217,368,2.524,370,1.674,373,2.17,375,2.17,376,2.17,381,2.814,389,1.934,427,2.081,486,4.966,493,2.399,535,2.772,579,3.634,580,2.045,584,1.82,587,2.313,590,3.043,592,2.661,593,2.48,595,3.182,596,2.814,601,3.414,602,3.277,603,3.412,604,2.313,605,2.313,606,2.17,607,1.934,608,2.17,609,1.269,611,2.986,627,2.48,628,3.9,728,2.931,750,4.032,785,4.553,871,3.266,872,5.803,873,5.535,874,5.196,875,3.776,876,3.776,877,4.032,878,3.776,879,3.776,880,4.494,881,3.776,882,3.776]],["title/controllers/ProjectMilestoneController.html",[178,1.352,883,2.735]],["body/controllers/ProjectMilestoneController.html",[1,1.558,3,0.139,4,0.139,5,0.123,10,0.305,11,0.016,12,0.312,15,0.139,16,0.087,17,0.01,18,0.01,24,0.435,25,1.066,33,0.564,35,0.868,36,0.634,37,0.463,38,0.868,40,1.296,44,2.805,66,1.047,69,1.365,74,1.639,75,1,164,0.718,178,1.184,180,1.184,182,1.827,191,2.332,194,3.568,207,3.028,208,3.213,209,1.827,210,1.639,212,1.827,213,1.827,221,2.864,223,1.827,224,1.639,225,1.827,226,1.827,232,3.731,236,1.827,294,2.886,315,2.231,510,1.939,584,1.732,585,2.067,592,1.728,609,1.134,616,2.581,617,2.458,618,2.216,620,1.728,621,3.408,623,1.728,624,2.941,626,2.067,629,2.864,630,2.067,631,2.067,637,2.941,702,2.812,707,1.939,708,2.216,755,3.424,759,2.216,760,3.12,761,2.959,762,2.959,763,2.959,768,2.067,769,2.394,770,2.067,771,2.394,772,2.394,810,4.568,818,1.939,883,3.408,884,2.918,885,3.374,886,3.374,887,3.374,888,3.374,889,3.374,890,3.213,891,2.619,892,3.374,893,3.374,894,3.374,895,3.374,896,3.374,897,3.374,898,3.374,899,3.374]],["title/modules/ProjectMilestoneModule.html",[137,1.242,152,2.36]],["body/modules/ProjectMilestoneModule.html",[3,0.191,4,0.191,5,0.17,10,0.302,11,0.016,12,0.431,15,0.191,16,0.12,17,0.012,18,0.012,137,2.125,139,2.049,140,2.049,141,2.263,142,2.263,143,2.049,144,3.204,145,3.204,149,4.785,152,4.727,156,2.902,157,2.263,158,2.263,160,3.06,161,2.524,162,1.707,167,4.03,168,4.03,180,2.096,585,2.854,592,2.387,609,1.566,818,2.678,832,3.616,834,3.616,883,4.681,890,4.49,891,3.616,900,4.03,901,4.03,902,4.659,903,4.03,904,4.659,905,4.659,906,4.659]],["title/injectables/ProjectMilestoneService.html",[0,0.691,890,2.215]],["body/injectables/ProjectMilestoneService.html",[0,0.702,2,0.899,3,0.105,4,0.105,5,0.093,10,0.267,11,0.016,12,0.237,15,0.105,16,0.066,17,0.008,18,0.008,24,0.331,25,0.87,28,2.058,30,1.027,33,0.583,35,0.898,36,0.656,37,0.479,38,0.898,40,1.289,44,1.644,66,1.043,69,1.41,75,1.162,84,1.792,89,2.309,91,2.54,93,2.797,94,2.135,101,2.123,111,3.102,117,1.724,123,2.123,162,0.939,164,0.546,239,3.063,281,2.259,294,2.899,297,1.904,298,1.473,299,1.473,315,2.104,340,2.253,341,1.99,395,2.008,579,1.389,584,1.933,585,2.915,592,2.438,609,0.862,617,1.724,620,2.008,623,2.008,627,1.684,628,2.574,632,3.063,633,1.99,634,1.99,651,3.063,658,3.783,660,1.473,661,2.123,662,1.684,663,1.473,664,1.684,666,3.391,672,3.391,677,1.684,678,2.401,702,2.91,755,2.915,756,2.915,759,1.684,760,3.329,761,3.061,762,3.157,763,3.061,765,1.57,837,4.613,839,3.391,866,1.819,868,2.782,869,2.218,872,3.391,873,3.391,890,2.253,907,2.218,908,3.92,909,2.564,910,4.76,911,2.564,912,3.92,913,3.92,914,2.564,915,2.564,916,3.92,917,2.564,918,2.564,919,2.564,920,2.564,921,2.564,922,2.564,923,2.564,924,2.564,925,2.564,926,2.564,927,2.564,928,2.564,929,3.92,930,2.564,931,5.33,932,5.33,933,3.92,934,2.564,935,2.564,936,3.92,937,2.564,938,2.564,939,2.564,940,2.564,941,2.564,942,2.564,943,2.564,944,2.564]],["title/modules/ProjectModule.html",[137,1.242,153,2.531]],["body/modules/ProjectModule.html",[3,0.19,4,0.19,5,0.169,10,0.307,11,0.016,12,0.429,15,0.19,16,0.119,17,0.012,18,0.012,137,2.12,139,2.039,140,2.039,141,2.252,142,2.252,143,2.039,144,3.197,145,3.197,151,4.224,152,4.502,153,5.098,156,2.893,157,2.252,158,2.252,160,3.051,161,2.511,162,1.699,171,4.623,172,3.599,173,4.011,180,2.089,535,1.699,609,1.558,752,4.67,773,4.782,774,4.011,945,4.011,946,4.011,947,4.011,948,4.637,949,4.637,950,4.637,951,4.637]],["title/entities/ProjectReport.html",[370,1.242,744,2.215]],["body/entities/ProjectReport.html",[3,0.141,4,0.141,5,0.125,8,0.973,10,0.266,11,0.016,15,0.141,16,0.088,17,0.01,18,0.01,24,0.442,26,2.886,28,1.057,33,0.653,36,0.505,37,0.574,63,3.143,64,1.853,66,1.164,69,1.149,70,0.86,84,1.63,104,2.356,164,0.728,191,2.703,281,1.102,368,2.356,370,1.563,373,1.966,375,1.966,376,1.966,381,2.627,388,3.442,389,1.753,427,1.942,493,2.239,535,2.724,580,1.853,584,1.743,586,5.302,587,2.971,590,2.886,593,2.247,595,2.971,596,2.627,598,3.442,599,3.185,601,3.238,602,3.54,603,3.185,604,2.096,605,2.096,606,1.966,607,1.753,608,1.966,609,1.15,611,2.787,744,2.787,785,4.716,792,4.757,952,2.96,953,5.302,954,5.302,955,5.302,956,6.129,957,6.107,958,3.422,959,3.422,960,3.422,961,3.422,962,3.422,963,4.85,964,3.422,965,3.422,966,4.195,967,3.422,968,3.422]],["title/controllers/ProjectReportController.html",[178,1.352,969,2.735]],["body/controllers/ProjectReportController.html",[1,1.647,3,0.146,4,0.146,5,0.13,10,0.308,11,0.016,12,0.33,15,0.146,16,0.092,17,0.01,18,0.01,24,0.46,25,1.108,33,0.533,35,0.821,36,0.6,37,0.438,38,0.821,40,1.226,44,2.856,66,1.066,69,1.274,74,1.733,75,1.057,164,0.759,178,1.251,180,1.251,182,1.932,191,2.206,194,3.466,207,3.121,208,3.312,209,1.932,210,1.733,212,1.932,213,1.932,221,2.558,223,1.932,224,2.426,225,1.932,226,1.932,232,3.059,236,1.932,294,2.932,486,2.768,510,2.05,584,1.775,609,1.199,616,2.661,618,2.342,624,3.059,626,2.185,629,2.952,630,2.185,631,2.185,637,3.059,702,2.883,703,3.876,707,2.05,708,2.342,744,2.05,745,2.531,756,3.53,760,3.198,761,3.033,762,3.033,763,3.033,765,2.185,768,2.185,769,2.531,770,2.185,771,2.531,772,2.531,810,4.431,818,2.05,969,3.544,970,3.085,971,3.567,972,4.985,973,3.567,974,3.567,975,3.085,976,3.567,977,3.53,978,3.085,979,3.567,980,3.567,981,3.567,982,3.567,983,3.567,984,3.567,985,3.567]],["title/modules/ProjectReportModule.html",[137,1.242,154,2.531]],["body/modules/ProjectReportModule.html",[3,0.203,4,0.203,5,0.18,10,0.301,11,0.016,12,0.458,15,0.203,16,0.127,17,0.012,18,0.012,137,2.185,139,2.175,140,2.175,141,2.402,142,2.402,143,2.175,144,3.294,145,3.294,154,4.981,156,3.014,157,2.402,158,2.402,160,2.533,161,2.679,162,1.812,180,2.177,609,1.662,744,2.842,745,3.51,818,2.842,832,3.838,834,3.838,969,4.812,977,4.825,978,4.278,986,4.278,987,4.278,988,4.278,989,4.945,990,4.945,991,4.945]],["title/injectables/ProjectReportService.html",[0,0.691,977,2.36]],["body/injectables/ProjectReportService.html",[0,0.919,2,1.299,3,0.152,4,0.152,5,0.135,10,0.283,11,0.016,12,0.343,15,0.152,16,0.095,17,0.01,18,0.01,24,0.478,25,1.138,28,1.817,30,1.343,33,0.587,35,0.904,36,0.661,37,0.482,38,0.904,40,1.251,44,2.661,66,1.079,69,1.199,75,1.098,84,1.245,89,1.878,91,1.553,93,2.715,94,2.053,101,2.006,111,3.012,117,1.629,123,2.006,162,1.357,164,0.788,281,2.221,294,2.963,297,1.799,298,2.129,299,2.129,340,2.129,395,1.897,584,1.895,609,1.245,616,2.367,651,3.647,660,2.129,661,2.777,662,2.432,663,2.129,664,2.432,677,2.432,678,2.269,702,2.93,744,2.129,745,2.628,756,3.601,760,3.25,761,3.083,762,3.083,763,3.083,765,2.269,837,4.728,866,2.628,868,3.638,972,4.435,975,4.435,977,3.14,992,3.204,993,3.704,994,3.704,995,5.127,996,5.127,997,3.704,998,3.704,999,3.704,1000,3.704,1001,3.704,1002,3.704,1003,3.704,1004,3.704,1005,3.704,1006,3.704]],["title/injectables/ProjectService.html",[0,0.691,773,2.36]],["body/injectables/ProjectService.html",[0,0.665,2,0.838,3,0.098,4,0.098,5,0.087,10,0.279,11,0.016,12,0.221,15,0.098,16,0.061,17,0.007,18,0.007,24,0.308,25,0.824,28,2.016,30,0.972,33,0.545,35,0.839,36,0.613,37,0.448,38,0.839,40,1.184,66,1.145,69,1.253,75,1.35,84,1.726,89,2.251,91,2.469,93,3.013,94,2.358,101,2.467,111,3.342,117,2.002,123,2.467,162,0.875,164,0.508,199,0.626,280,4.529,281,2.149,294,2.736,297,1.161,298,1.373,299,1.373,315,1.881,340,2.617,395,1.224,533,2.635,535,2.327,542,3.645,584,1.988,585,2.274,592,1.224,609,1.531,616,1.714,617,1.633,620,1.902,623,1.902,651,2.951,658,3.645,660,1.373,661,2.011,662,1.569,663,1.373,664,1.569,677,1.569,678,2.789,702,2.933,720,2.067,727,1.294,729,2.134,755,2.789,756,2.789,760,3.254,761,2.985,762,3.086,763,2.985,765,1.464,773,2.274,789,2.067,817,2.951,818,2.134,819,1.854,841,3.212,853,3.534,856,2.067,866,1.696,868,2.635,880,2.067,890,2.951,891,1.854,1007,2.067,1008,2.389,1009,4.554,1010,4.554,1011,2.389,1012,3.713,1013,2.389,1014,2.389,1015,2.389,1016,2.389,1017,2.389,1018,2.389,1019,2.389,1020,2.389,1021,3.713,1022,3.713,1023,3.713,1024,3.713,1025,2.389,1026,2.389,1027,2.389,1028,2.389,1029,2.389,1030,3.713,1031,2.389,1032,3.713,1033,2.389,1034,2.389,1035,3.713,1036,2.389,1037,3.713,1038,2.389,1039,2.389,1040,2.389,1041,2.389,1042,2.389,1043,2.389,1044,2.389,1045,2.389]],["title/classes/ProjektarbeitAPI1723306279388.html",[16,0.099,1046,2.991]],["body/classes/ProjektarbeitAPI1723306279388.html",[3,0.093,4,0.093,5,0.082,10,0.093,11,0.016,15,0.093,16,0.058,17,0.007,18,0.007,24,0.567,25,0.789,28,1.778,33,0.407,35,0.506,36,0.627,37,0.379,38,0.506,40,0.757,66,0.354,67,1.098,68,3.524,70,1.964,91,3.196,96,0.793,99,2.178,104,2.632,164,0.481,199,0.931,227,1.485,280,3.558,281,1.606,315,2.205,427,1.424,447,1.098,493,3.142,505,2.76,535,1.826,553,4.522,584,1.987,588,1.956,596,3.26,598,2.524,599,2.886,616,2.779,617,2.647,735,1.956,737,1.755,741,1.956,742,1.755,787,1.956,793,1.956,797,1.755,798,1.755,808,4.671,877,1.755,953,1.956,954,1.956,955,1.956,957,4.311,966,1.956,1046,3.868,1047,4.311,1048,1.956,1049,3.411,1050,2.76,1051,2.76,1052,2.261,1053,2.76,1054,4.978,1055,2.261,1056,2.76,1057,2.261,1058,5.729,1059,5.392,1060,4.205,1061,1.755,1062,6.693,1063,1.956,1064,1.755,1065,1.755,1066,2.261,1067,3.556,1068,5.206,1069,6.386,1070,6.019,1071,1.956,1072,1.956,1073,3.802,1074,1.956,1075,1.956,1076,1.956,1077,4.977,1078,4.977,1079,4.311,1080,3.076,1081,4.311,1082,4.311,1083,1.956,1084,3.076,1085,6.043,1086,5.206,1087,3.076,1088,6.043,1089,5.206,1090,3.802,1091,5.206,1092,3.076,1093,3.076,1094,3.802,1095,3.076,1096,3.076,1097,3.076,1098,3.076,1099,1.956,1100,5.206,1101,5.393]],["title/injectables/RefreshTokenGuard.html",[0,0.691,214,2.735]],["body/injectables/RefreshTokenGuard.html",[0,1.22,2,2.019,3,0.236,4,0.236,5,0.21,7,4.467,8,1.935,9,5.887,10,0.28,11,0.016,12,0.533,13,4.979,14,3.525,15,0.236,16,0.148,17,0.014,18,0.014,214,4.83,1102,4.979,1103,5.887]],["title/injectables/RefreshTokenStrategy.html",[0,0.691,255,2.531]],["body/injectables/RefreshTokenStrategy.html",[0,0.932,2,1.327,3,0.155,4,0.155,5,0.138,8,1.48,10,0.297,11,0.016,12,0.35,14,2.317,15,0.155,16,0.097,17,0.01,18,0.01,21,2.685,22,4.5,23,4.615,24,0.488,25,1.155,26,3.046,27,5.539,28,1.837,29,4.038,30,0.991,31,3.273,32,3.757,33,0.55,34,3.273,35,0.741,36,0.542,37,0.452,38,0.741,39,3.273,40,1.107,41,5.143,42,3.273,43,4.353,44,2.685,45,4.97,46,3.273,47,2.685,48,4.5,49,3.416,50,3.273,51,2.484,52,3.273,53,3.273,54,2.936,55,2.484,56,2.317,57,2.685,58,2.685,61,2.174,62,2.685,63,2.527,64,2.049,65,2.936,66,0.931,67,1.838,68,2.317,69,1.306,70,1.307,71,3.273,72,3.273,74,1.838,75,1.121,76,2.936,77,3.273,78,3.273,80,3.273,81,3.273,83,3.273,84,1.272,85,3.273,88,3.273,89,1.386,90,4.5,91,1.587,93,1.747,94,1.515,247,4.408,255,3.416,346,3.273,405,3.692,406,3.273,1103,4.5,1104,4.97,1105,3.784,1106,3.784,1107,3.784,1108,3.784]],["title/classes/RelocatedMilestoneReachedFlag1723758746739.html",[16,0.099,1109,2.991]],["body/classes/RelocatedMilestoneReachedFlag1723758746739.html",[3,0.072,4,0.072,5,0.064,10,0.072,11,0.016,15,0.072,16,0.045,17,0.006,18,0.006,24,0.228,25,0.646,28,1.588,33,0.344,35,0.415,36,0.497,37,0.283,38,0.415,40,0.62,66,0.276,68,3.149,70,1.79,91,3.258,96,0.619,99,1.784,104,2.497,164,0.376,199,0.763,239,1.014,280,2.834,281,1.39,315,2.41,427,1.167,447,0.857,493,3.289,535,2.082,553,4.502,584,2.09,596,3.563,598,4.034,599,2.442,602,1.492,617,2.893,737,3.349,808,5.243,877,3.349,1049,2.886,1050,2.261,1051,2.261,1053,2.261,1054,4.573,1056,2.261,1058,6.014,1059,5.514,1060,3.99,1069,6.358,1077,5.25,1078,4.447,1079,4.917,1080,2.52,1081,4.704,1082,5.25,1083,2.52,1084,2.52,1085,6.703,1086,5.691,1087,3.733,1088,6.358,1089,5.691,1090,4.447,1091,5.691,1092,3.733,1093,3.733,1094,4.447,1095,3.733,1096,3.733,1097,3.733,1098,3.733,1099,2.52,1100,5.844,1109,3.349,1110,3.733,1111,1.527,1112,1.765,1113,1.765,1114,1.765,1115,2.913,1116,7.021,1117,3.719,1118,1.765,1119,1.765]],["title/classes/StoredProcedureAndEvent1723306299388.html",[16,0.099,1120,2.991]],["body/classes/StoredProcedureAndEvent1723306299388.html",[3,0.185,4,0.185,5,0.164,10,0.185,11,0.016,15,0.185,16,0.116,17,0.012,18,0.012,24,0.582,25,1.298,28,2.2,33,0.601,35,0.833,36,0.742,37,0.494,38,0.833,40,1.244,66,0.706,68,4.36,91,2.881,96,1.581,99,3.582,164,0.959,281,2.092,315,1.651,398,3.899,427,2.342,447,2.189,493,2.081,507,3.199,508,3.498,616,2.081,805,5.038,1049,5.038,1050,4.539,1051,4.539,1053,3.498,1054,5.842,1056,4.539,1058,3.498,1060,3.498,1065,3.498,1101,5.059,1120,5.332,1121,5.943,1122,3.899,1123,4.507,1124,4.507,1125,4.507,1126,5.848,1127,5.848,1128,4.507,1129,4.507,1130,4.507,1131,4.507,1132,4.507,1133,4.507]],["title/entities/TokenWhitelist.html",[261,2.36,370,1.242]],["body/entities/TokenWhitelist.html",[3,0.158,4,0.158,5,0.141,8,1.097,10,0.247,11,0.016,15,0.158,16,0.099,17,0.011,18,0.011,24,0.498,28,1.192,33,0.646,36,0.673,37,0.567,63,3.533,66,1.168,70,0.97,84,2.445,86,4.264,164,0.821,191,2.672,199,1.932,247,3.945,261,3.23,281,1.243,296,1.977,370,1.243,372,4.562,389,1.977,427,2.112,505,5.011,580,2.09,584,1.708,587,3.955,590,3.077,595,3.23,596,2.856,601,3.453,602,3.463,606,2.218,607,1.977,608,2.218,611,3.031,1061,4.093,1063,4.562,1064,4.093,1065,4.093,1134,6.18,1135,3.338,1136,5.197,1137,5.197,1138,3.859,1139,3.859,1140,3.859,1141,3.859,1142,3.859,1143,3.859,1144,5.274,1145,3.859,1146,5.274,1147,4.562,1148,3.859]],["title/injectables/TokenWhitelistService.html",[0,0.691,32,2.087]],["body/injectables/TokenWhitelistService.html",[0,0.78,2,1.034,3,0.121,4,0.121,5,0.107,10,0.271,11,0.016,12,0.273,15,0.179,16,0.076,17,0.009,18,0.009,24,0.38,25,0.966,28,2.139,30,1.14,32,2.358,33,0.591,35,0.909,36,0.665,37,0.502,38,0.909,40,1.298,55,1.935,56,1.805,66,1.199,69,1.436,70,1.533,75,1.534,86,4.53,89,2.483,91,2.558,104,2.514,105,2.777,116,1.805,117,2.276,162,1.08,164,0.627,199,1.356,239,3.669,247,4.192,254,2.928,261,1.805,262,2.287,263,2.287,264,1.935,276,3.399,280,4.545,281,2.268,291,4.437,295,2.287,315,1.595,332,5.522,335,2.549,336,3.765,345,2.549,347,2.549,350,3.765,351,2.549,584,1.472,617,2.276,651,3.285,660,1.694,1136,3.765,1137,3.765,1149,5.125,1150,2.287,1151,4.353,1152,4.353,1153,4.353,1154,2.947,1155,2.947,1156,4.353,1157,4.353,1158,2.947,1159,4.353,1160,2.947,1161,2.947,1162,2.947,1163,4.353,1164,2.947,1165,4.353,1166,2.947,1167,2.947,1168,5.176,1169,2.947,1170,4.353,1171,2.947,1172,2.947,1173,2.947,1174,2.947,1175,2.947,1176,4.353,1177,2.947,1178,2.947,1179,4.353]],["title/classes/UnauthorizedException.html",[16,0.099,49,2.531]],["body/classes/UnauthorizedException.html",[3,0.219,4,0.219,5,0.195,8,1.851,10,0.267,11,0.016,12,0.494,15,0.219,16,0.137,17,0.013,18,0.013,30,1.399,33,0.494,35,0.761,36,0.556,37,0.406,38,0.761,43,3.272,49,4.273,61,3.07,70,1.342,96,1.874,114,2.467,241,3.272,355,3.086,356,3.74,358,3.161,359,3.272,361,2.595,363,2.349,450,4.621,481,4.621,1180,4.621,1181,5.342,1182,5.342,1183,5.342,1184,5.342,1185,4.146]],["title/entities/User.html",[199,1.009,370,1.242]],["body/entities/User.html",[3,0.127,4,0.127,5,0.113,8,0.878,10,0.267,11,0.016,15,0.127,16,0.079,17,0.009,18,0.009,24,0.399,26,2.724,28,0.954,33,0.659,36,0.648,37,0.588,63,3.742,64,1.673,66,1.075,67,2.84,69,1.085,70,0.776,84,2.392,164,0.657,191,2.725,199,1.18,227,3.839,261,3.976,262,2.397,263,2.397,281,0.995,368,2.189,370,1.452,373,1.775,375,1.775,376,1.775,381,2.44,389,1.582,427,1.804,535,2.455,580,1.673,584,1.663,587,3.808,590,2.724,601,3.057,602,3.519,604,1.892,605,1.892,606,1.775,607,1.582,608,1.775,609,1.038,611,2.589,728,2.397,750,3.496,754,5.378,792,3.496,1071,3.897,1072,3.897,1073,3.897,1074,3.897,1075,3.897,1076,3.897,1147,3.897,1186,2.671,1187,5.847,1188,5.847,1189,5.847,1190,5.847,1191,5.847,1192,5.319,1193,7.294,1194,3.088,1195,3.088,1196,3.088,1197,3.088,1198,3.088,1199,3.088,1200,3.088,1201,3.088,1202,4.505,1203,3.088,1204,3.088,1205,4.505,1206,3.088,1207,3.088]],["title/classes/UserAlreadyExistsException.html",[16,0.099,303,2.735]],["body/classes/UserAlreadyExistsException.html",[3,0.212,4,0.212,5,0.188,8,1.814,10,0.262,11,0.016,12,0.478,15,0.212,16,0.133,17,0.013,18,0.013,30,1.354,33,0.478,35,0.736,36,0.539,37,0.393,38,0.736,66,1.083,67,3.361,70,1.299,96,1.814,114,2.387,199,1.354,303,4.527,305,4.743,355,3.042,358,3.509,359,3.167,360,3.167,361,2.512,363,2.273,549,4.013,802,4.013,803,4.472,805,4.013,1185,4.013,1208,4.951,1209,5.518,1210,5.17,1211,5.17]],["title/controllers/UserController.html",[178,1.352,1212,2.735]],["body/controllers/UserController.html",[1,1.65,3,0.147,4,0.147,5,0.13,10,0.308,11,0.016,12,0.331,15,0.147,16,0.092,17,0.01,18,0.01,24,0.461,25,1.11,33,0.534,35,0.822,36,0.601,37,0.475,38,0.822,40,1.228,44,2.097,66,0.559,69,1.341,74,1.736,75,1.059,89,1.309,164,0.76,178,1.254,180,1.254,182,1.936,191,2.209,194,3.468,196,4.094,199,1.722,207,2.708,208,2.054,209,1.936,210,1.736,211,2.536,212,1.936,213,1.936,221,2.561,223,1.936,224,1.736,225,1.936,226,1.936,232,3.063,236,1.936,274,2.955,296,1.83,307,2.347,315,2.497,322,2.536,338,3.091,573,3.091,574,3.091,576,3.091,702,2.885,707,2.054,708,2.347,755,3.533,759,2.347,760,3.201,761,3.035,762,3.035,763,3.035,768,2.189,769,2.536,770,2.189,771,2.536,772,2.536,1212,3.549,1213,2.773,1214,5.769,1215,5.769,1216,4.99,1217,3.574,1218,3.574,1219,3.574,1220,3.574,1221,5.405,1222,5.001,1223,3.574,1224,5.001,1225,3.091,1226,3.574,1227,3.574,1228,3.574,1229,3.574,1230,3.574,1231,3.574,1232,3.574,1233,3.574,1234,3.574]],["title/classes/UserDoesNotExistException.html",[16,0.099,1235,2.735]],["body/classes/UserDoesNotExistException.html",[3,0.206,4,0.206,5,0.183,8,1.782,10,0.28,11,0.016,12,0.465,15,0.206,16,0.129,17,0.013,18,0.013,30,1.315,33,0.465,35,0.715,36,0.523,37,0.382,38,0.715,63,3.473,64,2.72,67,3.473,70,1.262,96,1.762,114,2.319,199,1.788,355,3.003,358,3.473,360,3.076,361,2.44,363,2.208,472,3.898,538,3.898,549,3.898,1185,3.898,1208,4.862,1209,5.42,1235,4.446,1236,4.345,1237,5.023,1238,5.023,1239,5.023,1240,5.023,1241,5.023,1242,5.023,1243,5.023,1244,5.023]],["title/modules/UserModule.html",[137,1.242,155,2.087]],["body/modules/UserModule.html",[3,0.199,4,0.199,5,0.176,10,0.305,11,0.016,12,0.447,15,0.199,16,0.124,17,0.012,18,0.012,137,2.162,139,2.126,140,2.126,141,2.348,142,2.348,143,2.126,144,3.26,145,3.26,155,4.174,156,2.971,157,2.348,158,2.348,160,2.476,161,2.618,162,1.771,180,2.146,199,1.266,254,3.806,264,3.174,274,4.022,296,2.476,307,3.174,1212,4.762,1245,4.182,1246,4.182,1247,4.182,1248,4.834,1249,4.834,1250,4.834]],["title/injectables/UserService.html",[0,0.691,274,1.974]],["body/injectables/UserService.html",[0,0.738,2,0.961,3,0.112,4,0.112,5,0.1,10,0.272,11,0.016,12,0.253,15,0.112,16,0.07,17,0.008,18,0.008,24,0.353,25,0.914,28,1.92,30,1.079,33,0.628,35,0.967,36,0.707,37,0.516,38,0.967,40,1.412,44,2.312,47,1.943,63,1.33,64,1.483,66,1.177,67,2.002,69,1.353,70,0.688,75,1.221,84,0.92,89,2.02,91,2.078,93,2.546,94,1.984,101,1.483,111,2.538,117,1.812,123,1.483,162,1.003,164,0.583,187,3.198,199,1.627,235,3.565,254,2.824,264,1.798,274,2.111,276,3.254,281,2.341,294,2.703,296,1.403,297,1.33,298,1.574,299,1.574,304,2.369,309,2.369,315,1.51,340,1.574,447,1.33,493,1.264,584,1.833,617,1.812,620,2.111,623,2.111,651,3.168,660,1.574,678,1.677,702,2.976,755,3.035,759,1.798,760,3.028,761,2.678,762,2.678,763,2.678,853,3.198,1216,3.565,1225,4.286,1235,2.925,1251,2.369,1252,4.121,1253,4.121,1254,4.121,1255,2.738,1256,2.738,1257,4.121,1258,2.738,1259,2.738,1260,4.121,1261,2.738,1262,4.121,1263,2.738,1264,4.121,1265,2.738,1266,4.121,1267,2.738,1268,4.121,1269,2.738,1270,2.738,1271,2.738,1272,2.738,1273,2.738,1274,2.738,1275,2.738,1276,2.738,1277,2.738,1278,2.738,1279,2.738,1280,2.738,1281,5.513,1282,4.121,1283,2.738,1284,2.738,1285,4.121,1286,2.738,1287,2.738,1288,2.738,1289,2.738,1290,2.738,1291,2.738,1292,2.738]],["title/classes/ValidUUIDPipe.html",[16,0.099,629,1.974]],["body/classes/ValidUUIDPipe.html",[3,0.207,4,0.207,5,0.183,10,0.258,11,0.016,12,0.466,15,0.207,16,0.129,17,0.013,18,0.013,24,0.65,25,1.393,33,0.466,35,0.717,36,0.525,37,0.383,38,0.717,40,1.072,66,1.07,69,1.027,89,1.845,93,2.898,94,2.513,96,1.766,99,3.844,383,3.908,447,3.321,511,4.356,551,3.574,553,3.084,629,3.214,1293,5.428,1294,4.356,1295,6.837,1296,6.275,1297,6.275,1298,5.036,1299,5.036,1300,5.036,1301,6.275,1302,7.363,1303,5.036,1304,6.837,1305,5.036,1306,5.036]],["title/coverage.html",[1307,4.557]],["body/coverage.html",[0,1.315,1,1.219,5,0.096,6,2.284,7,3.112,11,0.016,16,0.188,17,0.008,18,0.008,19,1.734,20,2.05,21,2.846,32,1.43,37,0.201,49,1.734,59,1.874,61,2.304,94,1.058,95,2.05,97,2.284,98,2.284,105,1.283,143,1.161,178,2.301,179,1.874,181,2.05,199,1.05,214,1.874,216,1.618,219,1.618,224,1.283,254,1.353,255,1.734,261,1.618,270,2.05,274,1.353,297,1.283,300,1.734,303,1.874,305,2.633,353,2.284,354,2.284,355,1.161,368,1.283,369,2.05,370,2.114,371,2.05,385,2.05,395,4.114,396,2.284,405,1.874,420,2.284,426,3.112,435,4.193,507,1.874,533,1.874,534,2.284,535,1.469,536,2.284,543,2.284,544,2.284,551,1.874,552,2.284,553,1.618,554,2.284,562,2.05,563,2.284,564,2.284,579,1.43,581,2.284,582,2.284,590,1.353,592,1.353,607,1.353,612,1.874,613,2.284,614,2.284,629,1.353,632,1.518,648,2.284,649,2.284,661,1.43,663,1.518,681,2.284,682,2.284,693,1.874,694,2.284,707,1.518,719,2.284,727,1.43,729,1.518,744,1.518,752,1.874,753,2.284,768,1.618,770,1.618,773,1.618,785,3.183,786,2.05,800,1.874,801,2.284,802,3.112,809,1.874,810,3.44,811,2.284,817,1.518,837,3.44,838,2.284,871,2.284,883,1.874,884,2.284,890,1.518,907,2.284,952,2.284,969,1.874,970,2.284,977,1.618,992,2.284,1007,2.284,1046,2.05,1047,2.284,1048,2.284,1059,1.874,1102,2.284,1104,2.05,1109,2.05,1110,2.284,1111,2.284,1120,2.05,1121,2.284,1122,2.284,1134,2.284,1135,2.284,1149,2.05,1150,2.05,1180,2.284,1186,2.284,1208,3.112,1212,1.874,1213,2.05,1235,1.874,1236,2.284,1251,2.284,1293,2.284,1294,2.284,1307,2.284,1308,2.641,1309,2.641,1310,2.641,1311,5.82,1312,6.963,1313,2.641,1314,3.468,1315,6.963,1316,7.583,1317,2.284,1318,3.112,1319,2.284,1320,2.284,1321,2.284,1322,2.641,1323,2.641,1324,3.468,1325,3.468,1326,2.284,1327,3.468,1328,2.284,1329,7.143,1330,2.641,1331,2.284,1332,4.01,1333,2.641,1334,2.641,1335,4.847,1336,2.641,1337,2.284,1338,3.468,1339,2.284,1340,2.284,1341,2.284,1342,2.641]],["title/dependencies.html",[140,2.039,1343,2.494]],["body/dependencies.html",[11,0.016,12,0.489,14,3.236,17,0.013,18,0.013,23,4.1,51,3.469,54,5.017,62,3.75,115,4.57,140,2.323,162,1.936,164,1.376,210,2.567,259,4.1,276,3.469,424,4.57,506,4.57,1344,6.985,1345,5.283,1346,5.283,1347,5.283,1348,5.283,1349,5.283,1350,5.283,1351,5.283,1352,5.283,1353,5.283,1354,5.283,1355,5.283,1356,5.283,1357,5.283,1358,5.283,1359,5.283,1360,5.283,1361,5.283,1362,5.283,1363,5.283,1364,5.283,1365,5.283]],["title/miscellaneous/enumerations.html",[1366,1.741,1367,4.011]],["body/miscellaneous/enumerations.html",[11,0.015,17,0.014,18,0.014,24,0.768,447,3.371,785,3.907,786,5.386,791,6.003,797,5.386,798,5.386,1366,3.223,1367,5.147,1368,5.95]],["title/miscellaneous/functions.html",[1366,1.741,1369,4.011]],["body/miscellaneous/functions.html",[11,0.016,17,0.012,18,0.012,24,0.615,33,0.441,35,0.949,36,0.694,37,0.533,38,0.949,40,1.289,84,1.601,143,2.664,164,1.013,194,2.314,224,2.943,281,2.147,370,1.534,382,4.12,388,4.3,390,5.443,443,4.12,446,4.12,447,2.314,448,4.12,456,4.12,493,3.077,553,3.711,557,4.12,590,3.104,602,2.44,607,3.104,691,4.12,1068,4.12,1320,4.12,1321,5.241,1331,4.12,1340,4.12,1341,5.241,1343,3.696,1366,2.58,1369,4.12,1370,4.763,1371,4.763,1372,4.763,1373,4.763,1374,4.763,1375,4.763,1376,6.059,1377,6.664,1378,4.763,1379,4.763,1380,4.763,1381,4.763,1382,4.763,1383,4.763,1384,4.763,1385,4.763,1386,4.763,1387,6.059,1388,6.059,1389,6.059]],["title/index.html",[24,0.497,1390,3.334]],["body/index.html",[2,1.2,11,0.016,17,0.01,18,0.01,19,3.7,32,3.051,96,1.2,105,2.977,137,1.102,138,5.473,139,1.505,140,1.505,141,1.662,142,1.662,143,1.505,144,1.662,145,1.662,146,2.96,147,2.96,148,5.101,149,4.593,150,4.538,151,4.185,152,4.46,153,4.782,154,4.413,155,3.989,156,2.356,157,1.662,158,1.662,180,1.2,216,4.233,219,3.451,250,2.96,252,2.96,253,2.96,254,3.14,255,3.7,274,3.54,580,1.853,632,3.971,640,2.96,641,2.96,642,2.96,742,2.656,773,4.233,817,3.971,828,2.96,830,2.96,831,2.96,890,3.971,900,2.96,901,2.96,903,2.96,945,2.96,946,2.96,947,2.96,977,4.233,986,2.96,987,2.96,988,2.96,1245,2.96,1246,2.96,1247,2.96,1390,2.96,1391,3.422,1392,3.422,1393,4.85]],["title/modules.html",[139,2.317]],["body/modules.html",[11,0.013,17,0.013,18,0.013,138,3.877,139,2.402,148,3.587,149,3.346,150,3.587,151,3.139,152,3.346,153,3.587,154,3.587,155,2.959,1394,7.867,1395,7.867,1396,7.867,1397,7.867]],["title/properties.html",[427,1.857,1343,2.494]],["body/properties.html",[11,0.016,17,0.014,18,0.014,363,2.666,427,2.428,1398,6.062,1399,6.062,1400,6.062,1401,6.062,1402,6.062]],["title/miscellaneous/typealiases.html",[1366,1.741,1403,4.637]],["body/miscellaneous/typealiases.html",[11,0.013,17,0.012,18,0.012,20,3.752,21,5.005,24,0.624,37,0.594,45,5.473,56,3.746,63,2.971,66,0.757,70,1.215,181,3.752,189,5.291,204,4.747,217,4.341,221,3.133,270,3.752,291,4.747,308,5.291,369,3.752,370,1.971,371,4.747,381,3.313,385,3.752,390,4.747,1104,3.752,1149,3.752,1150,4.747,1213,3.752,1221,5.291,1318,3.752,1366,2.618,1404,4.834,1405,4.834,1406,4.834,1407,6.117,1408,4.182,1409,4.182,1410,4.182,1411,4.834,1412,4.834,1413,6.71,1414,4.834,1415,4.834,1416,4.834,1417,4.834,1418,7.764,1419,4.834,1420,4.834,1421,4.834,1422,4.834]],["title/miscellaneous/variables.html",[1366,1.741,1423,4.011]],["body/miscellaneous/variables.html",[11,0.016,17,0.008,18,0.008,24,0.323,37,0.357,43,3.225,47,1.777,59,2.732,61,3.026,66,1.161,69,1.402,84,1.576,89,2.816,199,1.008,368,2.915,370,2.078,383,4.657,395,2.403,405,2.732,426,1.943,427,1.003,447,3.468,476,4.554,493,3.173,507,2.732,508,1.943,567,4.554,578,2.166,702,1.156,707,2.696,761,1.216,762,2.761,763,1.216,768,3.828,770,3.225,1059,4.435,1061,1.943,1064,1.943,1314,2.166,1317,3.33,1318,1.943,1319,3.33,1324,2.166,1325,4.057,1326,3.33,1327,2.166,1328,3.33,1337,2.166,1338,4.554,1339,2.166,1366,1.356,1408,3.33,1409,2.166,1410,2.166,1423,2.166,1424,3.85,1425,3.85,1426,2.504,1427,3.85,1428,3.85,1429,2.504,1430,5.265,1431,5.265,1432,2.504,1433,6.974,1434,5.683,1435,2.504,1436,2.504,1437,2.504,1438,2.504,1439,2.504,1440,4.69,1441,2.504,1442,2.504,1443,4.69,1444,2.504,1445,2.504,1446,2.504,1447,2.504,1448,2.504,1449,2.504,1450,2.504,1451,4.69,1452,2.504,1453,2.504,1454,2.504,1455,2.504,1456,2.504,1457,2.504,1458,4.69,1459,2.504,1460,2.504,1461,2.504,1462,3.85,1463,2.504,1464,2.504,1465,2.504,1466,3.85,1467,2.504,1468,2.504,1469,2.504,1470,2.504,1471,3.85,1472,4.69,1473,4.69,1474,2.504,1475,2.504,1476,3.85,1477,2.504,1478,2.504,1479,2.504,1480,3.85,1481,2.504,1482,3.85,1483,3.85,1484,2.504,1485,2.504,1486,2.504,1487,2.504,1488,2.504,1489,2.504,1490,2.504,1491,2.504,1492,2.504,1493,2.504,1494,2.504,1495,2.504,1496,2.504,1497,2.504,1498,2.504,1499,2.504]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":395,"title":{},"body":{"classes/BaseException.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.2.1",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":463,"title":{},"body":{"injectables/DateService.html":{}}}],["1",{"_index":241,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BadRequestException.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/UnauthorizedException.html":{}}}],["1.0.0",{"_index":1399,"title":{},"body":{"properties.html":{}}}],["1.4.6",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["10.0.1",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":497,"title":{},"body":{"injectables/DateService.html":{}}}],["15:37:28",{"_index":464,"title":{},"body":{"injectables/DateService.html":{}}}],["16",{"_index":1393,"title":{},"body":{"index.html":{}}}],["16.3.1",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":546,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["2.18.1",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":462,"title":{},"body":{"injectables/DateService.html":{}}}],["24",{"_index":495,"title":{},"body":{"injectables/DateService.html":{}}}],["3",{"_index":684,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["3.4.4",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":453,"title":{},"body":{"injectables/DateService.html":{}}}],["30m",{"_index":469,"title":{},"body":{"injectables/DateService.html":{}}}],["4",{"_index":1210,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["4.0.1",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1238,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["5/6",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":804,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["60",{"_index":496,"title":{},"body":{"injectables/DateService.html":{}}}],["7",{"_index":742,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"index.html":{}}}],["7.8.1",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1392,"title":{},"body":{"index.html":{}}}],["83",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1391,"title":{},"body":{"index.html":{}}}],["9]){12",{"_index":1305,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["9]){4",{"_index":1304,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["9]){8",{"_index":1303,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["_",{"_index":571,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["academic_title",{"_index":1071,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["academictitle",{"_index":1187,"title":{},"body":{"entities/User.html":{}}}],["access",{"_index":450,"title":{},"body":{"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["access_token",{"_index":1061,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["access_token_cookie",{"_index":59,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/CookieService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token_expiration_date",{"_index":1063,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{}}}],["accesstoken",{"_index":86,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenexpiration",{"_index":465,"title":{},"body":{"injectables/DateService.html":{}}}],["accesstokenexpirationdate",{"_index":1136,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":19,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"index.html":{}}}],["accesstokenstrategy.fromcookie",{"_index":79,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["accesstokenstrategy.fromcookie()(request",{"_index":87,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["action",{"_index":1091,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["actually",{"_index":688,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["add",{"_index":808,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["additional",{"_index":1384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":549,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["affected",{"_index":663,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["ahead",{"_index":455,"title":{},"body":{"injectables/DateService.html":{}}}],["aliases",{"_index":1404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":95,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allowed.exception",{"_index":1020,"title":{},"body":{"injectables/ProjectService.html":{}}}],["allowed.exception.ts",{"_index":536,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"coverage.html":{}}}],["allowed.exception.ts:5",{"_index":537,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["allows",{"_index":1383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["already",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["alter",{"_index":1085,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["api.interceptor.ts",{"_index":564,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["api.interceptor.ts:7",{"_index":570,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["appmodule",{"_index":138,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":438,"title":{},"body":{"injectables/DateService.html":{}}}],["argumentshost",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.isarray(request.query.fields[table",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(request.query.include",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(filters[field",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(where",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations[include",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets[table",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets(sparsefieldsets",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["attribute",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["auth",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authenticationcontroller",{"_index":179,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":148,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationpayload",{"_index":189,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":216,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"index.html":{}}}],["authguard",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["author",{"_index":1402,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":481,"title":{},"body":{"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["await",{"_index":91,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["bad",{"_index":362,"title":{},"body":{"classes/BadRequestException.html":{}}}],["badrequestexception",{"_index":297,"title":{"classes/BadRequestException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["badrequestexception(error",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["badrequestexception(exception",{"_index":678,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["badrequestexception(null",{"_index":943,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["base.exception",{"_index":359,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{}}}],["baseentity",{"_index":372,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/TokenWhitelist.html":{}}}],["baseentitywithextras",{"_index":368,"title":{"classes/BaseEntityWithExtras.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseexception",{"_index":355,"title":{"classes/BaseException.html":{}},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["beforeinsert",{"_index":601,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["begin",{"_index":1128,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["behind",{"_index":485,"title":{},"body":{"injectables/DateService.html":{}}}],["being",{"_index":1379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["body",{"_index":207,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":486,"title":{},"body":{"injectables/DateService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectReportController.html":{}}}],["bootstrap",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bootstrap(port",{"_index":1373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browse",{"_index":1397,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1394,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":569,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["cascade",{"_index":596,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{}}}],["catch",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cause",{"_index":358,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["caused",{"_index":687,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["change",{"_index":1116,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["check",{"_index":483,"title":{},"body":{"injectables/DateService.html":{}}}],["checks",{"_index":480,"title":{},"body":{"injectables/DateService.html":{}}}],["class",{"_index":16,"title":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"classes/ValidUUIDPipe.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["classes",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"classes/ValidUUIDPipe.html":{},"index.html":{}}}],["clear",{"_index":397,"title":{},"body":{"injectables/CookieService.html":{}}}],["clear(response",{"_index":401,"title":{},"body":{"injectables/CookieService.html":{}}}],["cluster_appmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationmodule",{"_index":250,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_exports",{"_index":252,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_imports",{"_index":251,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":253,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule",{"_index":640,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule_exports",{"_index":641,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule_providers",{"_index":642,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_profilemodule",{"_index":715,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":716,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_projectmembermodule",{"_index":828,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmembermodule_exports",{"_index":830,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmembermodule_imports",{"_index":829,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["cluster_projectmembermodule_providers",{"_index":831,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule",{"_index":900,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule_exports",{"_index":901,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule_imports",{"_index":902,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["cluster_projectmilestonemodule_providers",{"_index":903,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmodule",{"_index":945,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectmodule_exports",{"_index":947,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectmodule_imports",{"_index":948,"title":{},"body":{"modules/ProjectModule.html":{}}}],["cluster_projectmodule_providers",{"_index":946,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectreportmodule",{"_index":986,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_projectreportmodule_exports",{"_index":988,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_projectreportmodule_providers",{"_index":987,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_usermodule",{"_index":1245,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_exports",{"_index":1247,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":1246,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["coalesce(u.first_name",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["coalesce(u.last_name",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["code",{"_index":392,"title":{},"body":{"classes/BaseException.html":{},"injectables/DateService.html":{}}}],["column",{"_index":602,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["column({name",{"_index":587,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":748,"title":{},"body":{"entities/Project.html":{}}}],["column({type",{"_index":792,"title":{},"body":{"entities/ProjectMember.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["columnoptions",{"_index":1376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.includes(field",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common/base",{"_index":604,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["conditions",{"_index":1021,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push",{"_index":1024,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push(where",{"_index":1025,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":89,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1086,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["constructor(cause",{"_index":356,"title":{},"body":{"classes/BadRequestException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{}}}],["constructor(date",{"_index":399,"title":{},"body":{"injectables/CookieService.html":{}}}],["constructor(email",{"_index":1209,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["constructor(httpadapterhost",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(milestoneestimaterepository",{"_index":650,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["constructor(private",{"_index":74,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"injectables/CookieService.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(projectmemberrepository",{"_index":840,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["constructor(projectmilestonerepository",{"_index":909,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["constructor(projectreportrepository",{"_index":993,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["constructor(projectrepository",{"_index":1008,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(status",{"_index":386,"title":{},"body":{"classes/BaseException.html":{}}}],["constructor(tokenwhitelistrepository",{"_index":1154,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["constructor(tokenwhitelistservice",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(userrepository",{"_index":1255,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["contains",{"_index":500,"title":{},"body":{"injectables/DateService.html":{}}}],["context",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["continue",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributor",{"_index":797,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":178,"title":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":228,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('milestone/estimates",{"_index":635,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["controller('profile",{"_index":710,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('project/members",{"_index":820,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["controller('project/milestones",{"_index":892,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["controller('project/reports",{"_index":979,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["controller('projects",{"_index":775,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controller('users",{"_index":1226,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{}}}],["controllers/authentication.controller",{"_index":260,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["controllers/milestone",{"_index":645,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["controllers/profile.controller",{"_index":718,"title":{},"body":{"modules/ProfileModule.html":{}}}],["controllers/project",{"_index":834,"title":{},"body":{"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectReportModule.html":{}}}],["controllers/project.controller",{"_index":950,"title":{},"body":{"modules/ProjectModule.html":{}}}],["controllers/user.controller",{"_index":1249,"title":{},"body":{"modules/UserModule.html":{}}}],["cookie",{"_index":62,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["cookie.ts",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookies",{"_index":229,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["cookieservice",{"_index":219,"title":{"injectables/CookieService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/CookieService.html":{},"coverage.html":{},"index.html":{}}}],["coverage",{"_index":1307,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":616,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["create(memberpartial",{"_index":844,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["create(partialreport",{"_index":996,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["create(partialresource",{"_index":654,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["create(payload",{"_index":618,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["create(project",{"_index":1012,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createall",{"_index":839,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["createall(memberpartials",{"_index":847,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["createall(milestonepartials",{"_index":913,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createdproject",{"_index":1030,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.id",{"_index":1035,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.members",{"_index":1040,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.milestones",{"_index":1036,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createone",{"_index":908,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createone(payload",{"_index":916,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createparamdecorator(filtersfactory",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(includesfactory",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(sparsefieldsetsfactory",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(userfactory",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('u",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":548,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["credentials.exception",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["credentials.exception.ts",{"_index":544,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["credentials.exception.ts:5",{"_index":545,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["criteria",{"_index":1244,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["crypto",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.sha256(source).tostring(crypto.enc.hex",{"_index":425,"title":{},"body":{"injectables/CryptoService.html":{}}}],["cryptoservice",{"_index":254,"title":{"injectables/CryptoService.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ctx",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curdate",{"_index":1117,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["current",{"_index":445,"title":{},"body":{"injectables/DateService.html":{}}}],["current_date",{"_index":599,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["d",{"_index":494,"title":{},"body":{"injectables/DateService.html":{}}}],["data",{"_index":578,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":690,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["datasource",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CookieService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["date.getcurrenttimestampwithoffset('30m",{"_index":466,"title":{},"body":{"injectables/DateService.html":{}}}],["date.getexpirationdatewithoffset('30m",{"_index":477,"title":{},"body":{"injectables/DateService.html":{}}}],["dateservice",{"_index":105,"title":{"injectables/DateService.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AuthenticationModule.html":{},"injectables/CookieService.html":{},"injectables/DateService.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["datetime",{"_index":505,"title":{},"body":{"injectables/DateService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{}}}],["datetime.fromformat",{"_index":529,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromformat(date",{"_index":527,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(date).setzone(time_zone).toformat('yyyy",{"_index":532,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(jsdate",{"_index":522,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(timestamp",{"_index":526,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.local",{"_index":515,"title":{},"body":{"injectables/DateService.html":{}}}],["day",{"_index":502,"title":{},"body":{"injectables/DateService.html":{}}}],["dd",{"_index":460,"title":{},"body":{"injectables/DateService.html":{}}}],["de",{"_index":525,"title":{},"body":{"injectables/DateService.html":{}}}],["declarations",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorator",{"_index":1377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":191,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/filters.decorator",{"_index":708,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/includes.decorator",{"_index":769,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/primary",{"_index":606,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["decorators/sparse",{"_index":771,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/user.decorator",{"_index":211,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/UserController.html":{}}}],["deeppartial",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["default",{"_index":493,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":621,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{}}}],["delete(id",{"_index":620,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["delete(userid",{"_index":1157,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["deleted",{"_index":540,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["deleteone",{"_index":1215,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteone(user",{"_index":1217,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprojectnotallowedexception",{"_index":533,"title":{"classes/DeleteProjectNotAllowedException.html":{}},"body":{"classes/DeleteProjectNotAllowedException.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["deleteprojectnotallowedexception(null",{"_index":1044,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteresult",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{}}}],["deleteresult.affected",{"_index":680,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["deliverables",{"_index":953,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["denied",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dependencies",{"_index":140,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":363,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"properties.html":{}}}],["documentation",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1050,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["down(queryrunner",{"_index":1053,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["drop",{"_index":1100,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["eg",{"_index":468,"title":{},"body":{"injectables/DateService.html":{}}}],["email",{"_index":67,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["engine=innodb",{"_index":1070,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["entities",{"_index":580,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"index.html":{}}}],["entities/milestone",{"_index":627,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["entities/project",{"_index":609,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"entities/User.html":{}}}],["entities/token",{"_index":262,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{}}}],["entities/user",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"entities/TokenWhitelist.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":370,"title":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity('milestone_estimate",{"_index":610,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["entity('project",{"_index":751,"title":{},"body":{"entities/Project.html":{}}}],["entity('project_member",{"_index":799,"title":{},"body":{"entities/ProjectMember.html":{}}}],["entity('project_milestone",{"_index":882,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["entity('project_report",{"_index":968,"title":{},"body":{"entities/ProjectReport.html":{}}}],["entity('token_whitelist",{"_index":1148,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["entity('user",{"_index":1207,"title":{},"body":{"entities/User.html":{}}}],["entity.getcolumns",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getproperties",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelations",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[field",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[include",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.name.tolowercase",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entry",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":793,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["enumerations",{"_index":1367,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":55,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.access_token_expiration",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.jwt_access_secret",{"_index":82,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["env.jwt_refresh_secret",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["env.refresh_token_expiration",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["environment",{"_index":56,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{}}}],["errorhandler",{"_index":1388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["estimate",{"_index":628,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimate.controller",{"_index":646,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["estimate.controller.ts",{"_index":614,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["estimate.controller.ts:19",{"_index":619,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.controller.ts:27",{"_index":625,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.controller.ts:41",{"_index":622,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.id",{"_index":936,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["estimate.milestone",{"_index":874,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["estimate.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{}}}],["estimate.module.ts",{"_index":644,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["estimate.service",{"_index":634,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimate.service.ts",{"_index":649,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["estimate.service.ts:12",{"_index":652,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:19",{"_index":655,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:40",{"_index":659,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:55",{"_index":657,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.ts",{"_index":582,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["estimate.ts:24",{"_index":591,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:27",{"_index":600,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:30",{"_index":589,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:33",{"_index":597,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimates",{"_index":872,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimation_date",{"_index":588,"title":{},"body":{"entities/MilestoneEstimate.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["estimationdate",{"_index":583,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["europe/berlin",{"_index":508,"title":{},"body":{"injectables/DateService.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":1132,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["event_scheduler",{"_index":1131,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["example",{"_index":448,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["exception",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["exception.getstatus",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:13",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:7",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/bad",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["exceptions/base.exception",{"_index":538,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/UserDoesNotExistException.html":{}}}],["exceptions/delete",{"_index":1019,"title":{},"body":{"injectables/ProjectService.html":{}}}],["exceptions/incorrect",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["exceptions/invalid",{"_index":1299,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["exceptions/no",{"_index":662,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["exceptions/project",{"_index":854,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["exceptions/user",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":567,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1239,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["exist.exception",{"_index":1271,"title":{},"body":{"injectables/UserService.html":{}}}],["exist.exception.ts",{"_index":1236,"title":{},"body":{"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["exist.exception.ts:6",{"_index":1237,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["existingmember",{"_index":861,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["existingrelations",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existingrelations.includes(include",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":805,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UserAlreadyExistsException.html":{}}}],["exists.exception",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMemberService.html":{}}}],["exists.exception.ts",{"_index":802,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:5",{"_index":803,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{}}}],["expected",{"_index":561,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["expiration",{"_index":449,"title":{},"body":{"injectables/DateService.html":{}}}],["expired",{"_index":482,"title":{},"body":{"injectables/DateService.html":{}}}],["expires",{"_index":413,"title":{},"body":{"injectables/CookieService.html":{}}}],["expiresin",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":15,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["exports",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["express",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["express.user",{"_index":196,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/UserController.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"entities/MilestoneEstimate.html":{},"classes/NoAffectedRowException.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["extension",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":80,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(request",{"_index":88,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":78,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extras",{"_index":605,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["extras.ts",{"_index":371,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extras.ts:12",{"_index":379,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:16",{"_index":377,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:20",{"_index":378,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:8",{"_index":380,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["f0",{"_index":1302,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["false",{"_index":239,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"controllers/ProfileController.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["field",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.split",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.length",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...(request.query.fields[table",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...entry.split",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.slice(1",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields[0",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets.decorator",{"_index":772,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["fieldsets.decorator.ts",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldsets[field",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table][field",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["filter",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters",{"_index":707,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters(project",{"_index":776,"title":{},"body":{"controllers/ProjectController.html":{}}}],["filters(projectmilestone",{"_index":893,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["filters(projectreport",{"_index":980,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["filters(user",{"_index":1227,"title":{},"body":{"controllers/UserController.html":{}}}],["filters(userentity",{"_index":712,"title":{},"body":{"controllers/ProfileController.html":{}}}],["filters[field",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtersfactory",{"_index":1317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":755,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(userid",{"_index":1015,"title":{},"body":{"injectables/ProjectService.html":{}}}],["findall(where",{"_index":759,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1252,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1260,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":1253,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":1262,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials",{"_index":1254,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials(id",{"_index":1264,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuser",{"_index":1151,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findbyuser(userid",{"_index":1159,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findone",{"_index":756,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["findone(id",{"_index":765,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["findoptionsrelations",{"_index":763,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionsselect",{"_index":761,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionswhere",{"_index":702,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":1074,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["firstname",{"_index":1188,"title":{},"body":{"entities/User.html":{}}}],["fk_2d04de5563e11736efb61e44285",{"_index":1098,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_7115f82a61e31ac95b2681d83e4",{"_index":1093,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_7e787585ded942fc095b659b594",{"_index":1095,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_9884b2ee80eb70b7db4f12e8aed",{"_index":1096,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_e7520163dafa7c1104fd672caad",{"_index":1092,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_f7accb0136106f3050f8e96c5e8",{"_index":1097,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_fbe0e932e64303e1f63e3e16f5e",{"_index":1087,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["following",{"_index":456,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["follows",{"_index":451,"title":{},"body":{"injectables/DateService.html":{}}}],["forbiddenexception",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forbiddenexception('access",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["foreign",{"_index":1088,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["format",{"_index":457,"title":{},"body":{"injectables/DateService.html":{}}}],["format.exception",{"_index":1300,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["format.exception.ts",{"_index":554,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"coverage.html":{}}}],["format.exception.ts:4",{"_index":555,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["found",{"_index":1242,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["fromcookie",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["function",{"_index":435,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["functions",{"_index":1369,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":607,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatetokens",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generatetokens(userid",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get(':id",{"_index":703,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectReportController.html":{}}}],["getcolumns",{"_index":373,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getcurrenttimestampwithoffset",{"_index":429,"title":{},"body":{"injectables/DateService.html":{}}}],["getcurrenttimestampwithoffset(offsetwithunit",{"_index":433,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset",{"_index":430,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset(offsetwithunit",{"_index":473,"title":{},"body":{"injectables/DateService.html":{}}}],["getmany",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofile",{"_index":696,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(user",{"_index":699,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid",{"_index":697,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(id",{"_index":701,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getproperties",{"_index":374,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["getrelations",{"_index":375,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getrelationtypes",{"_index":376,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["given",{"_index":472,"title":{},"body":{"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["given.diff(now).toobject().milliseconds",{"_index":531,"title":{},"body":{"injectables/DateService.html":{}}}],["global",{"_index":1130,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["goes",{"_index":1241,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["guards/access",{"_index":212,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["guards/refresh",{"_index":215,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["hadestimates",{"_index":931,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["hash",{"_index":421,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hash(source",{"_index":422,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hashedaccesstoken",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["hashedrefreshedtoken",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hashedrefreshtoken",{"_index":1179,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["hazards",{"_index":954,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["hh:mm:ss",{"_index":461,"title":{},"body":{"injectables/DateService.html":{}}}],["host",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hsel",{"_index":393,"title":{},"body":{"classes/BaseException.html":{}}}],["hsel_mta",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(context.getrequest",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(context.getresponse",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["httponly",{"_index":409,"title":{},"body":{"injectables/CookieService.html":{}}}],["httpstatus",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["httpstatus.internal_server_error",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":584,"title":{},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JsonApiInterceptor.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/ValidUUIDPipe.html":{}}}],["import",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include.split",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes",{"_index":768,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["includes(project",{"_index":778,"title":{},"body":{"controllers/ProjectController.html":{}}}],["includes(projectmilestone",{"_index":895,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["includes(projectreport",{"_index":982,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["includes(user",{"_index":1229,"title":{},"body":{"controllers/UserController.html":{}}}],["includes.length",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...(request.query.include",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...entry.split",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.slice(1",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes[0",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includesfactory",{"_index":1319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":547,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["incorrectcredentialsexception",{"_index":300,"title":{"classes/IncorrectCredentialsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["incorrectcredentialsexception(null",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["increment",{"_index":444,"title":{},"body":{"injectables/DateService.html":{}}}],["incremented",{"_index":471,"title":{},"body":{"injectables/DateService.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["information",{"_index":692,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["initiated",{"_index":1380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":660,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["injectrepository(milestoneestimate",{"_index":665,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["injectrepository(project",{"_index":856,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["injectrepository(projectmember",{"_index":855,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["injectrepository(projectmilestone",{"_index":922,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["injectrepository(projectreport",{"_index":1001,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["injectrepository(tokenwhitelist",{"_index":1167,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["injectrepository(user",{"_index":1272,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":490,"title":{},"body":{"injectables/DateService.html":{}}}],["insertresult",{"_index":666,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["insertresult.identifiers[0].id",{"_index":672,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["instanceof",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1073,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["intercept",{"_index":565,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["intercept(_",{"_index":566,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["invaliduuidformatexception",{"_index":551,"title":{"classes/InvalidUUIDFormatException.html":{}},"body":{"classes/InvalidUUIDFormatException.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["invaliduuidformatexception(null",{"_index":1301,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["isaftercurrenttimestamp",{"_index":431,"title":{},"body":{"injectables/DateService.html":{}}}],["isaftercurrenttimestamp(timestamp",{"_index":478,"title":{},"body":{"injectables/DateService.html":{}}}],["isc",{"_index":1401,"title":{},"body":{"properties.html":{}}}],["it's",{"_index":484,"title":{},"body":{"injectables/DateService.html":{}}}],["javascript",{"_index":475,"title":{},"body":{"injectables/DateService.html":{}}}],["joincolumn",{"_index":1146,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["joincolumn()@onetoone(undefined",{"_index":1143,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["js",{"_index":424,"title":{},"body":{"injectables/CryptoService.html":{},"dependencies.html":{}}}],["jsdate",{"_index":520,"title":{},"body":{"injectables/DateService.html":{}}}],["jsonapiincludes",{"_index":1407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jsonapiinterceptor",{"_index":562,"title":{"injectables/JsonApiInterceptor.html":{}},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["jwt",{"_index":23,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":77,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtfromrequestfunction",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":258,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.register",{"_index":268,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtpayload",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":1069,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["last_name",{"_index":1075,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["lastname",{"_index":1189,"title":{},"body":{"entities/User.html":{}}}],["lax",{"_index":412,"title":{},"body":{"injectables/CookieService.html":{}}}],["legend",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["level",{"_index":1378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":1400,"title":{},"body":{"properties.html":{}}}],["line",{"_index":452,"title":{},"body":{"injectables/DateService.html":{}}}],["literal",{"_index":1418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["locale",{"_index":524,"title":{},"body":{"injectables/DateService.html":{}}}],["login",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["login(email",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(payload",{"_index":188,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["logout(user",{"_index":195,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout(userid",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logoutresult",{"_index":222,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["lower(concat(coalesce(u.academic_title",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["luxon",{"_index":506,"title":{},"body":{"injectables/DateService.html":{},"dependencies.html":{}}}],["m",{"_index":498,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{}}}],["m.estimates",{"_index":594,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["malformed",{"_index":558,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["manytoone",{"_index":603,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["manytoone(undefined",{"_index":593,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["map",{"_index":573,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["map((data",{"_index":577,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["map((users",{"_index":1232,"title":{},"body":{"controllers/UserController.html":{}}}],["matching",{"_index":18,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matriculation_number",{"_index":1072,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["matriculationnumber",{"_index":1190,"title":{},"body":{"entities/User.html":{}}}],["meaning",{"_index":470,"title":{},"body":{"injectables/DateService.html":{}}}],["mediumtext",{"_index":957,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["member",{"_index":729,"title":{},"body":{"entities/Project.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["member.controller",{"_index":835,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["member.controller.ts",{"_index":811,"title":{},"body":{"controllers/ProjectMemberController.html":{},"coverage.html":{}}}],["member.controller.ts:24",{"_index":813,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.controller.ts:46",{"_index":815,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.controller.ts:60",{"_index":814,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectModule.html":{}}}],["member.module.ts",{"_index":833,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["member.project",{"_index":730,"title":{},"body":{"entities/Project.html":{}}}],["member.remove",{"_index":870,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service",{"_index":819,"title":{},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectService.html":{}}}],["member.service.ts",{"_index":838,"title":{},"body":{"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["member.service.ts:19",{"_index":842,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:27",{"_index":851,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:43",{"_index":848,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:53",{"_index":845,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:83",{"_index":852,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:97",{"_index":850,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.ts",{"_index":786,"title":{},"body":{"entities/ProjectMember.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["member.ts:31",{"_index":788,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:34",{"_index":794,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:37",{"_index":796,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:40",{"_index":790,"title":{},"body":{"entities/ProjectMember.html":{}}}],["memberpartial",{"_index":846,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartial.project.id",{"_index":863,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartial.user.id",{"_index":864,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartials",{"_index":849,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartials.map((memberpartial",{"_index":858,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["members",{"_index":720,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectService.html":{}}}],["memberservice",{"_index":1010,"title":{},"body":{"injectables/ProjectService.html":{}}}],["message",{"_index":361,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["metadata",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["migrationinterface",{"_index":1049,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["milestone",{"_index":585,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["milestone.controller",{"_index":905,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["milestone.controller.ts",{"_index":884,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"coverage.html":{}}}],["milestone.controller.ts:22",{"_index":888,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:34",{"_index":886,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:42",{"_index":889,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:56",{"_index":887,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{}}}],["milestone.module.ts",{"_index":904,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["milestone.project",{"_index":732,"title":{},"body":{"entities/Project.html":{}}}],["milestone.remove",{"_index":944,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service",{"_index":891,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectService.html":{}}}],["milestone.service.ts",{"_index":907,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["milestone.service.ts:120",{"_index":918,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:19",{"_index":911,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:26",{"_index":919,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:34",{"_index":920,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:50",{"_index":917,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:62",{"_index":914,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:77",{"_index":921,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.ts",{"_index":871,"title":{},"body":{"entities/ProjectMilestone.html":{},"coverage.html":{}}}],["milestone.ts:26",{"_index":876,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:29",{"_index":879,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:32",{"_index":878,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:35",{"_index":881,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:38",{"_index":875,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone/estimates",{"_index":615,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["milestone_estimate",{"_index":1082,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestone_reached",{"_index":877,"title":{},"body":{"entities/ProjectMilestone.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestoneestimate",{"_index":579,"title":{"entities/MilestoneEstimate.html":{}},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["milestoneestimatecontroller",{"_index":612,"title":{"controllers/MilestoneEstimateController.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"coverage.html":{}}}],["milestoneestimatemodule",{"_index":149,"title":{"modules/MilestoneEstimateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMilestoneModule.html":{},"index.html":{},"modules.html":{}}}],["milestoneestimaterepository",{"_index":653,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["milestoneestimates",{"_index":910,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestoneestimateservice",{"_index":632,"title":{"injectables/MilestoneEstimateService.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{},"coverage.html":{},"index.html":{}}}],["milestoneid",{"_index":1084,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestonepartial",{"_index":929,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonepartials",{"_index":915,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonepartials.map(async",{"_index":928,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonereached",{"_index":873,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["milestones",{"_index":721,"title":{},"body":{"entities/Project.html":{}}}],["milestoneservice",{"_index":1009,"title":{},"body":{"injectables/ProjectService.html":{}}}],["milliseconds",{"_index":504,"title":{},"body":{"injectables/DateService.html":{}}}],["minute",{"_index":503,"title":{},"body":{"injectables/DateService.html":{}}}],["minutes",{"_index":454,"title":{},"body":{"injectables/DateService.html":{}}}],["miscellaneous",{"_index":1366,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":459,"title":{},"body":{"injectables/DateService.html":{}}}],["module",{"_index":137,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["modules",{"_index":139,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["modules/authentication.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/milestone",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{}}}],["modules/profile.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/project",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectModule.html":{}}}],["modules/project.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{}}}],["mysql",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["nestinterceptor",{"_index":572,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":259,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":94,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["newproject",{"_index":1028,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newproject.save",{"_index":1031,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newrecord",{"_index":1171,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newrecord.save",{"_index":1173,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newreport",{"_index":1004,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["newreport.save",{"_index":1006,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["next",{"_index":568,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["next.handle().pipe",{"_index":575,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["noaffectedrowexception",{"_index":661,"title":{"classes/NoAffectedRowException.html":{}},"body":{"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["noaffectedrowexception(null",{"_index":677,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["notfoundexception",{"_index":853,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["now",{"_index":528,"title":{},"body":{"injectables/DateService.html":{}}}],["null",{"_index":70,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"classes/NoAffectedRowException.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":63,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":388,"title":{},"body":{"classes/BaseException.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"miscellaneous/functions.html":{}}}],["oberservable",{"_index":226,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["oberservable.ts",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":476,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["object.hasown(exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object.hasown(payload",{"_index":925,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["object.hasown(req.cookies",{"_index":72,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["object.hasown(request.query",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(updatedfields).length",{"_index":941,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["objectives",{"_index":955,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["observable",{"_index":194,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["occured",{"_index":364,"title":{},"body":{"classes/BadRequestException.html":{}}}],["official_end",{"_index":735,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["official_start",{"_index":737,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["officialend",{"_index":722,"title":{},"body":{"entities/Project.html":{}}}],["officialstart",{"_index":723,"title":{},"body":{"entities/Project.html":{}}}],["offset",{"_index":440,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit",{"_index":467,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit.replace(offset.tostring",{"_index":514,"title":{},"body":{"injectables/DateService.html":{}}}],["ondelete",{"_index":595,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{}}}],["one",{"_index":437,"title":{},"body":{"injectables/DateService.html":{}}}],["onetomany",{"_index":750,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":728,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetoone",{"_index":1147,"title":{},"body":{"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":1204,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":390,"title":{},"body":{"classes/BaseException.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":487,"title":{},"body":{"injectables/DateService.html":{}}}],["out",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":1390,"title":{"index.html":{}},"body":{"index.html":{}}}],["owner",{"_index":542,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"entities/Project.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["ownerid",{"_index":1080,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["package",{"_index":1343,"title":{"dependencies.html":{},"properties.html":{}},"body":{"miscellaneous/functions.html":{}}}],["param",{"_index":510,"title":{},"body":{"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["param('id",{"_index":637,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["parameter",{"_index":557,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["parsed",{"_index":492,"title":{},"body":{"injectables/DateService.html":{}}}],["parsedate",{"_index":432,"title":{},"body":{"injectables/DateService.html":{}}}],["parsedate(date",{"_index":488,"title":{},"body":{"injectables/DateService.html":{}}}],["parseint(regex.exec(offsetwithunit)[0",{"_index":513,"title":{},"body":{"injectables/DateService.html":{}}}],["parser",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":491,"title":{},"body":{"injectables/DateService.html":{}}}],["part",{"_index":1382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partialreport",{"_index":998,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["partialresource",{"_index":656,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["partialresource.estimationdate",{"_index":668,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["partialresource.reportdate",{"_index":670,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["passport",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":257,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":50,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":22,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passreqtocallback",{"_index":83,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passthrough",{"_index":230,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["password",{"_index":227,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["patch",{"_index":626,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patch(':id",{"_index":624,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patchone",{"_index":972,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["patchone(id",{"_index":975,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["path",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload.id",{"_index":926,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["payload.password",{"_index":235,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["payload[attribute",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["performing",{"_index":365,"title":{},"body":{"classes/BadRequestException.html":{}}}],["phone_number",{"_index":1076,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["phonenumber",{"_index":1191,"title":{},"body":{"entities/User.html":{}}}],["pipe",{"_index":822,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["pipes/valid",{"_index":630,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["pipetransform",{"_index":1295,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["plus(offset",{"_index":517,"title":{},"body":{"injectables/DateService.html":{}}}],["port",{"_index":1374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":208,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('logout",{"_index":237,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('refresh",{"_index":244,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('register",{"_index":205,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('search",{"_index":1222,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["present",{"_index":1240,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["primary",{"_index":1068,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid",{"_index":590,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid(options",{"_index":1375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["procedure",{"_index":1126,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["profile",{"_index":695,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilecontroller",{"_index":693,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":150,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":535,"title":{"entities/Project.html":{}},"body":{"classes/DeleteProjectNotAllowedException.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/User.html":{},"coverage.html":{}}}],["project.members",{"_index":789,"title":{},"body":{"entities/ProjectMember.html":{},"injectables/ProjectService.html":{}}}],["project.members.map((member",{"_index":1039,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.milestones",{"_index":880,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectService.html":{}}}],["project.milestones.map((milestone",{"_index":1034,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.owner",{"_index":1202,"title":{},"body":{"entities/User.html":{}}}],["project.owner.id",{"_index":1043,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.remove",{"_index":1045,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.reports",{"_index":963,"title":{},"body":{"entities/ProjectReport.html":{}}}],["project/members",{"_index":812,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["project/milestones",{"_index":885,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["project/reports",{"_index":971,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["project\\`(\\`id",{"_index":1094,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_1723758746739",{"_index":1118,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_member",{"_index":1077,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_milestone",{"_index":1081,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_milestone\\`(\\`id",{"_index":1099,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_report",{"_index":1079,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["projectcontroller",{"_index":752,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectid",{"_index":1078,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["projectmember",{"_index":727,"title":{"entities/ProjectMember.html":{}},"body":{"entities/Project.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmember.save",{"_index":860,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmember.user",{"_index":825,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["projectmemberalreadyexistsexception",{"_index":800,"title":{"classes/ProjectMemberAlreadyExistsException.html":{}},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["projectmembercontroller",{"_index":809,"title":{"controllers/ProjectMemberController.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"coverage.html":{}}}],["projectmembermodule",{"_index":151,"title":{"modules/ProjectMemberModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectmemberrepository",{"_index":843,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmembers",{"_index":1037,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmemberservice",{"_index":817,"title":{"injectables/ProjectMemberService.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmilestone",{"_index":592,"title":{"entities/ProjectMilestone.html":{}},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmilestonecontroller",{"_index":883,"title":{"controllers/ProjectMilestoneController.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"coverage.html":{}}}],["projectmilestonemodule",{"_index":152,"title":{"modules/ProjectMilestoneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectmilestonerepository",{"_index":912,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["projectmilestones",{"_index":1032,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmilestoneservice",{"_index":890,"title":{"injectables/ProjectMilestoneService.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmodule",{"_index":153,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectreport",{"_index":744,"title":{"entities/ProjectReport.html":{}},"body":{"entities/Project.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["projectreportcontroller",{"_index":969,"title":{"controllers/ProjectReportController.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"coverage.html":{}}}],["projectreportmodule",{"_index":154,"title":{"modules/ProjectReportModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectReportModule.html":{},"index.html":{},"modules.html":{}}}],["projectreportrepository",{"_index":995,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["projectreportservice",{"_index":977,"title":{"injectables/ProjectReportService.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{},"index.html":{}}}],["projectrepository",{"_index":841,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["projectrole",{"_index":791,"title":{},"body":{"entities/ProjectMember.html":{},"miscellaneous/enumerations.html":{}}}],["projects",{"_index":754,"title":{},"body":{"controllers/ProjectController.html":{},"entities/User.html":{}}}],["projectservice",{"_index":773,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projektarbeitapi.ts",{"_index":1048,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["projektarbeitapi.ts:4",{"_index":1052,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi.ts:51",{"_index":1055,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi.ts:6",{"_index":1057,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi1723306279388",{"_index":1046,"title":{"classes/ProjektarbeitAPI1723306279388.html":{}},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["projektarbeitapimilestone",{"_index":1119,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["promise",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["promise.all(updates",{"_index":939,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["promisetoobservable",{"_index":224,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["promisetoobservable(promise",{"_index":1386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promisetoobservable(this.authenticationservice.logout(user['sub",{"_index":238,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.authenticationservice.register(payload",{"_index":231,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.create(payload",{"_index":636,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.delete(id",{"_index":639,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.update(id",{"_index":638,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.projectmemberservice.delete(id",{"_index":827,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmemberservice.update(id",{"_index":826,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.createone(payload",{"_index":897,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.delete(id",{"_index":899,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.findall(where",{"_index":896,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.update(id",{"_index":898,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectreportservice.create(payload",{"_index":985,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectreportservice.findone(id",{"_index":983,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectservice.create(payload",{"_index":781,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.delete(id",{"_index":784,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findall(user['sub",{"_index":779,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findone(id",{"_index":780,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.update(id",{"_index":783,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.userservice.delete(user['sub",{"_index":1234,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.findall(where",{"_index":1230,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.findbyid(user['sub",{"_index":711,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.findbyidandcredentials(id",{"_index":713,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.searchall(payload.searchterm)).pipe",{"_index":1231,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.update(id",{"_index":714,"title":{},"body":{"controllers/ProfileController.html":{}}}],["properties",{"_index":427,"title":{"properties.html":{}},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["properties.includes(field",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":382,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"miscellaneous/functions.html":{}}}],["propertydecorator",{"_index":1385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":691,"title":{},"body":{"classes/NoAffectedRowException.html":{},"miscellaneous/functions.html":{}}}],["provided",{"_index":1185,"title":{},"body":{"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["public",{"_index":68,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["query",{"_index":367,"title":{},"body":{"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{}}}],["queryrunner",{"_index":1054,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query",{"_index":1058,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query(`alter",{"_index":1115,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["queryrunner.query(`drop",{"_index":1101,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query(`set",{"_index":1129,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["references",{"_index":1089,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["reflect",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":1103,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh_token",{"_index":1064,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_cookie",{"_index":405,"title":{},"body":{"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_expiration_date",{"_index":1065,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{}}}],["refreshtoken",{"_index":247,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenexpirationdate",{"_index":1137,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenguard",{"_index":214,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":186,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["refreshtokens(email",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshtokens(user",{"_index":200,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refreshtokenstrategy",{"_index":255,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"index.html":{}}}],["refreshtokenstrategy.fromcookie",{"_index":1106,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["refreshtokenstrategy.fromcookie()(request",{"_index":1107,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["regex",{"_index":511,"title":{},"body":{"injectables/DateService.html":{},"classes/ValidUUIDPipe.html":{}}}],["regex.test(value.tolowercase",{"_index":1306,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["regexp(/\\d",{"_index":512,"title":{},"body":{"injectables/DateService.html":{}}}],["register",{"_index":187,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["register(payload",{"_index":203,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["register(undefined",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register(userdata",{"_index":1266,"title":{},"body":{"injectables/UserService.html":{}}}],["registered",{"_index":1211,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["registereduser",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.email",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.id",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.password",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerpayload",{"_index":204,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["rel_fbe0e932e64303e1f63e3e16f5",{"_index":1067,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["relations",{"_index":762,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["relations[include",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations[table",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relationtypes",{"_index":381,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"miscellaneous/typealiases.html":{}}}],["relocatedmilestonereachedflag.ts",{"_index":1111,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["relocatedmilestonereachedflag.ts:4",{"_index":1112,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag.ts:6",{"_index":1114,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag.ts:85",{"_index":1113,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag1723758746739",{"_index":1109,"title":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["removeexpiredtokens",{"_index":1127,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["removeexpiredtokensevent",{"_index":1133,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["report",{"_index":745,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{}}}],["report.controller",{"_index":990,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["report.controller.ts",{"_index":970,"title":{},"body":{"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["report.controller.ts:22",{"_index":974,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:36",{"_index":976,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:53",{"_index":973,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["report.module.ts",{"_index":989,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["report.project",{"_index":746,"title":{},"body":{"entities/Project.html":{}}}],["report.service",{"_index":978,"title":{},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{}}}],["report.service.ts",{"_index":992,"title":{},"body":{"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["report.service.ts:17",{"_index":994,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:23",{"_index":999,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:39",{"_index":1000,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:53",{"_index":997,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.ts",{"_index":952,"title":{},"body":{"entities/ProjectReport.html":{},"coverage.html":{}}}],["report.ts:25",{"_index":960,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:28",{"_index":967,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:31",{"_index":965,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:34",{"_index":958,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:37",{"_index":959,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:40",{"_index":961,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:43",{"_index":962,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:46",{"_index":964,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report_date",{"_index":598,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["report_interval",{"_index":741,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["reportdate",{"_index":586,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/ProjectReport.html":{}}}],["reportinterval",{"_index":724,"title":{},"body":{"entities/Project.html":{}}}],["reports",{"_index":725,"title":{},"body":{"entities/Project.html":{}}}],["repository",{"_index":651,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["representation",{"_index":501,"title":{},"body":{"injectables/DateService.html":{}}}],["representing",{"_index":439,"title":{},"body":{"injectables/DateService.html":{}}}],["req",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies",{"_index":71,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies[access_token_cookie",{"_index":73,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["req.cookies[refresh_token_cookie",{"_index":1105,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["request",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"miscellaneous/variables.html":{}}}],["request.exception",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["request.exception.ts",{"_index":354,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:5",{"_index":357,"title":{},"body":{"classes/BadRequestException.html":{}}}],["request.query.fields",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.fields[table",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter[field",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.include",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":559,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["requires",{"_index":1184,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["res",{"_index":190,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reset",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["resource",{"_index":560,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["response",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/CookieService.html":{}}}],["response.clearcookie(access_token_cookie",{"_index":418,"title":{},"body":{"injectables/CookieService.html":{}}}],["response.clearcookie(refresh_token_cookie",{"_index":419,"title":{},"body":{"injectables/CookieService.html":{}}}],["response.cookie(access_token_cookie",{"_index":407,"title":{},"body":{"injectables/CookieService.html":{}}}],["response.cookie(refresh_token_cookie",{"_index":415,"title":{},"body":{"injectables/CookieService.html":{}}}],["responsebody",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":232,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["result?.affected",{"_index":240,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["resulted",{"_index":685,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["results",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":69,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":787,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["row",{"_index":689,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["row.exception",{"_index":664,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["row.exception.ts",{"_index":682,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["row.exception.ts:5",{"_index":683,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rows",{"_index":686,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rxjs",{"_index":210,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["samesite",{"_index":411,"title":{},"body":{"injectables/CookieService.html":{}}}],["search",{"_index":1243,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["searchall",{"_index":1216,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["searchall(payload",{"_index":1220,"title":{},"body":{"controllers/UserController.html":{}}}],["searchall(searchterm",{"_index":1268,"title":{},"body":{"injectables/UserService.html":{}}}],["searchbody",{"_index":1221,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/typealiases.html":{}}}],["searchterm",{"_index":1225,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["searchterm.tolowercase",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["secretorkey",{"_index":81,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["secure",{"_index":410,"title":{},"body":{"injectables/CookieService.html":{}}}],["select",{"_index":760,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["selected",{"_index":541,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["sequence_number",{"_index":966,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["sequencenumber",{"_index":956,"title":{},"body":{"entities/ProjectReport.html":{}}}],["services/authentication.service",{"_index":218,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/CookieService.html":{}}}],["services/cookie.service",{"_index":220,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["services/crypto.service",{"_index":264,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["services/date.service",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AuthenticationModule.html":{},"injectables/CookieService.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{}}}],["services/milestone",{"_index":633,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/ProjectMilestoneService.html":{}}}],["services/project",{"_index":818,"title":{},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectService.html":{}}}],["services/project.service",{"_index":774,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{}}}],["services/token",{"_index":57,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["services/user.service",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["set",{"_index":398,"title":{},"body":{"injectables/CookieService.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["set(tokens",{"_index":403,"title":{},"body":{"injectables/CookieService.html":{}}}],["setzone(time_zone",{"_index":516,"title":{},"body":{"injectables/DateService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["sparsefieldsets",{"_index":770,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sparsefieldsets(project",{"_index":777,"title":{},"body":{"controllers/ProjectController.html":{}}}],["sparsefieldsets(projectmilestone",{"_index":894,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["sparsefieldsets(projectreport",{"_index":981,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["sparsefieldsets(user",{"_index":1228,"title":{},"body":{"controllers/UserController.html":{}}}],["sparsefieldsetsfactory",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sql",{"_index":366,"title":{},"body":{"classes/BadRequestException.html":{}}}],["src/.../access",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../authentication.controller.ts",{"_index":1405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base.exception.ts",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../date.service.ts",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../filters.decorator.ts",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../includes.decorator.ts",{"_index":1408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nullable.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../primary",{"_index":1371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project",{"_index":1368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../promise",{"_index":1372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../refresh",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sparse",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../success.ts",{"_index":1416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../token",{"_index":1417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.controller.ts",{"_index":1415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.decorator.ts",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/base",{"_index":369,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/authentication.controller.ts",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/authentication.controller.ts:31",{"_index":206,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:45",{"_index":193,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:63",{"_index":198,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:84",{"_index":202,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/milestone",{"_index":613,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["src/controllers/profile.controller.ts",{"_index":694,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/controllers/profile.controller.ts:23",{"_index":700,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/profile.controller.ts:37",{"_index":704,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/profile.controller.ts:55",{"_index":706,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/project",{"_index":810,"title":{},"body":{"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["src/controllers/project.controller.ts",{"_index":753,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/controllers/project.controller.ts:23",{"_index":764,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:37",{"_index":766,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:51",{"_index":757,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:61",{"_index":767,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:75",{"_index":758,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/user.controller.ts",{"_index":1213,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/user.controller.ts:26",{"_index":1219,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:38",{"_index":1223,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:57",{"_index":1218,"title":{},"body":{"controllers/UserController.html":{}}}],["src/decorators/filters.decorator.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/includes.decorator.ts",{"_index":1318,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/primary",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/decorators/sparse",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/milestone",{"_index":581,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["src/entities/project",{"_index":785,"title":{},"body":{"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/entities/project.ts",{"_index":719,"title":{},"body":{"entities/Project.html":{},"coverage.html":{}}}],["src/entities/project.ts:31",{"_index":726,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:34",{"_index":734,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:41",{"_index":738,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:44",{"_index":736,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:47",{"_index":743,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:50",{"_index":749,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:53",{"_index":740,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:56",{"_index":731,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:59",{"_index":747,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:62",{"_index":733,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/token",{"_index":1134,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["src/entities/user.ts",{"_index":1186,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/entities/user.ts:35",{"_index":1197,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:38",{"_index":1194,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:41",{"_index":1199,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:44",{"_index":1196,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:47",{"_index":1198,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:50",{"_index":1195,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:53",{"_index":1200,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:56",{"_index":1201,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:59",{"_index":1203,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:62",{"_index":1206,"title":{},"body":{"entities/User.html":{}}}],["src/environment.ts",{"_index":1419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/exceptions/bad",{"_index":353,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["src/exceptions/base.exception.ts",{"_index":385,"title":{},"body":{"classes/BaseException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/exceptions/base.exception.ts:9",{"_index":391,"title":{},"body":{"classes/BaseException.html":{}}}],["src/exceptions/delete",{"_index":534,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"coverage.html":{}}}],["src/exceptions/incorrect",{"_index":543,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["src/exceptions/invalid",{"_index":552,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"coverage.html":{}}}],["src/exceptions/no",{"_index":681,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["src/exceptions/project",{"_index":801,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts",{"_index":1180,"title":{},"body":{"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts:5",{"_index":1181,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["src/exceptions/user",{"_index":1208,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["src/filters/all",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/guards/access",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/guards/refresh",{"_index":1102,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/interceptors/json",{"_index":563,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1723306279388",{"_index":1047,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["src/migrations/1723306299388",{"_index":1121,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["src/migrations/1723758746739",{"_index":1110,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["src/modules/authentication.module.ts",{"_index":256,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/modules/milestone",{"_index":643,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["src/modules/profile.module.ts",{"_index":717,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/project",{"_index":832,"title":{},"body":{"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectReportModule.html":{}}}],["src/modules/project.module.ts",{"_index":949,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/modules/user.module.ts",{"_index":1248,"title":{},"body":{"modules/UserModule.html":{}}}],["src/pipes/valid",{"_index":1293,"title":{},"body":{"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["src/services/authentication.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/authentication.service.ts:126",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:160",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:30",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:38",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:68",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:90",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:94",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/cookie.service.ts",{"_index":396,"title":{},"body":{"injectables/CookieService.html":{},"coverage.html":{}}}],["src/services/cookie.service.ts:12",{"_index":400,"title":{},"body":{"injectables/CookieService.html":{}}}],["src/services/cookie.service.ts:15",{"_index":404,"title":{},"body":{"injectables/CookieService.html":{}}}],["src/services/cookie.service.ts:31",{"_index":402,"title":{},"body":{"injectables/CookieService.html":{}}}],["src/services/crypto.service.ts",{"_index":420,"title":{},"body":{"injectables/CryptoService.html":{},"coverage.html":{}}}],["src/services/crypto.service.ts:7",{"_index":423,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/services/date.service.ts",{"_index":426,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/date.service.ts:108",{"_index":489,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:13",{"_index":499,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:33",{"_index":474,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:61",{"_index":434,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:77",{"_index":479,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/milestone",{"_index":648,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["src/services/project",{"_index":837,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["src/services/project.service.ts",{"_index":1007,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/services/project.service.ts:115",{"_index":1018,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:129",{"_index":1014,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:22",{"_index":1011,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:30",{"_index":1016,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:53",{"_index":1017,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:69",{"_index":1013,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/token",{"_index":1149,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/user.service.ts",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:19",{"_index":1256,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:26",{"_index":1259,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:34",{"_index":1269,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:47",{"_index":1261,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:51",{"_index":1263,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:55",{"_index":1265,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:63",{"_index":1267,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:69",{"_index":1270,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:87",{"_index":1258,"title":{},"body":{"injectables/UserService.html":{}}}],["src/strategies/access",{"_index":20,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/strategies/refresh",{"_index":1104,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tokens/access",{"_index":1337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tokens/refresh",{"_index":1339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/nullable.ts",{"_index":1420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/success.ts",{"_index":1422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/promise",{"_index":1340,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{}}}],["status",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["statuscode",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["storedprocedureandevent.ts",{"_index":1122,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["storedprocedureandevent.ts:24",{"_index":1124,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent.ts:4",{"_index":1123,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent.ts:6",{"_index":1125,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent1723306299388",{"_index":1120,"title":{"classes/StoredProcedureAndEvent1723306299388.html":{}},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["strategies/access",{"_index":265,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategies/refresh",{"_index":267,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategy",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":66,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(subcode).padstart(3",{"_index":394,"title":{},"body":{"classes/BaseException.html":{}}}],["string).split",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sub",{"_index":65,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["subcode",{"_index":387,"title":{},"body":{"classes/BaseException.html":{}}}],["subentity",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getcolumns",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getrelationtypes",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":221,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"miscellaneous/typealiases.html":{}}}],["successhandler",{"_index":1387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":76,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseException.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["super(httpstatus.bad_request",{"_index":360,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["super(httpstatus.method_not_allowed",{"_index":539,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["super(httpstatus.not_acceptable",{"_index":556,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["super(httpstatus.unauthorized",{"_index":1182,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["support",{"_index":1395,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1396,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":816,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["switchmap((projectmember",{"_index":823,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["t",{"_index":1421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t').concat('z",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["table",{"_index":1059,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.split",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.length",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.slice(1",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables[0",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":574,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["take(1",{"_index":576,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["takes",{"_index":436,"title":{},"body":{"injectables/DateService.html":{}}}],["this.authenticationservice.login(payload.email",{"_index":234,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authenticationservice.refreshtokens(useremail",{"_index":249,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.cookies.clear(res",{"_index":242,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.cookies.set(result",{"_index":233,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.crypto.hash(accesstoken",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.crypto.hash(password",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.crypto.hash(payload.password",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{}}}],["this.crypto.hash(refreshtoken",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.crypto.hash(where.password",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["this.date.getcurrenttimestampwithoffset",{"_index":1170,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.getcurrenttimestampwithoffset('0m').replace",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.date.getexpirationdatewithoffset(env.access_token_expiration",{"_index":414,"title":{},"body":{"injectables/CookieService.html":{}}}],["this.date.getexpirationdatewithoffset(env.refresh_token_expiration",{"_index":417,"title":{},"body":{"injectables/CookieService.html":{}}}],["this.date.isaftercurrenttimestamp(tokenwhitelistentry.accesstokenexpirationdate",{"_index":1177,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.isaftercurrenttimestamp(tokenwhitelistentry.refreshtokenexpirationdate",{"_index":1178,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.parsedate(partialresource.estimationdate",{"_index":669,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.date.parsedate(partialresource.reportdate",{"_index":671,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.findbyid(id",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findbyuser(userid",{"_index":1168,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.findone",{"_index":1042,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.findone(id",{"_index":869,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["this.generatetokens(registereduser.id",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(user.id",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(userwithoutpassword.id",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getcurrenttimestampwithoffset('0m",{"_index":530,"title":{},"body":{"injectables/DateService.html":{}}}],["this.getexpirationdatewithoffset(offsetwithunit",{"_index":521,"title":{},"body":{"injectables/DateService.html":{}}}],["this.getrelations().concat(...this.getcolumns",{"_index":384,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["this.httpadapterhost",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.id",{"_index":611,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["this.jwtservice.signasync",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.memberservice.createall",{"_index":1038,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.milestoneestimaterepository.delete",{"_index":679,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimaterepository.insert(partialresource",{"_index":667,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimaterepository.update",{"_index":675,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimates.update(id",{"_index":937,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.milestoneservice.createall",{"_index":1033,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmemberrepository.create(memberpartial",{"_index":859,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.findone",{"_index":857,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.findoneby",{"_index":862,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.update",{"_index":867,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberservice.create(payload",{"_index":821,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["this.projectmilestonerepository.find",{"_index":923,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.findone",{"_index":924,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.insert(milestonepartial",{"_index":930,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.insert(payload",{"_index":927,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.update",{"_index":942,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectreportrepository.create(partialreport",{"_index":1005,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.findone",{"_index":1002,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.update",{"_index":1003,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportservice.patchone(id",{"_index":984,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["this.projectrepository.create",{"_index":1029,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.find",{"_index":1026,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.findone",{"_index":1027,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.findoneby",{"_index":865,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectrepository.update",{"_index":1041,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.tokenwhitelistrepository.create",{"_index":1172,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.delete",{"_index":1174,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.findone",{"_index":1175,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.remove(tokenwhitelistentry",{"_index":1169,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistservice.delete(userid",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.findbyuser(user.id",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.update",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.verifyaccesstoken(payload.sub",{"_index":92,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["this.tokenwhitelistservice.verifyrefreshtoken(payload.sub",{"_index":1108,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["this.units[unit",{"_index":518,"title":{},"body":{"injectables/DateService.html":{}}}],["this.updatewhitelistedtokens",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userrepository",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.create(userdata",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1273,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":1281,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyemail(email",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.findbyid(projectmember.user.id",{"_index":824,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["this.userservice.register",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throw",{"_index":93,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["thrown",{"_index":806,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["time",{"_index":441,"title":{},"body":{"injectables/DateService.html":{}}}],["time_zone",{"_index":507,"title":{},"body":{"injectables/DateService.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DateService.html":{}}}],["tinyint",{"_index":1083,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["toformat('yyyy",{"_index":523,"title":{},"body":{"injectables/DateService.html":{}}}],["tojsdate",{"_index":519,"title":{},"body":{"injectables/DateService.html":{}}}],["token",{"_index":61,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/CookieService.html":{},"injectables/DateService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.guard",{"_index":213,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["token.strategy",{"_index":266,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["token.strategy.ts",{"_index":21,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token.strategy.ts:19",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:27",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:40",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token_whitelist",{"_index":1060,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["tokenpair",{"_index":1192,"title":{},"body":{"entities/User.html":{}}}],["tokenpairandowner",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{}}}],["tokens.accesstoken",{"_index":408,"title":{},"body":{"injectables/CookieService.html":{}}}],["tokens.refreshtoken",{"_index":416,"title":{},"body":{"injectables/CookieService.html":{}}}],["tokens/access",{"_index":60,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/CookieService.html":{}}}],["tokens/refresh",{"_index":406,"title":{},"body":{"injectables/CookieService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["tokensresponse",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenswithuserresponse",{"_index":217,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/CookieService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenwhitelist",{"_index":261,"title":{"entities/TokenWhitelist.html":{}},"body":{"modules/AuthenticationModule.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"coverage.html":{}}}],["tokenwhitelist.user",{"_index":1205,"title":{},"body":{"entities/User.html":{}}}],["tokenwhitelistentry",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.accesstoken",{"_index":1176,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.refreshtoken",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistrepository",{"_index":1156,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistservice",{"_index":32,"title":{"injectables/TokenWhitelistService.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["transform",{"_index":1296,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["transform(value",{"_index":1297,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["tried",{"_index":807,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/CookieService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["ts",{"_index":509,"title":{},"body":{"injectables/DateService.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CookieService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1403,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":383,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["typeormmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([milestoneestimate",{"_index":647,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":951,"title":{},"body":{"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([projectmember",{"_index":836,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["typeormmodule.forfeature([projectmilestone",{"_index":906,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["typeormmodule.forfeature([projectreport",{"_index":991,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["typeormmodule.forfeature([tokenwhitelist",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1250,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["types/nullable",{"_index":64,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["types/success",{"_index":223,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["unauthorized",{"_index":1183,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["unauthorizedexception",{"_index":49,"title":{"classes/UnauthorizedException.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["undefined",{"_index":389,"title":{},"body":{"classes/BaseException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["unique",{"_index":1066,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["unit",{"_index":442,"title":{},"body":{"injectables/DateService.html":{}}}],["units",{"_index":428,"title":{},"body":{"injectables/DateService.html":{}}}],["unknown",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":1051,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["up(queryrunner",{"_index":1056,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["update",{"_index":617,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":623,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["update(undefined",{"_index":1161,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["updated",{"_index":866,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updated.affected",{"_index":868,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updatedestimatessuccessfully",{"_index":932,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields",{"_index":658,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["updatedfields.estimates",{"_index":933,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields.estimates.map((estimate",{"_index":935,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields.id",{"_index":673,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateprofile",{"_index":698,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":705,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateresult",{"_index":674,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateresult.affected",{"_index":676,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateresults",{"_index":938,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updateresults.includes(false",{"_index":940,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updates",{"_index":934,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatewhitelistedtokens",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updatewhitelistedtokens(undefined",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["used",{"_index":443,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":209,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard",{"_index":236,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard)@post('logout",{"_index":197,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard",{"_index":243,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard)@post('refresh",{"_index":201,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":199,"title":{"entities/User.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/UserController.html":{}}}],["user.id",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.matriculationnumber",{"_index":795,"title":{},"body":{"entities/ProjectMember.html":{}}}],["user.password",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{}}}],["user.phonenumber",{"_index":1233,"title":{},"body":{"controllers/UserController.html":{}}}],["user.projects",{"_index":739,"title":{},"body":{"entities/Project.html":{}}}],["user.remove",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["user.tokenpair",{"_index":1144,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["user['email",{"_index":246,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['refreshtoken",{"_index":248,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['sub",{"_index":782,"title":{},"body":{"controllers/ProjectController.html":{}}}],["user[attribute",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["user\\`(\\`id",{"_index":1090,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["useralreadyexistsexception",{"_index":303,"title":{"classes/UserAlreadyExistsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["useralreadyexistsexception(email",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usercontroller",{"_index":1212,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["userdoesnotexistexception",{"_index":1235,"title":{"classes/UserDoesNotExistException.html":{}},"body":{"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdoesnotexistexception(null",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":245,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["userentity",{"_index":709,"title":{},"body":{"controllers/ProfileController.html":{}}}],["userfactory",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfromrequest",{"_index":1224,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["usermodule",{"_index":155,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["userrepository",{"_index":1257,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1214,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":274,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["userwithoutpassword",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.email",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.id",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.password",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["utils/promise",{"_index":225,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["uuid",{"_index":553,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuid.decorator",{"_index":608,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["uuid.decorator.ts",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuid.pipe",{"_index":631,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["uuid.pipe.ts",{"_index":1294,"title":{},"body":{"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["uuid.pipe.ts:6",{"_index":1298,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["validate",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/DateService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(@req",{"_index":85,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(request",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validuuidpipe",{"_index":629,"title":{"classes/ValidUUIDPipe.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["value",{"_index":447,"title":{},"body":{"injectables/DateService.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["varchar",{"_index":1193,"title":{},"body":{"entities/User.html":{}}}],["varchar(255",{"_index":1062,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["variable",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1423,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":90,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["verifyaccesstoken",{"_index":1152,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyaccesstoken(userid",{"_index":1163,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken",{"_index":1153,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken(userid",{"_index":1165,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["version",{"_index":1398,"title":{},"body":{"properties.html":{}}}],["viewer",{"_index":798,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CookieService.html":{}}}],["where.members",{"_index":1023,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.owner",{"_index":1022,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.password",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{}}}],["whitelist",{"_index":263,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{}}}],["whitelist.service",{"_index":58,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["whitelist.service.ts",{"_index":1150,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whitelist.service.ts:18",{"_index":1155,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:26",{"_index":1162,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:53",{"_index":1158,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:61",{"_index":1160,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:71",{"_index":1164,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:85",{"_index":1166,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.ts",{"_index":1135,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["whitelist.ts:12",{"_index":1138,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:19",{"_index":1139,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:22",{"_index":1141,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:29",{"_index":1142,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:33",{"_index":1145,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:9",{"_index":1140,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["wraps",{"_index":446,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["wrong",{"_index":550,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["yes",{"_index":1389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yyyy",{"_index":458,"title":{},"body":{"injectables/DateService.html":{}}}],["zoom",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/access-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/access-token.strategy.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     JwtFromRequestFunction\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, JwtFromRequestFunction, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { ACCESS_TOKEN_COOKIE } from '@Tokens/access-token-cookie';\nimport { Nullable } from '@Types/nullable';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n\tpublic static fromCookie(): JwtFromRequestFunction {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, ACCESS_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[ACCESS_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tAccessTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_ACCESS_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Request, payload: JwtPayload) {\n\t\tlet accessToken: Nullable = AccessTokenStrategy.fromCookie()(request);\n\n\t\tif (!accessToken) {\n\t\t\taccessToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\t\t}\n\n\t\tconst verified = await this.tokenWhitelistService.verifyAccessToken(payload.sub, accessToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost, date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/filters/all-exceptions.filter.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/all-exceptions.filter.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\nimport { DateService } from '@Services/date.service';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\tconstructor(\n\t\tprivate readonly httpAdapterHost: HttpAdapterHost,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\tcatch(exception: any, host: ArgumentsHost): void {\n\t\tconst { httpAdapter } = this.httpAdapterHost;\n\t\tconst context = host.switchToHttp();\n\t\tconst statusCode =\n\t\t\texception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tconst responseBody = {\n\t\t\ttimestamp: this.date.getCurrentTimestampWithOffset('0m').replace(' ', 'T').concat('Z'),\n\t\t\tpath: httpAdapter.getRequestUrl(context.getRequest()),\n\t\t\t...(Object.hasOwn(exception, 'response') ? exception.response : exception),\n\t\t\tstatus: statusCode,\n\t\t};\n\n\t\thttpAdapter.reply(context.getResponse(), responseBody, statusCode);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                        \n                            MilestoneEstimateModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            ProjectMemberModule\n                        \n                        \n                            ProjectMilestoneModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            ProjectReportModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DataSource } from 'typeorm';\n\nimport config from './config';\nimport { AuthenticationModule } from '@Modules/authentication.module';\nimport { MilestoneEstimateModule } from '@Modules/milestone-estimate.module';\nimport { ProfileModule } from '@Modules/profile.module';\nimport { ProjectModule } from '@Modules/project.module';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { ProjectMilestoneModule } from '@Modules/project-milestone.module';\nimport { ProjectReportModule } from '@Modules/project-report.module';\nimport { UserModule } from '@Modules/user.module';\n\n@Module({\n\timports: [\n\t\tTypeOrmModule.forRootAsync({\n\t\t\tuseFactory: () => config,\n\t\t}),\n\t\tAuthenticationModule,\n\t\tMilestoneEstimateModule,\n\t\tProfileModule,\n\t\tProjectMemberModule,\n\t\tProjectMilestoneModule,\n\t\tProjectModule,\n\t\tProjectReportModule,\n\t\tUserModule,\n\t],\n})\nexport class AppModule {\n\tconstructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                refreshTokens\n                            \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: AuthenticationPayload, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            AuthenticationPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: RegisterPayload, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res, UseGuards } from '@nestjs/common';\n\nimport { Response } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { User } from '@Decorators/user.decorator';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { RefreshTokenGuard } from '@Guards/refresh-token.guard';\nimport {\n\tAuthenticationService,\n\tRegisterPayload,\n\tTokensWithUserResponse,\n} from '@Services/authentication.service';\nimport { CookieService } from '@Services/cookie.service';\nimport { Success as LogoutResult } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\ntype AuthenticationPayload = {\n\temail: string;\n\tpassword: string;\n};\n\n@Controller('auth')\nexport class AuthenticationController {\n\tconstructor(\n\t\tprivate readonly authenticationService: AuthenticationService,\n\t\tprivate readonly cookies: CookieService,\n\t) {}\n\n\t@Post('register')\n\tregister(\n\t\t@Body()\n\t\tpayload: RegisterPayload,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.register(payload), (result) => {\n\t\t\tthis.cookies.set(result, res);\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t@Post('login')\n\tlogin(\n\t\t@Body()\n\t\tpayload: AuthenticationPayload,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.login(payload.email, payload.password),\n\t\t\t(result) => {\n\t\t\t\tthis.cookies.set(result, res);\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n\n\t@UseGuards(AccessTokenGuard)\n\t@Post('logout')\n\tlogout(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.logout(user['sub']), (result) => {\n\t\t\tlet success = false;\n\n\t\t\tif (result?.affected === 1) success = true;\n\n\t\t\tif (success) {\n\t\t\t\tthis.cookies.clear(res);\n\t\t\t}\n\n\t\t\treturn { success } as LogoutResult;\n\t\t}) as Observable;\n\t}\n\n\t@UseGuards(RefreshTokenGuard)\n\t@Post('refresh')\n\trefreshTokens(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\tconst userEmail = user['email'];\n\t\tconst refreshToken = user['refreshToken'];\n\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.refreshTokens(userEmail, refreshToken),\n\t\t\t(result) => {\n\t\t\t\tthis.cookies.set(result, res);\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCookieService\n\nCookieService\n\nAuthenticationModule -->\n\nCookieService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CookieService\n                        \n                        \n                            CryptoService\n                        \n                        \n                            DateService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                        \n                            TokenWhitelistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AuthenticationController } from '@Controllers/authentication.controller';\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport { UserModule } from '@Modules/user.module';\nimport { AuthenticationService } from '@Services/authentication.service';\nimport { CookieService } from '@Services/cookie.service';\nimport { CryptoService } from '@Services/crypto.service';\nimport { DateService } from '@Services/date.service';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { AccessTokenStrategy } from '@Strategies/access-token.strategy';\nimport { RefreshTokenStrategy } from '@Strategies/refresh-token.strategy';\n\n@Module({\n\timports: [\n\t\tUserModule,\n\t\tPassportModule,\n\t\tJwtModule.register({}),\n\t\tTypeOrmModule.forFeature([TokenWhitelist]),\n\t],\n\tproviders: [\n\t\tAuthenticationService,\n\t\tTokenWhitelistService,\n\t\tCryptoService,\n\t\tDateService,\n\t\tAccessTokenStrategy,\n\t\tRefreshTokenStrategy,\n\t\tCookieService,\n\t],\n\texports: [AuthenticationService],\n\tcontrollers: [AuthenticationController],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Private\n                                    Async\n                                updateWhitelistedTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, tokenWhitelistService: TokenWhitelistService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/authentication.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(userId: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(email: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RegisterPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        updateWhitelistedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWhitelistedTokens(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\n\nimport { DeepPartial, DeleteResult } from 'typeorm';\n\nimport { User } from '@Entities/user';\nimport env from '@Environment';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { IncorrectCredentialsException } from '@Exceptions/incorrect-credentials.exception';\nimport { UserAlreadyExistsException } from '@Exceptions/user-already-exists.exception';\nimport { CryptoService } from '@Services/crypto.service';\nimport { TokenPairAndOwner, TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { UserService } from '@Services/user.service';\n\nexport type RegisterPayload = DeepPartial & {\n\temail: string;\n\tpassword: string;\n};\n\nexport type TokensResponse = {\n\taccessToken: string;\n\trefreshToken: string;\n};\n\nexport type TokensWithUserResponse = TokensResponse & {\n\tuser: DeepPartial;\n};\n\n@Injectable()\nexport class AuthenticationService {\n\tconstructor(\n\t\tprivate readonly userService: UserService,\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly tokenWhitelistService: TokenWhitelistService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync register({\n\t\temail,\n\t\tpassword,\n\t\t...userData\n\t}: RegisterPayload): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (user !== null) {\n\t\t\tthrow new UserAlreadyExistsException(email, null);\n\t\t}\n\n\t\tconst registeredUser = await this.userService.register({\n\t\t\temail,\n\t\t\tpassword: this.crypto.hash(password),\n\t\t\t...userData,\n\t\t});\n\t\tdelete registeredUser.password;\n\n\t\tconst tokens = await this.generateTokens(registeredUser.id, registeredUser.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: registeredUser.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: registeredUser,\n\t\t};\n\t}\n\n\tasync login(email: string, password: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user || user.password !== this.crypto.hash(password)) {\n\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t}\n\n\t\tconst userWithoutPassword: DeepPartial = user;\n\t\tdelete userWithoutPassword.password;\n\n\t\tconst tokens = await this.generateTokens(userWithoutPassword.id, userWithoutPassword.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: userWithoutPassword.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: userWithoutPassword,\n\t\t};\n\t}\n\n\tlogout(userId: string): Promise {\n\t\treturn this.tokenWhitelistService.delete(userId);\n\t}\n\n\tasync refreshTokens(email: string, refreshToken: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tdelete user.password;\n\t\tconst tokenWhitelistEntry = await this.tokenWhitelistService.findByUser(user.id);\n\n\t\tif (!tokenWhitelistEntry) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\n\t\tif (hashedRefreshedToken !== tokenWhitelistEntry.refreshToken) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst tokens = await this.generateTokens(user.id, user.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: user.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser,\n\t\t};\n\t}\n\n\tprivate async generateTokens(userId: string, email: string): Promise {\n\t\ttry {\n\t\t\tconst [accessToken, refreshToken] = await Promise.all([\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_ACCESS_SECRET,\n\t\t\t\t\t\texpiresIn: env.ACCESS_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_REFRESH_SECRET,\n\t\t\t\t\t\texpiresIn: env.REFRESH_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\treturn {\n\t\t\t\taccessToken,\n\t\t\t\trefreshToken,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new BadRequestException(error);\n\t\t}\n\t}\n\n\tprivate async updateWhitelistedTokens({\n\t\trefreshToken,\n\t\taccessToken,\n\t\tuserId,\n\t}: TokenPairAndOwner): Promise {\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\n\t\tawait this.tokenWhitelistService.update({\n\t\t\tuserId,\n\t\t\taccessToken: hashedAccessToken,\n\t\t\trefreshToken: hashedRefreshedToken,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestException.html":{"url":"classes/BadRequestException.html","title":"class - BadRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/bad-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/bad-request.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class BadRequestException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 1, {\n\t\t\tmessage: 'Bad Request',\n\t\t\tdescription: 'An error occured while performing the sql query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithExtras.html":{"url":"classes/BaseEntityWithExtras.html","title":"class - BaseEntityWithExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithExtras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/base-entity-with-extras.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColumns\n                            \n                            \n                                    Static\n                                getProperties\n                            \n                            \n                                    Static\n                                getRelations\n                            \n                            \n                                    Static\n                                getRelationTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getColumns\n                        \n                    \n                \n            \n            \n                \n                        \n                    getColumns()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProperties()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelationTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelationTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         RelationTypes\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport type RelationTypes = {\n\t[property: string]: typeof BaseEntityWithExtras;\n};\n\nexport class BaseEntityWithExtras extends BaseEntity {\n\tpublic static getRelationTypes(): RelationTypes {\n\t\treturn {};\n\t}\n\n\tpublic static getRelations(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getColumns(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getProperties(): string[] {\n\t\treturn this.getRelations().concat(...this.getColumns());\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseException.html":{"url":"classes/BaseException.html","title":"class - BaseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/base.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: HttpStatus, subCode: number, undefined: Options)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/base.exception.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\ntype Options = {\n\tmessage: string;\n\tdescription: string;\n\tcause: any;\n};\n\nexport class BaseException extends HttpException {\n\tconstructor(status: HttpStatus, subCode: number, { message, description, cause }: Options) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tstatus,\n\t\t\t\tmessage,\n\t\t\t\tdescription,\n\t\t\t\tcode: `HSEL-${status}-${String(subCode).padStart(3, '0')}`,\n\t\t\t},\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tcause,\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CookieService.html":{"url":"injectables/CookieService.html","title":"injectable - CookieService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CookieService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/cookie.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/cookie.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/cookie.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(tokens: TokensWithUserResponse, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/cookie.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokens\n                                            \n                                                            TokensWithUserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Response } from 'express';\n\nimport env from '@Environment';\nimport { TokensWithUserResponse } from '@Services/authentication.service';\nimport { DateService } from '@Services/date.service';\nimport { ACCESS_TOKEN_COOKIE } from '@Tokens/access-token-cookie';\nimport { REFRESH_TOKEN_COOKIE } from '@Tokens/refresh-token-cookie';\n\n@Injectable()\nexport class CookieService {\n\tconstructor(private readonly date: DateService) {}\n\n\tset(tokens: TokensWithUserResponse, response: Response): void {\n\t\tresponse.cookie(ACCESS_TOKEN_COOKIE, tokens.accessToken, {\n\t\t\thttpOnly: true,\n\t\t\tsecure: true,\n\t\t\tsameSite: 'lax',\n\t\t\texpires: this.date.getExpirationDateWithOffset(env.ACCESS_TOKEN_EXPIRATION),\n\t\t});\n\n\t\tresponse.cookie(REFRESH_TOKEN_COOKIE, tokens.refreshToken, {\n\t\t\thttpOnly: true,\n\t\t\tsecure: true,\n\t\t\tsameSite: 'lax',\n\t\t\texpires: this.date.getExpirationDateWithOffset(env.REFRESH_TOKEN_EXPIRATION),\n\t\t});\n\t}\n\n\tclear(response: Response): void {\n\t\tresponse.clearCookie(ACCESS_TOKEN_COOKIE);\n\t\tresponse.clearCookie(REFRESH_TOKEN_COOKIE);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptoService.html":{"url":"injectables/CryptoService.html","title":"injectable - CryptoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/crypto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(source: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/crypto.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class CryptoService {\n\thash(source: string): string {\n\t\treturn crypto.SHA256(source).toString(crypto.enc.Hex);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/date.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                UNITS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTimestampWithOffset\n                            \n                            \n                                getExpirationDateWithOffset\n                            \n                            \n                                isAfterCurrentTimestamp\n                            \n                            \n                                parseDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentTimestampWithOffset\n                        \n                    \n                \n            \n            \n                \ngetCurrentTimestampWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:61\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. It wraps the function getExpirationDateWithOffset and\nreturns the value as a string. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time in the following format:\n// yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\nconst accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string of the current timestamp incremented by the given offset and time unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpirationDateWithOffset\n                        \n                    \n                \n            \n            \n                \ngetExpirationDateWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:33\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time as a JavaScript date object\nconst accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                A javascript Date of the current time incremented by the given offset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAfterCurrentTimestamp\n                        \n                    \n                \n            \n            \n                \nisAfterCurrentTimestamp(timestamp: string | Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:77\n                        \n                    \n\n\n            \n                \n                        This function checks if the given timestamp is after the current time. It can be used to\nvalidate an authorization token so that it has not yet expired.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                        string | Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The timestamp to check if it's behind the current time.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if it's behind the current time, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseDate\n                        \n                    \n                \n            \n            \n                \nparseDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:108\n                        \n                    \n\n\n            \n                \n                        This function takes a javascript date object as input and parses it to be a string with the\nformat 'yyyy-MM-dd'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The date to be parsed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The parsed date in the format 'yyyy-MM-dd'.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        UNITS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/services/date.service.ts:13\n                        \n                    \n\n            \n                \n                    This object contains the representation for one day and one minute in milliseconds.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DateTime } from 'luxon';\n\nconst TIME_ZONE = 'Europe/Berlin';\n\n@Injectable()\nexport class DateService {\n\t/**\n\t * @description\n\t * This object contains the representation for one day and one minute in milliseconds.\n\t */\n\tprivate readonly UNITS = {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t};\n\n\t/**\n\t * @description\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time as a JavaScript date object\n\t * const accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A javascript Date of the current time incremented by the given offset.\n\t */\n\tgetExpirationDateWithOffset(offsetWithUnit: string): Date {\n\t\tconst regex = new RegExp(/\\d*/);\n\t\tconst offset = parseInt(regex.exec(offsetWithUnit)[0]);\n\t\tconst unit = offsetWithUnit.replace(offset.toString(), '');\n\n\t\treturn DateTime.local()\n\t\t\t.setZone(TIME_ZONE)\n\t\t\t.plus(offset * (this.UNITS[unit] ?? 1))\n\t\t\t.toJSDate();\n\t}\n\n\t/**\n\t * @description\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. It wraps the function `getExpirationDateWithOffset` and\n\t * returns the value as a string. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time in the following format:\n\t * // yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\n\t * const accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A string of the current timestamp incremented by the given offset and time unit.\n\t */\n\tgetCurrentTimestampWithOffset(offsetWithUnit: string): string {\n\t\tconst jsDate = this.getExpirationDateWithOffset(offsetWithUnit);\n\n\t\treturn DateTime.fromJSDate(jsDate)\n\t\t\t.setZone(TIME_ZONE)\n\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss', { locale: 'de-DE' });\n\t}\n\n\t/**\n\t * @description\n\t * This function checks if the given timestamp is after the current time. It can be used to\n\t * validate an authorization token so that it has not yet expired.\n\t *\n\t * @param timestamp The timestamp to check if it's behind the current time.\n\t * @returns `true` if it's behind the current time, otherwise `false`\n\t */\n\tisAfterCurrentTimestamp(timestamp: string | Date): boolean {\n\t\tlet date: string;\n\n\t\tif (timestamp instanceof Date) {\n\t\t\tdate = DateTime.fromJSDate(timestamp)\n\t\t\t\t.setZone(TIME_ZONE)\n\t\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss', { locale: 'de-DE' });\n\t\t} else {\n\t\t\tdate = timestamp;\n\t\t}\n\n\t\tconst given = DateTime.fromFormat(date, 'yyyy-MM-dd HH:mm:ss', {\n\t\t\tlocale: 'de-DE',\n\t\t}).setZone(TIME_ZONE);\n\t\tconst now = DateTime.fromFormat(\n\t\t\tthis.getCurrentTimestampWithOffset('0m'),\n\t\t\t'yyyy-MM-dd HH:mm:ss',\n\t\t\t{ locale: 'de-DE' },\n\t\t).setZone(TIME_ZONE);\n\n\t\treturn given.diff(now).toObject().milliseconds > 0;\n\t}\n\n\t/**\n\t * @description\n\t * This function takes a javascript date object as input and parses it to be a string with the\n\t * format 'yyyy-MM-dd'.\n\t *\n\t * @param date The date to be parsed.\n\t * @returns The parsed date in the format 'yyyy-MM-dd'.\n\t */\n\tparseDate(date: Date): string {\n\t\treturn DateTime.fromJSDate(date).setZone(TIME_ZONE).toFormat('yyyy-MM-dd');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProjectNotAllowedException.html":{"url":"classes/DeleteProjectNotAllowedException.html","title":"class - DeleteProjectNotAllowedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProjectNotAllowedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/delete-project-not-allowed.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/delete-project-not-allowed.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from '@Exceptions/base.exception';\n\nexport class DeleteProjectNotAllowedException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.METHOD_NOT_ALLOWED, 1, {\n\t\t\tmessage: 'Project cannot be deleted',\n\t\t\tdescription:\n\t\t\t\t'The selected project cannot be deleted because the user is not the owner of that project.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectCredentialsException.html":{"url":"classes/IncorrectCredentialsException.html","title":"class - IncorrectCredentialsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectCredentialsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/incorrect-credentials.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/incorrect-credentials.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class IncorrectCredentialsException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 2, {\n\t\t\tmessage: 'Incorrect Credentials',\n\t\t\tdescription: 'The given password or the email address is wrong.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUUIDFormatException.html":{"url":"classes/InvalidUUIDFormatException.html","title":"class - InvalidUUIDFormatException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUUIDFormatException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/invalid-uuid-format.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/invalid-uuid-format.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseException } from '@Exceptions/base.exception';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class InvalidUUIDFormatException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.NOT_ACCEPTABLE, 1, {\n\t\t\tmessage: 'The value of the parameter is malformed',\n\t\t\tdescription:\n\t\t\t\t'The parameter for the requested resource expected an uuid but it was malformed.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonApiInterceptor.html":{"url":"injectables/JsonApiInterceptor.html","title":"injectable - JsonApiInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonApiInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/json-api.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/json-api.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\n\nimport { map, Observable, take } from 'rxjs';\n\n@Injectable()\nexport class JsonApiInterceptor implements NestInterceptor {\n\tintercept(_: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttake(1),\n\t\t\tmap((data) => {\n\t\t\t\tif (data === null || data === undefined) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn { data };\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MilestoneEstimate.html":{"url":"entities/MilestoneEstimate.html","title":"entity - MilestoneEstimate","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MilestoneEstimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/milestone-estimate.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                milestone\n                            \n                            \n                                    \n                                reportDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'estimation_date', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectMilestone\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, m => m.estimates, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { ProjectMilestone } from '@Entities/project-milestone';\n\n@Entity('milestone_estimate')\nexport class MilestoneEstimate extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tmilestone: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['milestone'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'reportDate', 'estimationDate'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ name: 'estimation_date', type: 'date' })\n\testimationDate: string;\n\n\t@ManyToOne(() => ProjectMilestone, (m) => m.estimates, { onDelete: 'CASCADE' })\n\tmilestone: ProjectMilestone;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MilestoneEstimateController.html":{"url":"controllers/MilestoneEstimateController.html","title":"controller - MilestoneEstimateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MilestoneEstimateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/milestone-estimate.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                milestone/estimates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial } from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('milestone/estimates')\nexport class MilestoneEstimateController {\n\tconstructor(private readonly milestoneEstimateService: MilestoneEstimateService) {}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.create(payload));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.update(id, payload), (success) => {\n\t\t\treturn {\n\t\t\t\tsuccess,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.delete(id), (success) => {\n\t\t\treturn {\n\t\t\t\tsuccess,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MilestoneEstimateModule.html":{"url":"modules/MilestoneEstimateModule.html","title":"module - MilestoneEstimateModule","body":"\n                   \n\n\n\n\n    Modules\n    MilestoneEstimateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_exports\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\n\nMilestoneEstimateService \n\nMilestoneEstimateService \n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nMilestoneEstimateService  -->\n\nMilestoneEstimateModule->MilestoneEstimateService \n\n\n\n\n\nDateService\n\nDateService\n\nMilestoneEstimateModule -->\n\nDateService->MilestoneEstimateModule\n\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/milestone-estimate.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DateService\n                        \n                        \n                            MilestoneEstimateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MilestoneEstimateController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MilestoneEstimateService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MilestoneEstimateController } from '@Controllers/milestone-estimate.controller';\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { DateService } from '@Services/date.service';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([MilestoneEstimate])],\n\tproviders: [MilestoneEstimateService, DateService],\n\tcontrollers: [MilestoneEstimateController],\n\texports: [MilestoneEstimateService],\n})\nexport class MilestoneEstimateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MilestoneEstimateService.html":{"url":"injectables/MilestoneEstimateService.html","title":"injectable - MilestoneEstimateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MilestoneEstimateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/milestone-estimate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(milestoneEstimateRepository: Repository, date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/milestone-estimate.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        milestoneEstimateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(partialResource: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialResource\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeepPartial, Repository } from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { DateService } from '@Services/date.service';\n\n@Injectable()\nexport class MilestoneEstimateService {\n\tconstructor(\n\t\t@InjectRepository(MilestoneEstimate)\n\t\tprivate readonly milestoneEstimateRepository: Repository,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\tasync create(partialResource: DeepPartial): Promise {\n\t\tconst insertResult = await this.milestoneEstimateRepository.insert(partialResource);\n\n\t\tif (partialResource.estimationDate) {\n\t\t\tif ((partialResource.estimationDate as any) instanceof Date) {\n\t\t\t\tpartialResource.estimationDate = this.date.parseDate(partialResource.estimationDate as any);\n\t\t\t}\n\t\t}\n\n\t\tif (partialResource.reportDate) {\n\t\t\tif ((partialResource.reportDate as any) instanceof Date) {\n\t\t\t\tpartialResource.reportDate = this.date.parseDate(partialResource.reportDate as any);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...partialResource,\n\t\t\tid: insertResult.identifiers[0].id,\n\t\t} as MilestoneEstimate;\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tdelete updatedFields.id;\n\t\t\tconst updateResult = await this.milestoneEstimateRepository.update({ id }, updatedFields);\n\n\t\t\tif (updateResult.affected && updateResult.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst deleteResult = await this.milestoneEstimateRepository.delete({ id });\n\n\t\t\tif (deleteResult.affected && deleteResult.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoAffectedRowException.html":{"url":"classes/NoAffectedRowException.html","title":"class - NoAffectedRowException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoAffectedRowException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/no-affected-row.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/no-affected-row.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class NoAffectedRowException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 3, {\n\t\t\tmessage: 'The request resulted in no affected rows.',\n\t\t\tdescription:\n\t\t\t\t'This exception can either be caused since actually no row was affected or the database ' +\n\t\t\t\t'type does not provide the information if rows were affected by the query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                getProfileById\n                            \n                            \n                                    \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileById(id: string, where: FindOptionsWhere)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { User } from '@Decorators/user.decorator';\nimport { User as UserEntity } from '@Entities/user';\nimport { IncorrectCredentialsException } from '@Exceptions/incorrect-credentials.exception';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { UserService } from '@Services/user.service';\nimport { Nullable } from '@Types/nullable';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('profile')\nexport class ProfileController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tgetProfile(\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findById(user['sub']), (user) => {\n\t\t\tif (user) {\n\t\t\t\tdelete user.password;\n\t\t\t}\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Get(':id')\n\tgetProfileById(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(UserEntity)\n\t\twhere: FindOptionsWhere,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findByIdAndCredentials(id, where), (user) => {\n\t\t\tif (!user) {\n\t\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t\t}\n\n\t\t\tdelete user.password;\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Patch(':id')\n\tupdateProfile(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.update(id, payload), (user) => {\n\t\t\tif (user) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProjectMemberModule->ProfileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectMemberModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ProfileController } from '@Controllers/profile.controller';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { UserModule } from '@Modules/user.module';\n\n@Module({\n\timports: [UserModule, ProjectMemberModule],\n\tproviders: [],\n\tcontrollers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                members\n                            \n                            \n                                    \n                                milestones\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                officialEnd\n                            \n                            \n                                    \n                                officialStart\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                reportInterval\n                            \n                            \n                                    \n                                reports\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, member => member.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMilestone[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, milestone => milestone.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_end', nullable: true, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_start', type: 'date', default: () => CURRENT_DATE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.projects, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_interval', default: 7})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectReport[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, report => report.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { ProjectMember } from '@Entities/project-member';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { ProjectReport } from '@Entities/project-report';\nimport { User } from '@Entities/user';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('project')\nexport class Project extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\towner: User,\n\t\t\tmembers: ProjectMember,\n\t\t\treports: ProjectReport,\n\t\t\tmilestones: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['owner', 'members', 'reports', 'milestones'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name', 'officialStart', 'officialEnd', 'reportInterval', 'type'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@Column({\n\t\tname: 'official_start',\n\t\ttype: 'date',\n\t\tdefault: () => 'CURRENT_DATE',\n\t})\n\tofficialStart: string;\n\n\t@Column({ name: 'official_end', nullable: true, type: 'date' })\n\tofficialEnd: Nullable;\n\n\t@Column({ name: 'report_interval', default: 7 })\n\treportInterval: number;\n\n\t@Column({ nullable: true })\n\ttype: string;\n\n\t@ManyToOne(() => User, (user) => user.projects, { onDelete: 'CASCADE' })\n\towner: User;\n\n\t@OneToMany(() => ProjectMember, (member) => member.project)\n\tmembers: ProjectMember[];\n\n\t@OneToMany(() => ProjectReport, (report) => report.project)\n\treports: ProjectReport[];\n\n\t@OneToMany(() => ProjectMilestone, (milestone) => milestone.project)\n\tmilestones: ProjectMilestone[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { User } from '@Decorators/user.decorator';\nimport { Project } from '@Entities/project';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectService } from '@Services/project.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('projects')\nexport class ProjectController {\n\tconstructor(private readonly projectService: ProjectService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findAll(user['sub'], where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findOne(id, where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.create(payload, user['sub']));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.delete(id, user['sub']), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMember.html":{"url":"entities/ProjectMember.html","title":"entity - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-member.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ProjectRole})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.matriculationNumber, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { User } from '@Entities/user';\n\nexport enum ProjectRole {\n\tContributor = 'contributor',\n\tViewer = 'viewer',\n}\n\n@Entity('project_member')\nexport class ProjectMember extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tuser: User,\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['user', 'project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'role'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ type: 'enum', enum: ProjectRole })\n\trole: ProjectRole;\n\n\t@ManyToOne(() => User, (user) => user.matriculationNumber, { onDelete: 'CASCADE' })\n\tuser: User;\n\n\t@ManyToOne(() => Project, (project) => project.members, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectMemberAlreadyExistsException.html":{"url":"classes/ProjectMemberAlreadyExistsException.html","title":"class - ProjectMemberAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectMemberAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/project-member-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/project-member-already-exists.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class ProjectMemberAlreadyExistsException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 6, {\n\t\t\tmessage: 'The project member already exists.',\n\t\t\tdescription:\n\t\t\t\t'This exception was thrown because the user tried to add a new project member, .' +\n\t\t\t\t'who is already a member of the project.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMemberController.html":{"url":"controllers/ProjectMemberController.html","title":"controller - ProjectMemberController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMemberController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-member.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/members\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable, switchMap } from 'rxjs';\nimport { DeepPartial } from 'typeorm';\n\nimport { ProjectMember } from '@Entities/project-member';\nimport { User } from '@Entities/user';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectMemberService } from '@Services/project-member.service';\nimport { UserService } from '@Services/user.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/members')\nexport class ProjectMemberController {\n\tconstructor(\n\t\tprivate readonly projectMemberService: ProjectMemberService,\n\t\tprivate readonly userService: UserService,\n\t) {}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.projectMemberService.create(payload),\n\t\t).pipe(\n\t\t\tswitchMap((projectMember) => {\n\t\t\t\treturn promiseToObservable(\n\t\t\t\t\tthis.userService.findById(projectMember.user.id),\n\t\t\t\t\t(user) => {\n\t\t\t\t\t\tdelete user.password;\n\t\t\t\t\t\tprojectMember.user = user;\n\n\t\t\t\t\t\treturn projectMember;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t) as Observable;\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.delete(id), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMemberModule.html":{"url":"modules/ProjectMemberModule.html","title":"module - ProjectMemberModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMemberModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_imports\n\n\n\ncluster_ProjectMemberModule_exports\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nProjectMemberModule -->\n\nUserModule->ProjectMemberModule\n\n\n\n\n\nProjectMemberService \n\nProjectMemberService \n\nProjectMemberService  -->\n\nProjectMemberModule->ProjectMemberService \n\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-member.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMemberService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMemberController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectMemberService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMemberController } from '@Controllers/project-member.controller';\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { UserModule } from '@Modules/user.module';\nimport { ProjectMemberService } from '@Services/project-member.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectMember, Project]), UserModule],\n\tproviders: [ProjectMemberService],\n\tcontrollers: [ProjectMemberController],\n\texports: [ProjectMemberService],\n})\nexport class ProjectMemberModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMemberService.html":{"url":"injectables/ProjectMemberService.html","title":"injectable - ProjectMemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                createAll\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMemberRepository: Repository, projectRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-member.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMemberRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(memberPartial: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberPartial\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(memberPartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberPartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { ProjectMemberAlreadyExistsException } from '@Exceptions/project-member-already-exists.exception';\n\n@Injectable()\nexport class ProjectMemberService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMember)\n\t\tprivate readonly projectMemberRepository: Repository,\n\t\t@InjectRepository(Project)\n\t\tprivate readonly projectRepository: Repository,\n\t) {}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMemberRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tcreateAll(memberPartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmemberPartials.map((memberPartial) => {\n\t\t\t\tconst projectMember = this.projectMemberRepository.create(memberPartial);\n\n\t\t\t\treturn projectMember.save();\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync create(memberPartial: DeepPartial): Promise {\n\t\tconst existingMember: ProjectMember = await this.projectMemberRepository.findOneBy({\n\t\t\tproject: {\n\t\t\t\tid: memberPartial.project.id,\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tid: memberPartial.user.id,\n\t\t\t},\n\t\t});\n\n\t\tif (existingMember) {\n\t\t\tthrow new ProjectMemberAlreadyExistsException();\n\t\t}\n\n\t\tconst project = await this.projectRepository.findOneBy({\n\t\t\tid: memberPartial.project.id,\n\t\t\towner: {\n\t\t\t\tid: memberPartial.user.id,\n\t\t\t},\n\t\t});\n\n\t\tif (project) {\n\t\t\tthrow new ProjectMemberAlreadyExistsException();\n\t\t}\n\n\t\tconst projectMember = this.projectMemberRepository.create(memberPartial);\n\n\t\treturn projectMember.save();\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectMemberRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst member = await this.findOne(id, {}, {}, {});\n\n\t\t\tif (!member) {\n\t\t\t\tthrow new NotFoundException();\n\t\t\t}\n\n\t\t\tawait member.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NotFoundException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMilestone.html":{"url":"entities/ProjectMilestone.html","title":"entity - ProjectMilestone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMilestone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-milestone.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimates\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                milestoneReached\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MilestoneEstimate[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, estimate => estimate.milestone)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestoneReached\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'milestone_reached', type: 'boolean', default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.milestones, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { Project } from '@Entities/project';\n\n@Entity('project_milestone')\nexport class ProjectMilestone extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t\testimates: MilestoneEstimate,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project', 'estimates'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name', 'milestoneReached'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@Column({ name: 'milestone_reached', type: 'boolean', default: () => false })\n\tmilestoneReached: boolean;\n\n\t@ManyToOne(() => Project, (project) => project.milestones, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@OneToMany(() => MilestoneEstimate, (estimate) => estimate.milestone)\n\testimates: MilestoneEstimate[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMilestoneController.html":{"url":"controllers/ProjectMilestoneController.html","title":"controller - ProjectMilestoneController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMilestoneController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-milestone.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/milestones\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/milestones')\nexport class ProjectMilestoneController {\n\tconstructor(private readonly projectMilestoneService: ProjectMilestoneService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(ProjectMilestone)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMilestone)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMilestone)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.findAll(where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.createOne(payload));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.delete(id), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMilestoneModule.html":{"url":"modules/ProjectMilestoneModule.html","title":"module - ProjectMilestoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMilestoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_exports\n\n\n\ncluster_ProjectMilestoneModule_imports\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectMilestoneModule -->\n\nMilestoneEstimateModule->ProjectMilestoneModule\n\n\n\n\n\nMilestoneEstimateModule \n\nMilestoneEstimateModule \n\nMilestoneEstimateModule  -->\n\nProjectMilestoneModule->MilestoneEstimateModule \n\n\n\n\n\nProjectMilestoneService \n\nProjectMilestoneService \n\nProjectMilestoneService  -->\n\nProjectMilestoneModule->ProjectMilestoneService \n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-milestone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMilestoneService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMilestoneController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MilestoneEstimateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MilestoneEstimateModule\n                        \n                        \n                            ProjectMilestoneService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMilestoneController } from '@Controllers/project-milestone.controller';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { MilestoneEstimateModule } from '@Modules/milestone-estimate.module';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\n\n@Module({\n\timports: [MilestoneEstimateModule, TypeOrmModule.forFeature([ProjectMilestone])],\n\tproviders: [ProjectMilestoneService],\n\tcontrollers: [ProjectMilestoneController],\n\texports: [ProjectMilestoneService, MilestoneEstimateModule],\n})\nexport class ProjectMilestoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMilestoneService.html":{"url":"injectables/ProjectMilestoneService.html","title":"injectable - ProjectMilestoneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMilestoneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-milestone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAll\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMilestoneRepository: Repository, milestoneEstimates: MilestoneEstimateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-milestone.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMilestoneRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        milestoneEstimates\n                                                  \n                                                        \n                                                                        MilestoneEstimateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(milestonePartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                milestonePartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\n\n@Injectable()\nexport class ProjectMilestoneService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMilestone)\n\t\tprivate readonly projectMilestoneRepository: Repository,\n\t\tprivate readonly milestoneEstimates: MilestoneEstimateService,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tasync createOne(payload: DeepPartial): Promise {\n\t\tif (Object.hasOwn(payload, 'id')) delete payload.id;\n\t\tconst insertResult = await this.projectMilestoneRepository.insert(payload);\n\n\t\treturn {\n\t\t\t...payload,\n\t\t\tid: insertResult.identifiers[0].id,\n\t\t\testimates: [],\n\t\t\tmilestoneReached: false,\n\t\t} as ProjectMilestone;\n\t}\n\n\tcreateAll(milestonePartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmilestonePartials.map(async (milestonePartial) => {\n\t\t\t\tconst insertResult = await this.projectMilestoneRepository.insert(milestonePartial);\n\n\t\t\t\treturn {\n\t\t\t\t\t...milestonePartial,\n\t\t\t\t\tid: insertResult.identifiers[0].id,\n\t\t\t\t\testimates: [],\n\t\t\t\t\tmilestoneReached: false,\n\t\t\t\t} as ProjectMilestone;\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tlet hadEstimates = false;\n\t\t\tlet updatedEstimatesSuccessfully = false;\n\n\t\t\tif (updatedFields.estimates) {\n\t\t\t\thadEstimates = true;\n\n\t\t\t\tconst updates$ = updatedFields.estimates.map((estimate: DeepPartial) => {\n\t\t\t\t\tconst id = estimate.id;\n\t\t\t\t\tdelete estimate.id;\n\n\t\t\t\t\treturn this.milestoneEstimates.update(id, estimate);\n\t\t\t\t});\n\n\t\t\t\tconst updateResults = await Promise.all(updates$);\n\t\t\t\tupdatedEstimatesSuccessfully = !updateResults.includes(false);\n\n\t\t\t\tdelete updatedFields.estimates;\n\t\t\t}\n\n\t\t\tif (Object.keys(updatedFields).length === 0) {\n\t\t\t\tif (hadEstimates) return updatedEstimatesSuccessfully;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst updated = await this.projectMilestoneRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) {\n\t\t\t\tif (hadEstimates) return updatedEstimatesSuccessfully;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst milestone = await this.findOne(id, {}, {}, {});\n\n\t\t\tif (!milestone) throw new BadRequestException(null);\n\n\t\t\tawait milestone.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof BadRequestException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_ProjectModule_exports\n\n\n\ncluster_ProjectModule_imports\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectMemberModule->ProjectModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectModule -->\n\nProjectMilestoneModule->ProjectModule\n\n\n\n\n\nProjectService \n\nProjectService \n\nProjectService  -->\n\nProjectModule->ProjectService \n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectMemberModule\n                        \n                        \n                            ProjectMilestoneModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectController } from '@Controllers/project.controller';\nimport { Project } from '@Entities/project';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { ProjectMilestoneModule } from '@Modules/project-milestone.module';\nimport { ProjectService } from '@Services/project.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([Project]), ProjectMilestoneModule, ProjectMemberModule],\n\tproviders: [ProjectService],\n\tcontrollers: [ProjectController],\n\texports: [ProjectService],\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectReport.html":{"url":"entities/ProjectReport.html","title":"entity - ProjectReport","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-report.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deliverables\n                            \n                            \n                                    \n                                hazards\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                objectives\n                            \n                            \n                                    \n                                other\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                reportDate\n                            \n                            \n                                    \n                                sequenceNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliverables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hazards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.reports, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sequenceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'sequence_number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('project_report')\nexport class ProjectReport extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'sequenceNumber', 'reportDate', 'deliverables', 'hazards', 'objectives', 'other'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'sequence_number' })\n\tsequenceNumber: number;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ type: 'mediumtext' })\n\tdeliverables: string;\n\n\t@Column({ type: 'mediumtext' })\n\thazards: string;\n\n\t@Column({ type: 'mediumtext' })\n\tobjectives: string;\n\n\t@Column({ type: 'mediumtext', nullable: true })\n\tother: Nullable;\n\n\t@ManyToOne(() => Project, (project) => project.reports, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectReportController.html":{"url":"controllers/ProjectReportController.html","title":"controller - ProjectReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/reports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { ProjectReport } from '@Entities/project-report';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectReportService } from '@Services/project-report.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/reports')\nexport class ProjectReportController {\n\tconstructor(private readonly projectReportService: ProjectReportService) {}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(ProjectReport)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectReport)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectReport)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.findOne(id, where, select, relations));\n\t}\n\n\t@Patch(':id')\n\tpatchOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.projectReportService.patchOne(id, payload),\n\t\t\t(result: boolean) => {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: result,\n\t\t\t\t};\n\t\t\t},\n\t\t) as Observable;\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.create(payload));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectReportModule.html":{"url":"modules/ProjectReportModule.html","title":"module - ProjectReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\ncluster_ProjectReportModule_exports\n\n\n\n\nProjectReportService \n\nProjectReportService \n\n\n\nProjectReportModule\n\nProjectReportModule\n\nProjectReportService  -->\n\nProjectReportModule->ProjectReportService \n\n\n\n\n\nProjectReportService\n\nProjectReportService\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectReportService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectReportController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectReportService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectReportController } from '@Controllers/project-report.controller';\nimport { ProjectReport } from '@Entities/project-report';\nimport { ProjectReportService } from '@Services/project-report.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectReport])],\n\tproviders: [ProjectReportService],\n\tcontrollers: [ProjectReportController],\n\texports: [ProjectReportService],\n})\nexport class ProjectReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectReportService.html":{"url":"injectables/ProjectReportService.html","title":"injectable - ProjectReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectReportRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-report.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectReportRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(partialReport: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialReport\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { ProjectReport } from '@Entities/project-report';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\n\n@Injectable()\nexport class ProjectReportService {\n\tconstructor(\n\t\t@InjectRepository(ProjectReport)\n\t\tprivate readonly projectReportRepository: Repository,\n\t) {}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectReportRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tasync patchOne(id: string, payload: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectReportRepository.update({ id }, payload);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tcreate(partialReport: DeepPartial): Promise {\n\t\tconst newReport = this.projectReportRepository.create(partialReport);\n\n\t\treturn newReport.save();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectRepository: Repository, milestoneService: ProjectMilestoneService, memberService: ProjectMemberService)\n                    \n                \n                        \n                            \n                                Defined in src/services/project.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        milestoneService\n                                                  \n                                                        \n                                                                        ProjectMilestoneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        ProjectMemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(project: DeepPartial, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(userId: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { DeleteProjectNotAllowedException } from '@Exceptions/delete-project-not-allowed.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { ProjectMemberService } from '@Services/project-member.service';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\n\n@Injectable()\nexport class ProjectService {\n\tconstructor(\n\t\t@InjectRepository(Project)\n\t\tprivate readonly projectRepository: Repository,\n\t\tprivate readonly milestoneService: ProjectMilestoneService,\n\t\tprivate readonly memberService: ProjectMemberService,\n\t) {}\n\n\tfindAll(\n\t\tuserId: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\tconst conditions: FindOptionsWhere[] = [];\n\n\t\tif (where.owner) {\n\t\t\tdelete where.owner;\n\t\t}\n\n\t\tif (where.members) {\n\t\t\tdelete where.members;\n\t\t}\n\n\t\tconditions.push({ owner: { id: userId } });\n\t\tconditions.push({ members: { user: { id: userId } } });\n\t\tconditions.push(where);\n\n\t\treturn this.projectRepository.find({ where: conditions, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectRepository.findOne({\n\t\t\trelations,\n\t\t\tselect,\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync create(project: DeepPartial, userId: string): Promise {\n\t\ttry {\n\t\t\tconst newProject = this.projectRepository.create({\n\t\t\t\t...project,\n\t\t\t\towner: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst createdProject = await newProject.save();\n\n\t\t\tif (project.milestones) {\n\t\t\t\tconst projectMilestones = await this.milestoneService.createAll(\n\t\t\t\t\tproject.milestones.map((milestone: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...milestone,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.milestones = projectMilestones;\n\t\t\t}\n\n\t\t\tif (project.members) {\n\t\t\t\tconst projectMembers = await this.memberService.createAll(\n\t\t\t\t\tproject.members.map((member: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...member,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.members = projectMembers;\n\t\t\t}\n\n\t\t\treturn createdProject;\n\t\t} catch (exception) {\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string, userId: string): Promise {\n\t\ttry {\n\t\t\tconst project = await this.findOne(\n\t\t\t\tid,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: {\n\t\t\t\t\t\tid: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\towner: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!project) {\n\t\t\t\tthrow new NotFoundException();\n\t\t\t}\n\n\t\t\tif (project.owner.id !== userId) throw new DeleteProjectNotAllowedException(null);\n\n\t\t\tawait project.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NotFoundException) throw exception;\n\t\t\tif (exception instanceof DeleteProjectNotAllowedException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjektarbeitAPI1723306279388.html":{"url":"classes/ProjektarbeitAPI1723306279388.html","title":"class - ProjektarbeitAPI1723306279388","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjektarbeitAPI1723306279388\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723306279388-ProjektarbeitAPI.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ProjektarbeitAPI1723306279388'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ProjektarbeitAPI1723306279388 implements MigrationInterface {\n\tname = 'ProjektarbeitAPI1723306279388';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`token_whitelist\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`access_token\\` varchar(255) NULL, \\`access_token_expiration_date\\` datetime NULL, \\`refresh_token\\` varchar(255) NULL, \\`refresh_token_expiration_date\\` datetime NULL, \\`userId\\` uuid NULL, UNIQUE INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` (\\`userId\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`user\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`academic_title\\` varchar(255) NULL, \\`matriculation_number\\` int NULL, \\`first_name\\` varchar(255) NULL, \\`last_name\\` varchar(255) NULL, \\`email\\` varchar(255) NOT NULL, \\`password\\` varchar(255) NOT NULL, \\`phone_number\\` varchar(255) NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_member\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`role\\` enum ('contributor', 'viewer') NOT NULL, \\`userId\\` uuid NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_report\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`sequence_number\\` int NOT NULL, \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`deliverables\\` mediumtext NOT NULL, \\`hazards\\` mediumtext NOT NULL, \\`objectives\\` mediumtext NOT NULL, \\`other\\` mediumtext NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE, \\`official_end\\` date NULL, \\`report_interval\\` int NOT NULL DEFAULT '7', \\`type\\` varchar(255) NULL, \\`ownerId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_milestone\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`milestone_estimate\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`estimation_date\\` date NOT NULL, \\`milestone_reached\\` tinyint NOT NULL, \\`milestoneId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \\`milestone_estimate\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_milestone\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_report\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_member\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`user\\``);\n\t\tawait queryRunner.query(`DROP INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` ON \\`token_whitelist\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`token_whitelist\\``);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/refresh-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/refresh-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/refresh-token.strategy.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     JwtFromRequestFunction\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, JwtFromRequestFunction, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { REFRESH_TOKEN_COOKIE } from '@Tokens/refresh-token-cookie';\nimport { Nullable } from '@Types/nullable';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n\tpublic static fromCookie(): JwtFromRequestFunction {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, REFRESH_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[REFRESH_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tRefreshTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_REFRESH_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Request, payload: JwtPayload) {\n\t\tlet refreshToken: Nullable = RefreshTokenStrategy.fromCookie()(request);\n\n\t\tif (!refreshToken) {\n\t\t\trefreshToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\t\t}\n\n\t\tconst verified = await this.tokenWhitelistService.verifyRefreshToken(payload.sub, refreshToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn {\n\t\t\t...payload,\n\t\t\trefreshToken,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{"url":"classes/RelocatedMilestoneReachedFlag1723758746739.html","title":"class - RelocatedMilestoneReachedFlag1723758746739","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RelocatedMilestoneReachedFlag1723758746739\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RelocatedMilestoneReachedFlag1723758746739'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RelocatedMilestoneReachedFlag1723758746739 implements MigrationInterface {\n\tname = 'RelocatedMilestoneReachedFlag1723758746739';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`ALTER TABLE \\`milestone_estimate\\` DROP COLUMN \\`milestone_reached\\``);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD \\`milestone_reached\\` tinyint NOT NULL DEFAULT false`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_1723758746739-ProjektarbeitAPImilestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(`ALTER TABLE \\`project_milestone\\` DROP COLUMN \\`milestone_reached\\``);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD \\`milestone_reached\\` tinyint NOT NULL`,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoredProcedureAndEvent1723306299388.html":{"url":"classes/StoredProcedureAndEvent1723306299388.html","title":"class - StoredProcedureAndEvent1723306299388","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoredProcedureAndEvent1723306299388\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723306299388-StoredProcedureAndEvent.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'StoredProcedureAndEvent1723306299388'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class StoredProcedureAndEvent1723306299388 implements MigrationInterface {\n\tname = 'StoredProcedureAndEvent1723306299388';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`\n      CREATE PROCEDURE IF NOT EXISTS RemoveExpiredTokens()\n      BEGIN\n        SET time_zone = 'Europe/Berlin';\n        DELETE FROM token_whitelist WHERE refresh_token_expiration_date  {\n\t\tawait queryRunner.query(`SET GLOBAL event_scheduler = OFF;`);\n\t\tawait queryRunner.query(`DROP EVENT IF EXISTS RemoveExpiredTokensEvent;`);\n\t\tawait queryRunner.query(`DROP PROCEDURE IF EXISTS RemoveExpiredTokens`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TokenWhitelist.html":{"url":"entities/TokenWhitelist.html","title":"entity - TokenWhitelist","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TokenWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/token-whitelist.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpirationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpirationDate\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token_expiration_date', type: 'datetime', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token_expiration_date', type: 'datetime', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn()@OneToOne(undefined, user => user.tokenPair, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, BeforeInsert, Column, Entity, JoinColumn, OneToOne } from 'typeorm';\n\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { User } from '@Entities/user';\n\n@Entity('token_whitelist')\nexport class TokenWhitelist extends BaseEntity {\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'access_token', nullable: true })\n\taccessToken: string;\n\n\t@Column({\n\t\tname: 'access_token_expiration_date',\n\t\ttype: 'datetime',\n\t\tnullable: true,\n\t})\n\taccessTokenExpirationDate: string;\n\n\t@Column({ name: 'refresh_token', nullable: true })\n\trefreshToken: string;\n\n\t@Column({\n\t\tname: 'refresh_token_expiration_date',\n\t\ttype: 'datetime',\n\t\tnullable: true,\n\t})\n\trefreshTokenExpirationDate: string;\n\n\t@JoinColumn()\n\t@OneToOne(() => User, (user) => user.tokenPair, { onDelete: 'CASCADE' })\n\tuser: User;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenWhitelistService.html":{"url":"injectables/TokenWhitelistService.html","title":"injectable - TokenWhitelistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenWhitelistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token-whitelist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                findByUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyAccessToken\n                            \n                            \n                                    Async\n                                verifyRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistRepository: Repository, date: DateService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/token-whitelist.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUser\n                        \n                    \n                \n            \n            \n                \nfindByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAccessToken(userId: string, accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeleteResult, Repository } from 'typeorm';\n\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport env from '@Environment';\nimport { CryptoService } from '@Services/crypto.service';\nimport { DateService } from '@Services/date.service';\n\nexport type TokenPairAndOwner = {\n\taccessToken: string;\n\trefreshToken: string;\n\tuserId: string;\n};\n\n@Injectable()\nexport class TokenWhitelistService {\n\tconstructor(\n\t\t@InjectRepository(TokenWhitelist)\n\t\tprivate readonly tokenWhitelistRepository: Repository,\n\t\tprivate readonly date: DateService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync update({ accessToken, refreshToken, userId }: TokenPairAndOwner): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry !== null) {\n\t\t\tawait this.tokenWhitelistRepository.remove(tokenWhitelistEntry);\n\t\t}\n\n\t\tconst accessTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.ACCESS_TOKEN_EXPIRATION,\n\t\t);\n\t\tconst refreshTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.REFRESH_TOKEN_EXPIRATION,\n\t\t);\n\n\t\tconst newRecord = this.tokenWhitelistRepository.create({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t\taccessToken,\n\t\t\taccessTokenExpirationDate,\n\t\t\trefreshToken,\n\t\t\trefreshTokenExpirationDate,\n\t\t});\n\n\t\tawait newRecord.save();\n\t}\n\n\tdelete(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.delete({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindByUser(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.findOne({\n\t\t\twhere: {\n\t\t\t\tuser: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync verifyAccessToken(userId: string, accessToken: string): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\t\tif (tokenWhitelistEntry.accessToken === null) return false;\n\t\tif (!this.date.isAfterCurrentTimestamp(tokenWhitelistEntry.accessTokenExpirationDate)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\n\t\treturn tokenWhitelistEntry.accessToken === hashedAccessToken;\n\t}\n\n\tasync verifyRefreshToken(userId: string, refreshToken: string): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\t\tif (tokenWhitelistEntry.refreshToken === null) return false;\n\t\tif (!this.date.isAfterCurrentTimestamp(tokenWhitelistEntry.refreshTokenExpirationDate)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hashedRefreshToken = this.crypto.hash(refreshToken);\n\n\t\treturn tokenWhitelistEntry.refreshToken === hashedRefreshToken;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedException.html":{"url":"classes/UnauthorizedException.html","title":"class - UnauthorizedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/unauthorized.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/unauthorized.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UnauthorizedException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.UNAUTHORIZED, 1, {\n\t\t\tmessage: 'Unauthorized',\n\t\t\tdescription: 'This request requires authorization provided by an access token.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                academicTitle\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                matriculationNumber\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                projects\n                            \n                            \n                                    \n                                tokenPair\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        academicTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'academic_title', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'first_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'last_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matriculationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'matriculation_number', nullable: true, type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'phone_number', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, project => project.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenPair\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenWhitelist\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, tokenWhitelist => tokenWhitelist.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, OneToMany, OneToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('user')\nexport class User extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tprojects: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['projects'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn [\n\t\t\t'id',\n\t\t\t'academicTitle',\n\t\t\t'matriculationNumber',\n\t\t\t'firstName',\n\t\t\t'lastName',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'phoneNumber',\n\t\t];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'academic_title', nullable: true, type: 'varchar' })\n\tacademicTitle: Nullable;\n\n\t@Column({ name: 'matriculation_number', nullable: true, type: 'int' })\n\tmatriculationNumber: Nullable;\n\n\t@Column({ name: 'first_name', nullable: true, type: 'varchar' })\n\tfirstName: Nullable;\n\n\t@Column({ name: 'last_name', nullable: true, type: 'varchar' })\n\tlastName: Nullable;\n\n\t@Column({ type: 'varchar' })\n\temail: string;\n\n\t@Column({ type: 'varchar' })\n\tpassword: string;\n\n\t@Column({ name: 'phone_number', nullable: true, type: 'varchar' })\n\tphoneNumber: Nullable;\n\n\t@OneToMany(() => Project, (project) => project.owner)\n\tprojects: Project[];\n\n\t@OneToOne(() => TokenWhitelist, (tokenWhitelist) => tokenWhitelist.user)\n\ttokenPair: TokenWhitelist;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAlreadyExistsException.html":{"url":"classes/UserAlreadyExistsException.html","title":"class - UserAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-already-exists.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UserAlreadyExistsException extends BaseException {\n\tconstructor(email: string, cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 4, {\n\t\t\tmessage: 'User already exists',\n\t\t\tdescription: `The provided email address (${email}) is already registered.`,\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deleteOne\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(payload: SearchBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('search')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SearchBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Post, UseGuards } from '@nestjs/common';\n\nimport { map, Observable, take } from 'rxjs';\nimport { FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { User as UserFromRequest } from '@Decorators/user.decorator';\nimport { User } from '@Entities/user';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { UserService } from '@Services/user.service';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\nimport { Success } from '@Types/success';\n\ntype SearchBody = {\n\tsearchTerm: string;\n};\n\n@UseGuards(AccessTokenGuard)\n@Controller('users')\nexport class UserController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(User)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(User)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(User)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.findAll(where, select, relations));\n\t}\n\n\t@Post('search')\n\tsearchAll(\n\t\t@Body()\n\t\tpayload: SearchBody,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.searchAll(payload.searchTerm)).pipe(\n\t\t\ttake(1),\n\t\t\tmap((users) => {\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tdelete user.email;\n\t\t\t\t\tdelete user.password;\n\t\t\t\t\tdelete user.phoneNumber;\n\t\t\t\t}\n\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t);\n\t}\n\n\t@Delete()\n\tdeleteOne(\n\t\t@UserFromRequest()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.delete(user['sub']), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDoesNotExistException.html":{"url":"classes/UserDoesNotExistException.html","title":"class - UserDoesNotExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDoesNotExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-does-not-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: Nullable, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-does-not-exist.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        Nullable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from '@Exceptions/base.exception';\nimport { Nullable } from '@Types/nullable';\n\nexport class UserDoesNotExistException extends BaseException {\n\tconstructor(email: Nullable, cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 5, {\n\t\t\tmessage: 'User does not exist',\n\t\t\tdescription: email\n\t\t\t\t? `There is no user present who goes by the provided email address (${email}).`\n\t\t\t\t: 'No user could be found by the given search criteria.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCryptoService\n\nCryptoService\n\nUserModule -->\n\nCryptoService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CryptoService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserController } from '@Controllers/user.controller';\nimport { User } from '@Entities/user';\nimport { CryptoService } from '@Services/crypto.service';\nimport { UserService } from '@Services/user.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([User])],\n\tproviders: [UserService, CryptoService],\n\tcontrollers: [UserController],\n\texports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByIdAndCredentials\n                            \n                            \n                                register\n                            \n                            \n                                searchAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIdAndCredentials\n                        \n                    \n                \n            \n            \n                \nfindByIdAndCredentials(id: string, where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchAll\n                        \n                    \n                \n            \n            \n                \nsearchAll(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { User } from '@Entities/user';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { UserDoesNotExistException } from '@Exceptions/user-does-not-exist.exception';\nimport { CryptoService } from '@Services/crypto.service';\nimport { Nullable } from '@Types/nullable';\n\n@Injectable()\nexport class UserService {\n\tconstructor(\n\t\t@InjectRepository(User)\n\t\tprivate readonly userRepository: Repository,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.userRepository.find({ where, select, relations });\n\t}\n\n\tsearchAll(searchTerm: string): Promise {\n\t\treturn this.userRepository\n\t\t\t.createQueryBuilder('u')\n\t\t\t.select()\n\t\t\t.where(\n\t\t\t\t\"LOWER(CONCAT(COALESCE(u.academic_title, ''), ' ', COALESCE(u.first_name, ''), ' ', COALESCE(u.last_name, ''))) LIKE :searchTerm\",\n\t\t\t\t{\n\t\t\t\t\tsearchTerm: `%${searchTerm.toLowerCase()}%`,\n\t\t\t\t},\n\t\t\t)\n\t\t\t.getMany();\n\t}\n\n\tfindByEmail(email: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ email });\n\t}\n\n\tfindById(id: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ id });\n\t}\n\n\tfindByIdAndCredentials(id: string, where: FindOptionsWhere = {}): Promise> {\n\t\tif (where.password) {\n\t\t\twhere.password = this.crypto.hash(where.password as string);\n\t\t}\n\n\t\treturn this.userRepository.findOneBy({ id, ...where });\n\t}\n\n\tregister(userData: DeepPartial): Promise {\n\t\tconst user = this.userRepository.create(userData);\n\n\t\treturn user.save();\n\t}\n\n\tasync update(id: string, payload: DeepPartial): Promise {\n\t\tconst user = await this.userRepository.findOneBy({ id });\n\n\t\tif (!user) {\n\t\t\tthrow new NotFoundException();\n\t\t}\n\n\t\tif (payload.password) {\n\t\t\tpayload.password = this.crypto.hash(payload.password);\n\t\t}\n\n\t\tfor (const attribute in payload) {\n\t\t\tuser[attribute] = payload[attribute];\n\t\t}\n\n\t\treturn user.save();\n\t}\n\n\tasync delete(id: string) {\n\t\ttry {\n\t\t\tconst user = await this.findById(id);\n\n\t\t\tif (!user) throw new UserDoesNotExistException(null, null);\n\n\t\t\tawait user.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof UserDoesNotExistException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidUUIDPipe.html":{"url":"classes/ValidUUIDPipe.html","title":"class - ValidUUIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidUUIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/valid-uuid.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/valid-uuid.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform } from '@nestjs/common';\n\nimport { InvalidUUIDFormatException } from '@Exceptions/invalid-uuid-format.exception';\n\nexport class ValidUUIDPipe implements PipeTransform {\n\ttransform(value: any): string {\n\t\tif (typeof value !== 'string') throw new InvalidUUIDFormatException(null);\n\n\t\tconst regex = /^([a-f0-9]){8}-([a-f0-9]){4}-([a-f0-9]){4}-([a-f0-9]){4}-([a-f0-9]){12}$/;\n\n\t\tif (!regex.test(value.toLowerCase())) throw new InvalidUUIDFormatException(null);\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/base-entity-with-extras.ts\n            \n            class\n            BaseEntityWithExtras\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/milestone-estimate.controller.ts\n            \n            controller\n            MilestoneEstimateController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project-member.controller.ts\n            \n            controller\n            ProjectMemberController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project-milestone.controller.ts\n            \n            controller\n            ProjectMilestoneController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/project-report.controller.ts\n            \n            controller\n            ProjectReportController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            Filters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            filtersFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            Includes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            includesFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/primary-generated-uuid.decorator.ts\n            \n            function\n            PrimaryGeneratedUUID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            SparseFieldsets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            sparseFieldsetsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/milestone-estimate.ts\n            \n            entity\n            MilestoneEstimate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-member.ts\n            \n            entity\n            ProjectMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-milestone.ts\n            \n            entity\n            ProjectMilestone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-report.ts\n            \n            entity\n            ProjectReport\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project.ts\n            \n            entity\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/token-whitelist.ts\n            \n            entity\n            TokenWhitelist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/user.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/bad-request.exception.ts\n            \n            class\n            BadRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/base.exception.ts\n            \n            class\n            BaseException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/delete-project-not-allowed.exception.ts\n            \n            class\n            DeleteProjectNotAllowedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/incorrect-credentials.exception.ts\n            \n            class\n            IncorrectCredentialsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/invalid-uuid-format.exception.ts\n            \n            class\n            InvalidUUIDFormatException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/no-affected-row.exception.ts\n            \n            class\n            NoAffectedRowException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/project-member-already-exists.exception.ts\n            \n            class\n            ProjectMemberAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/unauthorized.exception.ts\n            \n            class\n            UnauthorizedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-already-exists.exception.ts\n            \n            class\n            UserAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-does-not-exist.exception.ts\n            \n            class\n            UserDoesNotExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/access-token.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/refresh-token.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/json-api.interceptor.ts\n            \n            injectable\n            JsonApiInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1723306279388-ProjektarbeitAPI.ts\n            \n            class\n            ProjektarbeitAPI1723306279388\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1723306299388-StoredProcedureAndEvent.ts\n            \n            class\n            StoredProcedureAndEvent1723306299388\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts\n            \n            class\n            RelocatedMilestoneReachedFlag1723758746739\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pipes/valid-uuid.pipe.ts\n            \n            class\n            ValidUUIDPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/cookie.service.ts\n            \n            injectable\n            CookieService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/crypto.service.ts\n            \n            injectable\n            CryptoService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/services/date.service.ts\n            \n            variable\n            TIME_ZONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/milestone-estimate.service.ts\n            \n            injectable\n            MilestoneEstimateService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/project-member.service.ts\n            \n            injectable\n            ProjectMemberService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/project-milestone.service.ts\n            \n            injectable\n            ProjectMilestoneService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/project-report.service.ts\n            \n            injectable\n            ProjectReportService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/token-whitelist.service.ts\n            \n            injectable\n            TokenWhitelistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/strategies/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/strategies/refresh-token.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tokens/access-token-cookie.ts\n            \n            variable\n            ACCESS_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tokens/refresh-token-cookie.ts\n            \n            variable\n            REFRESH_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/promise-to-oberservable.ts\n            \n            function\n            promiseToObservable\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.0\n        \n            @nestjs/core : ^10.3.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.2.0\n        \n            dotenv : ^16.3.1\n        \n            luxon : ^3.4.4\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.1\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n        \n            typeorm-extension : ^3.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProjectRole   (src/.../project-member.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/entities/project-member.ts\n    \n        \n            \n                \n                    \n                        \n                        ProjectRole\n                    \n                \n                        \n                            \n                                 Contributor\n                            \n                        \n                        \n                            \n                                Value : contributor\n                            \n                        \n                        \n                            \n                                 Viewer\n                            \n                        \n                        \n                            \n                                Value : viewer\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PrimaryGeneratedUUID   (src/.../primary-generated-uuid.decorator.ts)\n                        \n                        \n                            promiseToObservable   (src/.../promise-to-oberservable.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(port: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/decorators/primary-generated-uuid.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PrimaryGeneratedUUID\n                        \n                    \n                \n            \n            \n                \nPrimaryGeneratedUUID(options: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n                        This decorator can be used on the property level of an entity.\nIt wraps the Column decorator from the typeorm package, which is being\ninitiated with the following default values\nExample :{\n   type: 'uuid',\n   default: () => 'UUID',\n   primary: true,\n   ...options,\n}The part ...options allows to provide any additional options, which can be\ndefined as a parameter of this decorator.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/promise-to-oberservable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        promiseToObservable\n                        \n                    \n                \n            \n            \n                \npromiseToObservable(promise$: Promise, successHandler?, errorHandler?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                promise$\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                successHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                errorHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_exports\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_exports\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_exports\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_exports\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_exports\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectMilestoneModule -->\n\nMilestoneEstimateModule->ProjectMilestoneModule\n\n\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nMilestoneEstimateService \n\nMilestoneEstimateService \n\nMilestoneEstimateService  -->\n\nMilestoneEstimateModule->MilestoneEstimateService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nProfileModule -->\n\nProjectMemberModule->ProfileModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectMemberModule->ProjectModule\n\n\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMemberService \n\nProjectMemberService \n\nProjectMemberService  -->\n\nProjectMemberModule->ProjectMemberService \n\n\n\nProjectModule -->\n\nProjectMilestoneModule->ProjectModule\n\n\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nMilestoneEstimateModule \n\nMilestoneEstimateModule \n\nMilestoneEstimateModule  -->\n\nProjectMilestoneModule->MilestoneEstimateModule \n\n\n\n\n\nProjectMilestoneService \n\nProjectMilestoneService \n\nProjectMilestoneService  -->\n\nProjectMilestoneModule->ProjectMilestoneService \n\n\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectService \n\nProjectService \n\nProjectService  -->\n\nProjectModule->ProjectService \n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nProjectReportService \n\nProjectReportService \n\nProjectReportService  -->\n\nProjectReportModule->ProjectReportService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nProjectMemberModule -->\n\nUserModule->ProjectMemberModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCookieService\n\nCookieService\n\nAuthenticationModule -->\n\nCookieService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\nUserModule -->\n\nCryptoService->UserModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\nMilestoneEstimateModule -->\n\nDateService->MilestoneEstimateModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nProjectReportService\n\nProjectReportService\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MilestoneEstimateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMemberModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMilestoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : ISC\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationPayload   (src/.../authentication.controller.ts)\n                        \n                        \n                            Environment   (src/.../environment.ts)\n                        \n                        \n                            JsonApiIncludes   (src/.../includes.decorator.ts)\n                        \n                        \n                            JwtPayload   (src/.../access-token.strategy.ts)\n                        \n                        \n                            JwtPayload   (src/.../refresh-token.strategy.ts)\n                        \n                        \n                            Nullable   (src/.../nullable.ts)\n                        \n                        \n                            Options   (src/.../base.exception.ts)\n                        \n                        \n                            RegisterPayload   (src/.../authentication.service.ts)\n                        \n                        \n                            RelationTypes   (src/.../base-entity-with-extras.ts)\n                        \n                        \n                            SearchBody   (src/.../user.controller.ts)\n                        \n                        \n                            Success   (src/.../success.ts)\n                        \n                        \n                            TokenPairAndOwner   (src/.../token-whitelist.service.ts)\n                        \n                        \n                            TokensResponse   (src/.../authentication.service.ts)\n                        \n                        \n                            TokensWithUserResponse   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/controllers/authentication.controller.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/environment.ts\n    \n    \n        \n            \n                \n                    \n                    Environment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/decorators/includes.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    JsonApiIncludes\n                \n            \n            \n                \n                        string[]\n\n                \n            \n        \n    \n    src/strategies/access-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/strategies/refresh-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/nullable.ts\n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    src/exceptions/base.exception.ts\n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/services/authentication.service.ts\n    \n    \n        \n            \n                \n                    \n                    RegisterPayload\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensWithUserResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/base-entity-with-extras.ts\n    \n    \n        \n            \n                \n                    \n                    RelationTypes\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/controllers/user.controller.ts\n    \n    \n        \n            \n                \n                    \n                    SearchBody\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/success.ts\n    \n    \n        \n            \n                \n                    \n                    Success\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/services/token-whitelist.service.ts\n    \n    \n        \n            \n                \n                    \n                    TokenPairAndOwner\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_COOKIE   (src/.../access-token-cookie.ts)\n                        \n                        \n                            Filters   (src/.../filters.decorator.ts)\n                        \n                        \n                            filtersFactory   (src/.../filters.decorator.ts)\n                        \n                        \n                            Includes   (src/.../includes.decorator.ts)\n                        \n                        \n                            includesFactory   (src/.../includes.decorator.ts)\n                        \n                        \n                            REFRESH_TOKEN_COOKIE   (src/.../refresh-token-cookie.ts)\n                        \n                        \n                            SparseFieldsets   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            sparseFieldsetsFactory   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            TIME_ZONE   (src/.../date.service.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            userFactory   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens/access-token-cookie.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-access_token'\n                    \n                \n\n\n        \n    \n\n    src/decorators/filters.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Filters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(filtersFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtersFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst where: FindOptionsWhere = {};\n\n\tconst assignPartialEqualFilters = (\n\t\tfilters: object,\n\t\tfields: string[],\n\t\tvalue: string,\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst field = fields[0];\n\t\tfields = fields.slice(1);\n\t\tconst properties = entity.getProperties();\n\n\t\tif (!properties.includes(field)) return;\n\n\t\tif (fields.length === 0) {\n\t\t\tfilters[field] = value;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfilters[field] = {\n\t\t\t...(filters[field] || {}),\n\t\t};\n\t\tassignPartialEqualFilters(filters[field], fields, value, entity.getRelationTypes()[field]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'filter')) {\n\t\tfor (const field in request.query.filter as { [field: string]: string }) {\n\t\t\tassignPartialEqualFilters(where, field.split('.'), request.query.filter[field], entity);\n\t\t}\n\t}\n\n\treturn where;\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/includes.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Includes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(includesFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includesFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst relations: FindOptionsRelations = {};\n\n\tconst assignPartialIncludes = (\n\t\trelations: object,\n\t\tincludes: string[],\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst include = includes[0];\n\t\tincludes = includes.slice(1);\n\t\tconst existingRelations = entity.getRelations();\n\n\t\tif (!existingRelations.includes(include)) return;\n\n\t\tif (includes.length === 0) {\n\t\t\trelations[include] = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\trelations[include] = {\n\t\t\t...(relations[include] || {}),\n\t\t};\n\t\tassignPartialIncludes(relations[include], includes, entity.getRelationTypes()[include]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'include')) {\n\t\tconst includes: string[] = [];\n\n\t\tif (Array.isArray(request.query.include)) {\n\t\t\tfor (const entry of request.query.include as string[]) {\n\t\t\t\tincludes.push(...entry.split(','));\n\t\t\t}\n\t\t} else {\n\t\t\tincludes.push(...(request.query.include as string).split(','));\n\t\t}\n\n\t\tfor (const include of includes) {\n\t\t\tassignPartialIncludes(relations, include.split('.'), entity);\n\t\t}\n\t}\n\n\treturn relations;\n}\n                    \n                \n\n\n        \n    \n\n    src/tokens/refresh-token-cookie.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-refresh_token'\n                    \n                \n\n\n        \n    \n\n    src/decorators/sparse-fieldsets.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SparseFieldsets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(sparseFieldsetsFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparseFieldsetsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst sparseFieldsets: FindOptionsSelect = {};\n\n\tconst assignPartialSparseFieldsets = (\n\t\tfieldsets: object,\n\t\ttables: string[],\n\t\tfields: string[],\n\t\tsubEntity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst table = tables[0];\n\t\ttables = tables.slice(1);\n\t\tfieldsets[table] = {\n\t\t\t...(fieldsets[table] || {}),\n\t\t};\n\t\tconst relations = subEntity.getRelationTypes();\n\n\t\tif (!(table in relations)) return;\n\n\t\tsubEntity = relations[table];\n\n\t\tif (tables.length === 0) {\n\t\t\tconst columns = subEntity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[table][field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets[table], tables, fields, subEntity);\n\t};\n\n\tconst assignSparseFieldsets = (fieldsets: object, table: string, fields: string[]) => {\n\t\tif (table === entity.name.toLowerCase()) {\n\t\t\tconst columns = entity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets, table.split('.'), fields, entity);\n\t};\n\n\tif (Object.hasOwn(request.query, 'fields')) {\n\t\tfor (const table in request.query.fields as {\n\t\t\t[table: string]: string | string[];\n\t\t}) {\n\t\t\tconst fields: string[] = [];\n\n\t\t\tif (Array.isArray(request.query.fields[table])) {\n\t\t\t\tfor (const entry of request.query.fields[table] as string[]) {\n\t\t\t\t\tfields.push(...entry.split(','));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfields.push(...(request.query.fields[table] as string).split(','));\n\t\t\t}\n\n\t\t\tassignSparseFieldsets(sparseFieldsets, table, fields);\n\t\t}\n\t}\n\n\treturn sparseFieldsets;\n}\n                    \n                \n\n\n        \n    \n\n    src/services/date.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TIME_ZONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Europe/Berlin'\n                    \n                \n\n\n        \n    \n\n    src/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(userFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (data: unknown, ctx: ExecutionContext) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\n\treturn request.user;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
