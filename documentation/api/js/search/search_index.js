var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.738,1,1.764]],["body/injectables/AccessTokenGuard.html",[0,1.308,1,3.127,2,2.099,3,0.242,4,0.242,5,0.215,6,4.987,7,4.472,8,1.915,9,5.882,10,0.285,11,0.016,12,0.546,13,4.987,14,3.525,15,0.242,16,0.151,17,0.014,18,0.014]],["title/injectables/AccessTokenStrategy.html",[0,0.738,19,2.516]],["body/injectables/AccessTokenStrategy.html",[0,1.003,2,1.384,3,0.16,4,0.16,5,0.142,8,1.468,10,0.303,11,0.017,12,0.36,14,2.325,15,0.16,16,0.099,17,0.011,18,0.011,19,3.418,20,4.965,21,2.696,22,4.51,23,4.614,24,0.503,25,1.191,26,3.037,27,5.536,28,1.823,29,4.044,30,1.027,31,3.29,32,3.741,33,0.563,34,3.29,35,0.761,36,0.556,37,0.462,38,0.761,39,3.29,40,1.141,41,5.146,42,4.415,43,0.981,44,3.29,45,2.671,46,4.965,47,3.29,48,2.696,49,3.418,50,3.29,51,2.696,52,3.29,53,3.29,54,2.95,55,2.494,56,2.325,57,2.696,58,2.696,59,3.696,60,3.29,61,2.181,62,2.696,63,2.523,64,2.054,65,2.95,66,1.841,67,2.325,68,1.286,69,1.816,70,3.29,71,3.29,72,3.806,73,1.942,74,1.165,75,2.95,76,3.29,77,3.29,78,3.806,79,3.29,80,3.29,81,3.29,82,3.29,83,1.325,84,3.29,85,4.538,86,3.806,87,3.29,88,1.384,89,4.51,90,1.587,91,3.806,92,1.749,93,1.515]],["title/classes/AllExceptionsFilter.html",[16,0.1,94,2.976]],["body/classes/AllExceptionsFilter.html",[3,0.183,4,0.183,5,0.162,10,0.267,11,0.016,12,0.413,15,0.183,16,0.114,17,0.012,18,0.012,24,0.577,25,1.305,30,1.544,33,0.541,35,0.835,36,0.609,37,0.444,38,0.835,40,0.955,74,1.751,88,2.462,94,4.433,95,1.519,96,5.514,97,3.772,98,3.493,99,6.378,100,3.653,101,4.364,102,7.21,103,3.085,104,3.274,105,4.364,106,5.718,107,6.378,108,6.768,109,4.364,110,3.254,111,5.718,112,4.943,113,2.005,114,3.772,115,2.666,116,2.501,117,4.364,118,4.364,119,4.364,120,4.364,121,6.378,122,2.355,123,4.364,124,4.364,125,5.718,126,3.772,127,4.364,128,4.364,129,4.364,130,4.364,131,4.364,132,3.772,133,4.364,134,3.772,135,4.364]],["title/modules/AppModule.html",[136,1.226,137,2.72]],["body/modules/AppModule.html",[3,0.17,4,0.17,5,0.151,10,0.32,11,0.017,12,0.384,15,0.17,16,0.106,17,0.011,18,0.011,73,2.068,136,1.964,137,5.583,138,1.773,139,1.773,140,1.96,141,1.96,142,1.773,143,1.96,144,1.96,145,3.504,146,3.504,147,4.627,148,4.314,149,4.627,150,4.046,151,4.314,152,4.627,153,4.627,154,3.811,155,2.633,156,1.96,157,1.96,158,4.053,159,2.778,160,2.188,161,1.474,162,6.148,163,0.85,164,6.148,165,4.053,166,3.504,167,3.504,168,4.053,169,4.053,170,4.766,171,3.142,172,3.504,173,4.053,174,2.871,175,4.053,176,4.053]],["title/controllers/AuthenticationController.html",[177,1.337,178,2.72]],["body/controllers/AuthenticationController.html",[1,1.316,3,0.12,4,0.12,5,0.107,10,0.303,11,0.017,12,0.271,15,0.12,16,0.075,17,0.009,18,0.009,24,0.379,25,0.972,30,0.773,33,0.532,35,0.821,36,0.6,37,0.467,38,0.821,40,1.231,43,0.652,45,2.346,51,2.03,55,1.877,56,1.75,59,2.03,60,2.476,61,2.44,62,3.017,66,1.386,68,1.31,74,1.304,83,2.493,88,1.549,103,1.386,104,2.06,115,1.75,116,1.863,132,6.026,177,0.997,178,3.017,179,0.997,180,2.221,181,1.546,182,2.864,183,4.393,184,4.393,185,4.393,186,3.94,187,2.864,188,4.864,189,7.237,190,2.14,191,4.258,192,2.864,193,3.372,194,2.864,195,4.465,196,2.864,197,2.864,198,1.689,199,2.864,200,2.864,201,2.864,202,2.864,203,4.362,204,4.258,205,2.864,206,2.743,207,1.641,208,1.546,209,1.386,210,2.03,211,1.546,212,2.298,213,2.03,214,2.864,215,3.105,216,2.221,217,2.476,218,2.03,219,2.476,220,3.068,221,4.258,222,1.546,223,2.458,224,1.546,225,1.546,226,1.877,227,2.864,228,2.864,229,5.082,230,2.864,231,2.476,232,3.674,233,4.258,234,4.258,235,5.627,236,5.627,237,5.627,238,5.627,239,5.627,240,4.258,241,4.258,242,4.258,243,4.258,244,1.546,245,2.864,246,2.864,247,1.641,248,4.258,249,1.75,250,2.864,251,2.864,252,2.864,253,2.864,254,2.864,255,2.864,256,2.79,257,2.864,258,2.864]],["title/modules/AuthenticationModule.html",[136,1.226,147,2.516]],["body/modules/AuthenticationModule.html",[3,0.166,4,0.166,5,0.147,10,0.321,11,0.017,12,0.375,14,2.42,15,0.166,16,0.103,17,0.011,18,0.011,19,4.596,32,3.786,57,2.807,58,2.807,104,3.393,115,2.42,136,1.941,138,1.733,139,1.733,140,1.916,141,1.916,142,1.733,143,2.94,144,2.94,147,5.138,154,3.786,155,2.593,156,1.916,157,1.916,159,2.736,160,2.138,161,1.441,174,2.807,178,4.306,179,1.867,215,4.643,217,3.425,259,3.425,260,3.425,261,3.962,262,3.425,263,3.579,264,4.596,265,3.962,266,5.361,267,3.962,268,3.071,269,3.962,270,2.42,271,3.071,272,3.071,273,2.596,274,3.962,275,5.361,276,3.962,277,3.962,278,3.962]],["title/injectables/AuthenticationService.html",[0,0.738,215,2.346]],["body/injectables/AuthenticationService.html",[0,0.695,2,0.84,3,0.097,4,0.097,5,0.086,10,0.281,11,0.017,12,0.219,15,0.211,16,0.06,17,0.007,18,0.007,24,0.305,25,0.825,28,2.165,30,0.975,32,3.267,33,0.573,35,0.883,36,0.645,37,0.512,38,0.883,40,1.267,43,1.15,55,1.514,56,1.411,57,1.637,58,1.637,65,2.801,66,3.186,68,1.097,69,1.258,74,1.541,81,1.997,85,3.87,88,2.515,90,2.883,92,2.662,93,2.306,100,1.247,116,2.881,163,0.484,183,3.124,184,3.124,185,3.124,186,3.45,198,1.766,203,3.902,215,2.208,216,1.791,226,3.795,256,4.105,263,2.568,268,1.791,273,1.514,279,1.791,280,3.614,281,4.451,282,2.31,283,2.955,284,6.053,285,2.916,286,2.31,287,3.614,288,2.31,289,4.219,290,2.179,291,3.614,292,2.31,293,3.614,294,2.31,295,3.614,296,2.31,297,2.31,298,2.31,299,2.31,300,3.902,301,2.31,302,2.31,303,2.099,304,1.791,305,1.179,306,1.117,307,1.324,308,1.324,309,1.514,310,1.997,311,1.997,312,1.637,313,1.997,314,1.514,315,1.997,316,1.514,317,3.124,318,3.124,319,4.451,320,2.31,321,3.614,322,2.31,323,3.614,324,1.619,325,2.31,326,6.439,327,2.31,328,2.31,329,4.451,330,2.31,331,2.56,332,1.997,333,3.614,334,2.31,335,2.31,336,2.31,337,2.31,338,2.31,339,4.451,340,4.451,341,3.124,342,2.31,343,5.034,344,3.124,345,1.997,346,2.31,347,1.997,348,2.31,349,1.324,350,1.791,351,3.614,352,3.614,353,3.614,354,1.997,355,1.997,356,1.997,357,1.997,358,2.31,359,3.124,360,1.997,361,2.31]],["title/classes/BadRequestException.html",[16,0.1,306,1.857]],["body/classes/BadRequestException.html",[3,0.223,4,0.223,5,0.198,8,1.825,10,0.272,11,0.016,12,0.504,15,0.223,16,0.139,17,0.013,18,0.013,30,1.437,33,0.504,35,0.777,36,0.567,37,0.414,38,0.777,42,3.253,95,1.854,113,2.447,249,3.253,306,3.137,357,4.603,362,5.606,363,4.603,364,3.059,365,3.716,366,5.325,367,3.137,368,3.253,369,3.253,370,2.576,371,5.325,372,2.329,373,5.325,374,5.325,375,5.325,376,4.603]],["title/classes/BaseEntityWithExtras.html",[16,0.1,377,1.857]],["body/classes/BaseEntityWithExtras.html",[3,0.191,4,0.191,5,0.17,8,1.656,10,0.191,11,0.016,15,0.247,16,0.119,17,0.012,18,0.012,24,0.603,25,1.343,26,3.961,33,0.651,37,0.354,40,1.506,43,1.137,67,4.205,68,1.382,95,1.587,163,0.956,377,3.151,378,5.523,379,2.276,380,3.534,381,5.631,382,3.944,383,6.883,384,3.944,385,3.944,386,4.559,387,4.559,388,4.559,389,4.559,390,3.516,391,3.941,392,3.534,393,4.559]],["title/classes/BaseException.html",[16,0.1,364,1.679]],["body/classes/BaseException.html",[3,0.209,4,0.209,5,0.186,8,1.755,10,0.209,11,0.016,12,0.473,15,0.209,16,0.13,17,0.013,18,0.013,30,1.348,33,0.473,35,0.729,36,0.532,37,0.484,38,0.729,43,0.955,75,3.872,95,1.739,112,5.875,113,3.271,134,6.153,364,2.727,367,3.287,370,3.287,372,2.973,394,3.872,395,6.234,396,6.796,397,4.815,398,2.549,399,5.517,400,4.995,401,4.318,402,4.995,403,4.995,404,2.549]],["title/injectables/CryptoService.html",[0,0.738,263,1.959]],["body/injectables/CryptoService.html",[0,1.259,2,1.97,3,0.227,4,0.275,5,0.201,10,0.275,11,0.016,12,0.512,15,0.227,16,0.141,17,0.013,18,0.013,24,0.716,25,1.495,33,0.512,35,0.79,36,0.577,37,0.421,38,0.79,40,1.184,43,1.148,68,1.087,263,3.343,285,4.293,405,4.68,406,6.551,407,6.551,408,5.414,409,4.68,410,5.414]],["title/injectables/DateService.html",[0,0.738,104,1.857]],["body/injectables/DateService.html",[0,0.594,2,0.69,3,0.08,4,0.08,5,0.071,10,0.129,11,0.017,12,0.18,15,0.08,16,0.05,17,0.006,18,0.006,24,0.251,25,0.705,29,2.394,33,0.469,35,0.657,36,0.48,37,0.385,38,0.657,40,1.357,43,1.087,61,3.042,68,0.904,74,1.196,83,1.075,88,2.463,93,1.972,103,3.667,104,2.568,116,1.708,122,1.024,126,5.921,247,1.77,249,1.159,372,2.639,401,3.891,404,0.968,411,1.471,412,1.229,413,3.905,414,3.089,415,4.501,416,3.089,417,3.089,418,3.089,419,1.898,420,5.361,421,5.31,422,5.834,423,4.501,424,4.501,425,6.585,426,7.19,427,6.347,428,5.777,429,4.501,430,6.683,431,2.67,432,1.889,433,5.044,434,4.501,435,3.891,436,4.501,437,4.501,438,6.202,439,5.834,440,4.501,441,2.67,442,5.31,443,5.834,444,6.347,445,6.347,446,5.31,447,3.089,448,3.089,449,3.089,450,4.501,451,3.089,452,4.501,453,4.501,454,4.501,455,4.501,456,4.501,457,4.339,458,3.089,459,1.898,460,5.31,461,4.839,462,3.089,463,3.089,464,1.898,465,3.089,466,2.67,467,3.089,468,3.089,469,4.501,470,4.501,471,2.394,472,3.089,473,3.089,474,1.898,475,3.089,476,3.089,477,4.501,478,0.872,479,3.089,480,3.089,481,5.31,482,4.501,483,2.67,484,1.898,485,3.089,486,3.089,487,3.089,488,3.089,489,3.089,490,1.471,491,1.641,492,1.345,493,1.471,494,3.089,495,2.579,496,1.641,497,1.898,498,1.898,499,1.898,500,1.898,501,4.954,502,1.898,503,1.898,504,1.898,505,1.898,506,1.898,507,1.898,508,3.089,509,4.501,510,5.834,511,1.898,512,1.898,513,1.898,514,1.898,515,1.898,516,1.898,517,1.898]],["title/classes/DeleteProjectNotAllowedException.html",[16,0.1,518,2.72]],["body/classes/DeleteProjectNotAllowedException.html",[3,0.221,4,0.221,5,0.196,8,1.816,10,0.271,11,0.016,12,0.5,15,0.221,16,0.138,17,0.013,18,0.013,30,1.426,33,0.5,35,0.771,36,0.563,37,0.41,38,0.771,95,1.839,113,2.427,198,1.367,249,3.226,364,3.048,365,3.697,367,3.121,370,2.554,372,2.31,518,4.572,519,5.578,520,2.708,521,4.565,522,5.281,523,4.094,524,5.281,525,6.452,526,5.281,527,3.742]],["title/classes/IncorrectCredentialsException.html",[16,0.1,309,2.516]],["body/classes/IncorrectCredentialsException.html",[3,0.223,4,0.223,5,0.198,8,1.825,10,0.272,11,0.016,12,0.504,15,0.223,16,0.139,17,0.013,18,0.013,30,1.437,33,0.504,35,0.777,36,0.567,37,0.414,38,0.777,66,2.576,95,1.854,113,2.447,226,3.489,309,4.249,364,3.059,365,3.716,367,3.137,368,3.253,369,3.253,370,2.576,372,2.329,457,4.128,528,5.606,529,4.603,530,5.325,531,5.325,532,5.325,533,5.325,534,4.128,535,5.325]],["title/classes/InvalidUUIDFormatException.html",[16,0.1,536,2.72]],["body/classes/InvalidUUIDFormatException.html",[3,0.221,4,0.221,5,0.196,8,1.813,10,0.27,11,0.016,12,0.498,15,0.221,16,0.138,17,0.013,18,0.013,30,1.422,33,0.498,35,0.769,36,0.561,37,0.409,38,0.769,95,1.834,113,2.42,249,3.218,364,3.044,365,3.691,367,3.116,370,2.547,372,2.304,432,2.547,523,4.083,536,4.564,537,5.569,538,4.252,539,4.553,540,5.267,541,5.267,542,5.569,543,6.442,544,5.267,545,5.267,546,5.267]],["title/injectables/JsonApiInterceptor.html",[0,0.738,547,2.976]],["body/injectables/JsonApiInterceptor.html",[0,1.181,2,1.776,3,0.205,4,0.205,5,0.182,10,0.258,11,0.017,12,0.462,15,0.205,16,0.127,17,0.013,18,0.013,24,0.645,25,1.403,33,0.462,35,0.712,36,0.52,37,0.379,38,0.712,40,1.068,68,1.35,69,2.139,98,2.982,193,3.253,209,2.361,398,2.491,547,4.764,548,5.312,549,4.22,550,6.145,551,6.145,552,6.102,553,6.725,554,7.059,555,4.881,556,4.881,557,6.145,558,4.22,559,4.22,560,4.881,561,4.22,562,4.881,563,6.102]],["title/entities/MilestoneEstimate.html",[379,1.226,564,2.072]],["body/entities/MilestoneEstimate.html",[3,0.165,4,0.165,5,0.147,8,1.111,10,0.273,11,0.017,15,0.165,16,0.103,17,0.011,18,0.011,24,0.521,26,3.095,28,1.208,33,0.615,36,0.57,37,0.566,43,1.116,68,1.218,69,1.374,103,3.145,163,0.827,190,2.473,290,1.26,377,2.586,379,1.708,382,2.261,384,2.261,385,2.261,390,2.886,398,2.013,412,2.128,478,2.457,483,4.622,564,2.886,565,2.13,566,5.874,567,3.411,568,6.501,569,1.83,570,4.28,571,5.62,572,3.266,573,4.622,574,3.945,575,3.095,576,3.945,577,3.467,578,2.585,579,5.347,580,3.266,581,2.886,582,3.945,583,3.788,584,3.503,585,3.945,586,3.475,587,3.095,588,3.503,589,2.41,590,2.41,591,2.261,592,2.013,593,2.261,594,1.315,595,3.945,596,3.063]],["title/controllers/MilestoneEstimateController.html",[177,1.337,597,2.72]],["body/controllers/MilestoneEstimateController.html",[1,1.742,3,0.159,4,0.159,5,0.141,10,0.307,11,0.017,12,0.359,15,0.159,16,0.099,17,0.011,18,0.011,24,0.501,25,1.187,33,0.562,35,0.867,36,0.633,37,0.462,38,0.867,40,1.3,43,1.06,45,2.887,68,1.345,73,1.934,74,1.161,163,0.795,177,1.32,179,1.32,181,2.046,190,2.26,193,3.543,206,3.206,207,3.404,208,2.046,209,1.834,211,2.046,212,2.046,220,3.419,222,2.046,223,1.834,224,2.046,225,2.046,244,2.046,303,2.956,324,2.326,495,2.172,564,2.046,569,1.8,597,3.686,598,5.527,599,3.277,600,3.791,601,2.73,602,2.599,603,2.484,604,3.791,605,1.934,606,3.686,607,3.791,608,1.934,609,3.179,610,3.791,611,2.316,612,2.484,613,2.484,614,3.031,615,2.316,616,2.316,617,3.404,618,2.939,619,2.939,620,3.791,621,3.791,622,3.179,623,3.791,624,3.791]],["title/modules/MilestoneEstimateModule.html",[136,1.226,148,2.346]],["body/modules/MilestoneEstimateModule.html",[3,0.2,4,0.2,5,0.177,10,0.31,11,0.016,12,0.452,15,0.2,16,0.125,17,0.012,18,0.012,104,3.572,115,2.916,136,2.126,138,2.088,139,2.088,140,2.309,141,2.309,142,2.088,143,3.219,144,3.219,148,4.682,155,2.93,156,2.309,157,2.309,159,2.435,160,2.576,161,1.736,179,2.109,564,2.576,597,4.716,612,3.127,613,3.127,617,4.476,618,3.7,619,3.7,625,4.126,626,4.126,627,4.126,628,4.773,629,4.773,630,4.773,631,4.773,632,4.773]],["title/injectables/MilestoneEstimateService.html",[0,0.738,617,2.2]],["body/injectables/MilestoneEstimateService.html",[0,0.918,2,1.221,3,0.141,4,0.141,5,0.125,10,0.287,11,0.017,12,0.318,15,0.141,16,0.088,17,0.01,18,0.01,24,0.444,25,1.091,28,2.182,30,1.29,33,0.574,35,0.885,36,0.646,37,0.471,38,0.885,40,1.217,43,1.02,68,1.117,74,1.463,83,1.664,88,2.024,90,2.32,92,3.061,93,2.413,100,2.579,103,3.099,104,2.933,110,3.398,115,2.051,116,2.09,122,3.273,161,1.221,163,0.704,290,2.127,303,2.858,304,2.602,306,1.624,307,1.923,308,1.923,324,2.024,349,2.738,404,2.438,564,2.579,569,1.804,601,2.196,602,2.09,605,2.438,608,2.438,612,2.199,613,2.199,617,2.738,633,5.539,634,2.902,635,3.357,636,3.474,637,3.357,638,4.779,639,4.779,640,3.357,641,4.779,642,3.357,643,4.296,644,3.357,645,1.923,646,3.004,647,2.199,648,1.923,649,2.199,650,3.357,651,2.902,652,3.357,653,5.565,654,3.357,655,5.565,656,3.357,657,2.902,658,3.357,659,3.357,660,3.357,661,4.779,662,3.131,663,2.919,664,3.357,665,4.779]],["title/classes/NoAffectedRowException.html",[16,0.1,646,2.072]],["body/classes/NoAffectedRowException.html",[3,0.216,4,0.216,5,0.191,8,1.786,10,0.266,11,0.016,12,0.486,15,0.216,16,0.134,17,0.013,18,0.013,30,1.388,33,0.486,35,0.75,36,0.548,37,0.493,38,0.75,42,3.141,95,1.79,110,2.623,113,2.362,364,3.012,365,3.636,367,3.07,368,3.141,369,3.141,370,2.487,372,2.249,376,4.444,646,3.426,648,4.232,666,5.486,667,4.444,668,5.141,669,5.141,670,5.141,671,6.347,672,5.141,673,5.141,674,5.141,675,5.141,676,4.444,677,5.141]],["title/controllers/ProfileController.html",[177,1.337,678,2.72]],["body/controllers/ProfileController.html",[1,1.61,3,0.147,4,0.147,5,0.13,10,0.315,11,0.017,12,0.331,15,0.147,16,0.091,17,0.01,18,0.01,24,0.463,25,1.124,33,0.539,35,0.831,36,0.607,37,0.443,38,0.831,40,1.246,43,1.034,45,2.577,63,1.694,64,1.89,68,1.393,73,1.787,74,1.072,83,1.219,92,1.61,93,1.394,163,0.734,177,1.219,179,1.219,181,1.89,190,2.166,193,3.425,195,4.035,198,1.942,206,2.658,208,1.89,209,1.694,210,2.482,211,1.89,212,1.89,220,2.906,222,1.89,223,1.694,224,1.89,225,1.89,244,1.89,247,2.007,283,2.906,303,2.577,305,1.787,309,2.295,310,3.028,311,3.028,316,2.295,324,1.791,331,3.489,332,3.028,495,2.007,569,1.739,609,3.009,611,2.14,614,2.906,615,2.14,616,2.14,622,3.009,678,3.489,679,3.028,680,3.502,681,5.696,682,5.696,683,5.696,684,3.502,685,3.502,686,3.502,687,2.84,688,3.818,689,3.502,690,3.502,691,3.502,692,2.007,693,2.295,694,3.502,695,3.502,696,3.502,697,3.502,698,3.502,699,3.502]],["title/modules/ProfileModule.html",[136,1.226,149,2.516]],["body/modules/ProfileModule.html",[3,0.213,4,0.213,5,0.189,10,0.3,11,0.016,12,0.48,15,0.213,16,0.133,17,0.013,18,0.013,136,2.186,138,2.219,139,2.219,140,2.454,141,2.454,142,2.219,143,3.045,144,2.454,149,5.034,150,4.297,154,4.048,155,3.045,156,2.454,157,2.454,159,3.212,170,3.933,171,3.933,174,3.594,179,2.192,678,4.849,700,5.073,701,5.073,702,5.073,703,5.073]],["title/entities/Project.html",[379,1.226,520,1.397]],["body/entities/Project.html",[3,0.127,4,0.127,5,0.113,8,0.853,10,0.286,11,0.017,15,0.127,16,0.079,17,0.009,18,0.009,24,0.401,26,2.68,28,0.928,33,0.669,36,0.708,37,0.588,43,1.082,63,3.111,64,1.636,68,1.054,69,1.055,83,2.013,103,2.797,163,0.635,190,2.687,198,1.72,290,0.968,305,1.546,377,2.147,379,1.418,382,1.736,384,1.736,385,1.736,390,2.396,397,3.145,398,1.546,412,1.767,478,2.657,520,1.615,527,4.361,565,1.636,569,1.628,570,3.209,572,3.209,575,2.68,577,3.14,578,1.986,580,2.712,581,2.396,584,2.909,586,3.009,587,3.39,588,2.909,589,1.851,590,1.851,591,1.736,592,1.546,593,1.736,594,1.751,596,2.543,704,2.62,705,5.32,706,6.155,707,5.782,708,5.782,709,5.782,710,6.155,711,3.031,712,3.322,713,4.071,714,3.009,715,4.439,716,3.031,717,4.439,718,3.031,719,3.031,720,3.837,721,3.031,722,3.441,723,3.031,724,4.439,725,3.031,726,3.837,727,3.441,728,3.031,729,3.526,730,3.721,731,4.439,732,3.031,733,3.031,734,3.031,735,4.482,736,3.031]],["title/controllers/ProjectController.html",[177,1.337,737,2.72]],["body/controllers/ProjectController.html",[1,1.375,3,0.125,4,0.125,5,0.111,10,0.306,11,0.017,12,0.283,15,0.125,16,0.078,17,0.009,18,0.009,24,0.396,25,1.004,33,0.58,35,0.894,36,0.653,37,0.476,38,0.894,40,1.34,43,1.061,45,2.67,68,1.329,73,1.527,74,0.916,163,0.627,177,1.042,179,1.042,181,1.616,190,2.329,193,3.53,195,4.909,198,1.889,206,2.815,207,2.988,208,1.616,209,1.448,210,2.121,211,1.616,212,1.616,220,2.661,222,1.616,223,1.448,224,1.616,225,1.616,232,3.512,244,1.616,303,2.76,324,2.091,495,1.715,520,1.089,569,1.802,594,0.998,601,2.396,602,2.281,603,1.961,605,1.527,606,3.116,608,1.527,609,2.687,611,1.829,614,2.933,615,1.829,616,1.829,622,3.186,687,3.041,688,3.41,692,1.715,693,1.961,737,3.116,738,2.587,739,2.587,740,3.186,741,3.186,742,2.993,743,2.993,744,1.961,745,3.464,746,3.201,747,3.284,748,3.201,749,2.993,750,1.829,751,2.993,752,2.993,753,1.829,754,2.121,755,1.829,756,2.121,757,2.121,758,3.186,759,2.587,760,2.993,761,4.398,762,4.398,763,4.398,764,2.993,765,2.993,766,2.993,767,4.398,768,2.993,769,2.993]],["title/entities/ProjectMember.html",[379,1.226,712,2.072]],["body/entities/ProjectMember.html",[3,0.16,4,0.16,5,0.142,8,1.078,10,0.282,11,0.017,15,0.22,16,0.1,17,0.011,18,0.011,24,0.506,26,3.047,28,1.172,33,0.608,37,0.522,43,0.983,68,1.199,69,1.333,163,0.802,190,2.442,198,1.956,290,1.223,305,1.953,377,2.534,379,1.673,382,2.193,384,2.193,385,2.193,390,2.827,398,1.953,412,2.085,520,2.749,565,2.066,569,1.807,575,3.047,578,3.432,580,3.922,581,3.465,586,3.421,587,2.673,588,3.913,589,2.339,590,2.339,591,2.193,592,1.953,593,2.193,594,1.276,596,3.001,712,2.827,770,4.406,771,2.968,772,5.55,773,3.828,774,4.528,775,3.828,776,5.812,777,2.968,778,5.812,779,3.828,780,5.238,781,3.828,782,4.06,783,4.06,784,3.828]],["title/classes/ProjectMemberAlreadyExistsException.html",[16,0.1,785,2.72]],["body/classes/ProjectMemberAlreadyExistsException.html",[3,0.214,4,0.214,5,0.19,8,1.778,10,0.265,11,0.016,12,0.483,15,0.214,16,0.133,17,0.013,18,0.013,30,1.377,33,0.483,35,0.744,36,0.543,37,0.396,38,0.744,69,1.776,93,2.03,95,1.776,110,2.602,113,2.344,198,1.32,314,4.698,364,3.001,365,3.619,367,3.055,368,3.116,369,3.116,370,2.467,372,2.231,520,2.496,714,4.222,785,4.475,786,5.46,787,3.954,788,4.409,789,5.1,790,3.954,791,5.1,792,5.1,793,3.954]],["title/controllers/ProjectMemberController.html",[177,1.337,794,2.72]],["body/controllers/ProjectMemberController.html",[1,1.61,3,0.147,4,0.147,5,0.13,10,0.309,11,0.017,12,0.331,15,0.147,16,0.091,17,0.01,18,0.01,24,0.463,25,1.124,30,0.945,33,0.539,35,0.831,36,0.607,37,0.443,38,0.831,40,1.246,43,1.034,45,2.816,68,1.393,74,1.508,116,2.154,163,0.734,177,1.219,179,1.219,181,1.89,190,2.166,193,3.528,198,1.475,206,3.074,207,3.263,208,1.89,209,1.694,211,1.89,212,1.89,220,2.906,222,1.89,223,2.755,224,1.89,225,1.89,232,3.775,244,1.89,283,2.906,303,2.893,305,1.787,316,2.295,324,2.369,331,2.482,495,2.007,569,1.739,594,1.168,601,2.617,602,2.491,603,2.295,605,1.787,606,3.489,608,1.787,609,3.009,611,2.14,614,2.906,615,2.14,616,2.14,622,3.009,712,2.658,714,2.007,794,3.489,795,4.378,796,3.028,797,3.502,798,3.502,799,3.502,800,3.502,801,3.502,802,3.263,803,2.007,804,2.715,805,3.502,806,3.502,807,3.502,808,3.502,809,3.502,810,3.502,811,3.502,812,3.502]],["title/modules/ProjectMemberModule.html",[136,1.226,150,2.2]],["body/modules/ProjectMemberModule.html",[3,0.196,4,0.196,5,0.174,10,0.313,11,0.016,12,0.443,15,0.196,16,0.122,17,0.012,18,0.012,136,2.107,138,2.047,139,2.047,140,2.264,141,2.264,142,2.047,143,3.19,144,3.19,150,4.376,154,3.966,155,2.894,156,2.264,157,2.264,159,3.053,160,2.526,161,1.703,174,3.316,179,2.083,520,2.177,594,1.995,712,2.526,714,2.682,794,4.673,802,4.464,803,2.682,804,3.628,813,4.046,814,4.046,815,4.046,816,4.68,817,3.628,818,4.68,819,3.628,820,4.68,821,4.68]],["title/injectables/ProjectMemberService.html",[0,0.738,802,2.2]],["body/injectables/ProjectMemberService.html",[0,0.81,2,1.028,3,0.119,4,0.119,5,0.105,10,0.28,11,0.017,12,0.268,15,0.119,16,0.074,17,0.009,18,0.009,24,0.374,25,0.962,28,2.09,30,1.138,33,0.593,35,0.915,36,0.668,37,0.487,38,0.915,40,1.308,43,1.045,68,1.259,74,1.291,83,1.468,88,2.281,90,2.494,92,3.069,93,2.496,100,2.276,110,3.2,116,1.844,122,2.276,161,1.028,163,0.593,198,0.732,290,2.22,303,2.898,306,1.367,307,1.62,308,1.62,314,1.852,315,2.444,324,1.534,349,2.416,350,2.191,404,1.442,520,2.033,527,2.003,569,1.956,594,1.406,601,1.938,602,1.844,605,2.151,608,2.151,636,3.723,643,3.961,645,1.62,646,2.276,647,1.852,648,1.62,649,1.852,662,1.852,663,2.576,687,2.569,712,3.017,714,3.203,741,3.081,745,2.852,746,2.704,747,2.704,748,2.704,750,1.727,785,3.573,802,2.416,822,4.603,823,2.444,824,3.645,825,2.827,826,4.359,827,2.827,828,4.216,829,4.216,830,2.827,831,2.827,832,4.216,833,2.827,834,2.827,835,2.827,836,2.827,837,2.827,838,3.909,839,2.827,840,2.827,841,2.444,842,2.827,843,2.827,844,4.216,845,4.216,846,4.216,847,2.827,848,4.216,849,4.216,850,2.827,851,2.003,852,2.827,853,2.987,854,2.444,855,2.827]],["title/entities/ProjectMilestone.html",[379,1.226,577,1.959]],["body/entities/ProjectMilestone.html",[3,0.158,4,0.158,5,0.14,8,1.061,10,0.28,11,0.017,15,0.158,16,0.098,17,0.011,18,0.011,24,0.498,26,3.022,28,1.154,33,0.633,36,0.713,37,0.55,43,1.058,68,1.189,69,1.312,163,0.79,190,2.543,247,2.159,290,1.204,377,2.506,379,1.655,382,2.159,384,2.159,385,2.159,390,2.797,398,1.923,412,2.063,471,4.944,478,2.381,520,2.742,564,3.609,565,2.034,569,1.795,572,2.302,575,3.022,577,2.644,578,2.469,580,3.166,581,2.797,586,3.393,587,3.254,588,3.396,589,2.302,590,2.302,591,2.159,592,1.923,593,2.159,594,1.257,596,2.969,612,2.469,613,3.881,713,2.921,735,4.017,770,4.528,856,3.258,857,5.78,858,5.513,859,5.182,860,3.769,861,3.769,862,4.017,863,3.769,864,3.769,865,4.48,866,3.769,867,3.769]],["title/controllers/ProjectMilestoneController.html",[177,1.337,868,2.72]],["body/controllers/ProjectMilestoneController.html",[1,1.548,3,0.141,4,0.141,5,0.125,10,0.31,11,0.017,12,0.319,15,0.141,16,0.088,17,0.01,18,0.01,24,0.445,25,1.093,33,0.575,35,0.886,36,0.647,37,0.472,38,0.886,40,1.328,43,1.021,45,2.78,68,1.339,73,1.719,74,1.031,163,0.706,177,1.173,179,1.173,181,1.818,190,2.31,193,3.54,206,3.009,207,3.194,208,1.818,209,1.629,211,1.818,212,1.818,220,2.845,222,1.818,223,1.629,224,1.818,225,1.818,232,3.71,244,1.818,303,2.86,324,2.209,495,1.93,569,1.709,570,2.058,577,1.719,594,1.123,601,2.562,602,2.439,603,2.207,605,1.719,606,3.394,608,1.719,609,2.927,611,2.058,614,2.845,615,2.058,616,2.058,622,2.927,687,2.791,692,1.93,693,2.207,740,3.406,744,2.207,745,3.099,746,2.937,747,2.937,748,2.937,753,2.058,754,2.386,755,2.058,756,2.386,757,2.386,795,4.546,803,1.93,868,3.394,869,2.912,870,3.368,871,3.368,872,3.368,873,3.368,874,3.368,875,3.194,876,2.611,877,3.368,878,3.368,879,3.368,880,3.368,881,3.368,882,3.368,883,3.368,884,3.368]],["title/modules/ProjectMilestoneModule.html",[136,1.226,151,2.346]],["body/modules/ProjectMilestoneModule.html",[3,0.195,4,0.195,5,0.173,10,0.307,11,0.016,12,0.44,15,0.195,16,0.121,17,0.012,18,0.012,136,2.1,138,2.033,139,2.033,140,2.248,141,2.248,142,2.033,143,3.179,144,3.179,148,4.755,151,4.697,155,2.881,156,2.248,157,2.248,159,3.039,160,2.508,161,1.69,166,4.017,167,4.017,179,2.074,570,2.839,577,2.371,594,1.549,803,2.662,817,3.602,819,3.602,868,4.657,875,4.459,876,3.602,885,4.017,886,4.017,887,4.017,888,4.647,889,4.647,890,4.647,891,4.647]],["title/injectables/ProjectMilestoneService.html",[0,0.738,875,2.2]],["body/injectables/ProjectMilestoneService.html",[0,0.752,2,0.932,3,0.107,4,0.107,5,0.095,10,0.272,11,0.017,12,0.242,15,0.107,16,0.067,17,0.008,18,0.008,24,0.338,25,0.893,28,2.033,30,1.056,33,0.595,35,0.917,36,0.67,37,0.488,38,0.917,40,1.321,43,1.017,45,1.632,68,1.383,74,1.198,83,1.851,88,2.286,90,2.519,92,2.775,93,2.117,100,2.112,110,3.082,116,1.712,122,2.112,161,0.932,163,0.537,247,3.047,290,2.232,303,2.873,306,1.893,307,1.467,308,1.467,324,2.084,349,2.242,350,1.985,404,1.997,564,1.382,569,1.907,570,2.902,577,2.423,594,0.854,602,1.712,605,1.997,608,1.997,612,1.678,613,2.564,617,3.047,618,1.985,619,1.985,636,3.047,643,3.767,645,1.467,646,2.112,647,1.678,648,1.467,649,1.678,651,3.383,657,3.383,662,1.678,663,2.391,687,2.887,740,2.902,741,2.902,744,1.678,745,3.306,746,3.039,747,3.134,748,3.039,750,1.565,822,4.591,824,3.383,851,1.815,853,2.773,854,2.214,857,3.383,858,3.383,875,2.242,892,2.214,893,3.913,894,2.561,895,4.749,896,2.561,897,3.913,898,3.913,899,2.561,900,2.561,901,3.913,902,2.561,903,2.561,904,2.561,905,2.561,906,2.561,907,2.561,908,2.561,909,2.561,910,2.561,911,2.561,912,2.561,913,2.561,914,3.913,915,2.561,916,5.317,917,5.317,918,3.913,919,2.561,920,2.561,921,3.913,922,2.561,923,2.561,924,2.561,925,2.561,926,2.561,927,2.561,928,2.561,929,2.561]],["title/modules/ProjectModule.html",[136,1.226,152,2.516]],["body/modules/ProjectModule.html",[3,0.194,4,0.194,5,0.172,10,0.312,11,0.016,12,0.438,15,0.194,16,0.121,17,0.012,18,0.012,136,2.095,138,2.023,139,2.023,140,2.237,141,2.237,142,2.023,143,3.172,144,3.172,150,4.196,151,4.474,152,5.068,155,2.872,156,2.237,157,2.237,159,3.03,160,2.496,161,1.682,170,4.603,171,3.585,172,3.998,179,2.067,520,1.682,594,1.542,737,4.647,758,4.752,759,3.998,930,3.998,931,4.625,932,3.998,933,3.998,934,4.625,935,4.625,936,4.625]],["title/entities/ProjectReport.html",[379,1.226,729,2.2]],["body/entities/ProjectReport.html",[3,0.143,4,0.143,5,0.127,8,0.961,10,0.27,11,0.017,15,0.143,16,0.089,17,0.01,18,0.01,24,0.451,26,2.867,28,1.046,33,0.666,36,0.516,37,0.585,43,1.135,63,3.12,64,1.844,68,1.128,69,1.189,83,1.685,103,2.34,163,0.716,190,2.676,290,1.091,377,2.34,379,1.546,382,1.957,384,1.957,385,1.957,390,2.612,397,3.428,398,1.743,412,1.926,478,2.224,520,2.696,565,1.844,569,1.72,571,5.283,572,2.956,575,2.867,578,2.238,580,2.956,581,2.612,583,3.428,584,3.17,586,3.219,587,3.514,588,3.17,589,2.087,590,2.087,591,1.957,592,1.743,593,1.957,594,1.139,596,2.772,729,2.772,770,4.689,777,4.737,937,2.953,938,5.283,939,5.283,940,5.283,941,6.111,942,6.083,943,3.416,944,3.416,945,3.416,946,3.416,947,3.416,948,4.838,949,3.416,950,3.416,951,4.183,952,3.416,953,3.416]],["title/controllers/ProjectReportController.html",[177,1.337,954,2.72]],["body/controllers/ProjectReportController.html",[1,1.636,3,0.149,4,0.149,5,0.132,10,0.313,11,0.017,12,0.337,15,0.149,16,0.093,17,0.01,18,0.01,24,0.471,25,1.137,33,0.544,35,0.839,36,0.612,37,0.446,38,0.839,40,1.257,43,1.039,45,2.831,68,1.25,73,1.817,74,1.09,163,0.746,177,1.24,179,1.24,181,1.922,190,2.186,193,3.439,206,3.102,207,3.293,208,1.922,209,1.722,211,1.922,212,1.922,220,2.542,222,1.922,223,2.41,224,1.922,225,1.922,232,3.044,244,1.922,303,2.906,471,2.76,495,2.04,569,1.752,594,1.187,601,2.641,603,2.333,609,3.044,611,2.175,614,2.932,615,2.175,616,2.175,622,3.044,687,2.86,688,3.862,692,2.04,693,2.333,729,2.04,730,2.523,741,3.511,745,3.176,746,3.011,747,3.011,748,3.011,750,2.175,753,2.175,754,2.523,755,2.175,756,2.523,757,2.523,795,4.41,803,2.04,954,3.53,955,3.078,956,3.56,957,4.968,958,3.56,959,3.56,960,3.078,961,3.56,962,3.511,963,3.078,964,3.56,965,3.56,966,3.56,967,3.56,968,3.56,969,3.56,970,3.56]],["title/modules/ProjectReportModule.html",[136,1.226,153,2.516]],["body/modules/ProjectReportModule.html",[3,0.207,4,0.207,5,0.183,10,0.306,11,0.016,12,0.467,15,0.207,16,0.129,17,0.013,18,0.013,136,2.158,138,2.157,139,2.157,140,2.385,141,2.385,142,2.157,143,3.268,144,3.268,153,4.951,155,2.991,156,2.385,157,2.385,159,2.516,160,2.662,161,1.794,179,2.153,594,1.644,729,2.825,730,3.494,803,2.825,817,3.822,819,3.822,954,4.787,962,4.793,963,4.263,971,4.263,972,4.263,973,4.263,974,4.931,975,4.931,976,4.931]],["title/injectables/ProjectReportService.html",[0,0.738,962,2.346]],["body/injectables/ProjectReportService.html",[0,0.983,2,1.345,3,0.155,4,0.155,5,0.137,10,0.288,11,0.017,12,0.35,15,0.155,16,0.097,17,0.01,18,0.01,24,0.489,25,1.167,28,1.795,30,1.38,33,0.599,35,0.923,36,0.674,37,0.491,38,0.923,40,1.282,43,1.052,45,2.638,68,1.177,74,1.132,83,1.287,88,1.86,90,1.542,92,2.694,93,2.035,100,1.995,110,2.991,116,1.617,122,1.995,161,1.345,163,0.775,290,2.194,303,2.936,306,1.788,307,2.118,308,2.118,349,2.118,404,1.886,569,1.869,594,1.232,601,2.35,636,3.624,645,2.118,646,2.76,647,2.422,648,2.118,649,2.422,662,2.422,663,2.258,687,2.907,729,2.118,730,2.619,741,3.582,745,3.228,746,3.06,747,3.06,748,3.06,750,2.258,822,4.705,851,2.619,853,3.623,957,4.42,960,4.42,962,3.124,977,3.196,978,3.697,979,3.697,980,5.113,981,5.113,982,3.697,983,3.697,984,3.697,985,3.697,986,3.697,987,3.697,988,3.697,989,3.697,990,3.697,991,3.697]],["title/injectables/ProjectService.html",[0,0.738,758,2.346]],["body/injectables/ProjectService.html",[0,0.713,2,0.868,3,0.1,4,0.1,5,0.089,10,0.284,11,0.017,12,0.226,15,0.1,16,0.062,17,0.008,18,0.008,24,0.315,25,0.846,28,1.991,30,1.001,33,0.556,35,0.857,36,0.626,37,0.456,38,0.857,40,1.214,43,1.116,68,1.23,74,1.391,83,1.784,88,2.229,90,2.448,92,2.989,93,2.337,100,2.453,110,3.319,116,1.988,122,2.453,161,0.868,163,0.5,198,0.618,289,4.505,290,2.124,303,2.712,306,1.155,307,1.368,308,1.368,324,1.864,349,2.604,404,1.218,518,2.627,520,2.304,527,3.63,569,1.961,570,2.265,577,1.218,594,1.515,601,1.704,602,1.622,605,1.892,608,1.892,636,2.936,643,3.63,645,1.368,646,2.001,647,1.564,648,1.368,649,1.564,662,1.564,663,2.777,687,2.911,705,2.064,712,1.289,714,2.124,740,2.777,741,2.777,745,3.232,746,2.964,747,3.063,748,2.964,750,1.458,758,2.265,774,2.064,802,2.936,803,2.124,804,1.851,826,3.205,838,3.523,841,2.064,851,1.691,853,2.627,865,2.064,875,2.936,876,1.851,992,2.064,993,2.387,994,4.545,995,4.545,996,2.387,997,3.707,998,2.387,999,2.387,1000,2.387,1001,2.387,1002,2.387,1003,2.387,1004,2.387,1005,2.387,1006,3.707,1007,3.707,1008,3.707,1009,3.707,1010,2.387,1011,2.387,1012,2.387,1013,2.387,1014,2.387,1015,3.707,1016,2.387,1017,3.707,1018,2.387,1019,2.387,1020,3.707,1021,2.387,1022,3.707,1023,2.387,1024,2.387,1025,2.387,1026,2.387,1027,2.387,1028,2.387,1029,2.387,1030,2.387]],["title/classes/ProjektarbeitAPI1723306279388.html",[16,0.1,1031,2.976]],["body/classes/ProjektarbeitAPI1723306279388.html",[3,0.095,4,0.095,5,0.084,10,0.095,11,0.016,15,0.095,16,0.059,17,0.007,18,0.007,24,0.58,25,0.81,28,1.757,33,0.415,35,0.518,36,0.64,37,0.386,38,0.518,40,0.777,43,0.346,66,1.093,67,3.505,69,2.71,90,3.166,95,0.786,98,2.169,103,2.614,163,0.473,198,0.919,226,1.48,289,3.542,290,1.588,324,2.183,412,1.413,432,1.093,478,3.117,490,2.752,520,1.809,538,4.494,569,1.96,573,1.953,581,3.24,583,2.516,584,2.874,601,2.758,602,2.625,720,1.953,722,1.751,726,1.953,727,1.751,772,1.953,778,1.953,782,1.751,783,1.751,793,4.653,862,1.751,938,1.953,939,1.953,940,1.953,942,4.298,951,1.953,1031,3.854,1032,4.298,1033,1.953,1034,3.401,1035,2.752,1036,2.752,1037,2.259,1038,2.752,1039,4.957,1040,2.259,1041,2.752,1042,2.259,1043,5.702,1044,5.363,1045,4.19,1046,1.751,1047,6.672,1048,1.953,1049,1.751,1050,1.751,1051,2.259,1052,3.551,1053,5.188,1054,6.359,1055,6.002,1056,1.953,1057,1.953,1058,3.792,1059,1.953,1060,1.953,1061,1.953,1062,4.96,1063,4.96,1064,4.298,1065,3.069,1066,4.298,1067,4.298,1068,1.953,1069,3.069,1070,6.02,1071,5.188,1072,3.069,1073,6.02,1074,5.188,1075,3.792,1076,5.188,1077,3.069,1078,3.069,1079,3.792,1080,3.069,1081,3.069,1082,3.069,1083,3.069,1084,1.953,1085,5.188,1086,5.374]],["title/injectables/RefreshTokenGuard.html",[0,0.738,213,2.72]],["body/injectables/RefreshTokenGuard.html",[0,1.303,2,2.086,3,0.24,4,0.24,5,0.213,7,4.446,8,1.909,9,5.861,10,0.284,11,0.016,12,0.543,13,4.958,14,3.504,15,0.24,16,0.15,17,0.014,18,0.014,213,4.804,1087,4.958,1088,5.861]],["title/injectables/RefreshTokenStrategy.html",[0,0.738,264,2.516]],["body/injectables/RefreshTokenStrategy.html",[0,0.996,2,1.371,3,0.158,4,0.158,5,0.14,8,1.459,10,0.302,11,0.017,12,0.357,14,2.302,15,0.158,16,0.098,17,0.011,18,0.011,21,2.67,22,4.48,23,4.591,24,0.498,25,1.183,26,3.022,27,5.513,28,1.813,29,4.017,30,1.017,31,3.258,32,3.729,33,0.56,34,3.258,35,0.756,36,0.552,37,0.46,38,0.756,39,3.258,40,1.134,41,5.12,42,4.405,43,0.977,44,3.258,45,2.66,46,4.944,47,3.258,48,2.67,49,3.396,50,3.258,51,2.67,52,3.258,53,3.258,54,2.921,55,2.469,56,2.302,57,2.67,58,2.67,61,2.159,62,2.67,63,2.506,64,2.034,65,2.921,66,1.823,67,2.302,68,1.28,69,1.804,70,3.258,71,3.258,73,1.923,74,1.154,75,2.921,76,3.258,77,3.258,79,3.258,80,3.258,82,3.258,83,1.312,84,3.258,87,3.258,88,1.371,89,4.48,90,1.572,92,1.732,93,1.5,218,3.671,219,3.258,256,4.381,264,3.396,355,3.258,1088,4.48,1089,4.944,1090,3.769,1091,3.769,1092,3.769,1093,3.769]],["title/classes/RelocatedMilestoneReachedFlag1723758746739.html",[16,0.1,1094,2.976]],["body/classes/RelocatedMilestoneReachedFlag1723758746739.html",[3,0.074,4,0.074,5,0.066,10,0.074,11,0.016,15,0.074,16,0.046,17,0.006,18,0.006,24,0.233,25,0.664,28,1.57,33,0.351,35,0.425,36,0.508,37,0.288,38,0.425,40,0.637,43,0.27,67,3.134,69,2.471,90,3.228,95,0.614,98,1.778,103,2.481,163,0.37,198,0.753,247,1.011,289,2.823,290,1.376,324,2.386,412,1.158,432,0.853,478,3.262,520,2.063,538,4.475,569,2.062,581,3.54,583,4.017,584,2.433,587,1.485,602,2.869,722,3.339,793,5.221,862,3.339,1034,2.878,1035,2.256,1036,2.256,1038,2.256,1039,4.555,1041,2.256,1043,5.985,1044,5.485,1045,3.976,1054,6.331,1062,5.232,1063,4.434,1064,4.901,1065,2.515,1066,4.69,1067,5.232,1068,2.515,1069,2.515,1070,6.674,1071,5.67,1072,3.724,1073,6.331,1074,5.67,1075,4.434,1076,5.67,1077,3.724,1078,3.724,1079,4.434,1080,3.724,1081,3.724,1082,3.724,1083,3.724,1084,2.515,1085,5.822,1094,3.339,1095,3.724,1096,1.525,1097,1.764,1098,1.764,1099,1.764,1100,2.91,1101,6.997,1102,3.713,1103,1.764,1104,1.764]],["title/classes/StoredProcedureAndEvent1723306299388.html",[16,0.1,1105,2.976]],["body/classes/StoredProcedureAndEvent1723306299388.html",[3,0.188,4,0.188,5,0.167,10,0.188,11,0.016,15,0.188,16,0.117,17,0.012,18,0.012,24,0.594,25,1.331,28,2.172,33,0.612,35,0.851,36,0.756,37,0.503,38,0.851,40,1.275,43,0.688,67,4.334,90,2.855,95,1.565,98,3.562,163,0.942,290,2.067,324,1.635,412,2.321,432,2.174,478,2.066,492,3.185,493,3.485,601,2.066,790,5.016,1034,5.016,1035,4.519,1036,4.519,1038,3.485,1039,5.814,1041,4.519,1043,3.485,1045,3.485,1050,3.485,1086,5.04,1105,5.307,1106,5.918,1107,3.886,1108,4.496,1109,4.496,1110,4.496,1111,5.83,1112,5.83,1113,4.496,1114,4.496,1115,4.496,1116,4.496,1117,4.496,1118,4.496,1119,4.496]],["title/entities/TokenWhitelist.html",[270,2.346,379,1.226]],["body/entities/TokenWhitelist.html",[3,0.161,4,0.161,5,0.143,8,1.084,10,0.251,11,0.016,15,0.161,16,0.101,17,0.011,18,0.011,24,0.509,28,1.179,33,0.658,36,0.686,37,0.578,43,1.138,63,3.505,69,1.341,83,2.523,85,4.244,163,0.807,190,2.645,198,1.903,256,3.925,270,3.213,290,1.23,305,1.965,379,1.23,381,4.547,398,1.965,412,2.094,490,4.989,565,2.079,569,1.686,572,3.932,575,3.056,580,3.213,581,2.839,586,3.432,587,3.438,591,2.207,592,1.965,593,2.207,596,3.014,1046,4.077,1048,4.547,1049,4.077,1050,4.077,1120,6.154,1121,3.329,1122,5.178,1123,5.178,1124,3.851,1125,3.851,1126,3.851,1127,3.851,1128,3.851,1129,3.851,1130,5.259,1131,3.851,1132,5.259,1133,4.547,1134,3.851]],["title/injectables/TokenWhitelistService.html",[0,0.738,32,2.072]],["body/injectables/TokenWhitelistService.html",[0,0.835,2,1.071,3,0.123,4,0.123,5,0.109,10,0.276,11,0.017,12,0.279,15,0.182,16,0.077,17,0.009,18,0.009,24,0.389,25,0.991,28,2.112,30,1.173,32,2.345,33,0.602,35,0.929,36,0.678,37,0.511,38,0.929,40,1.33,43,1.168,55,1.928,56,1.798,68,1.409,69,2.117,74,1.581,85,4.509,88,2.458,90,2.536,103,2.498,104,2.758,115,1.798,116,2.259,161,1.071,163,0.617,198,1.337,247,3.646,256,4.17,263,2.909,270,1.798,271,2.281,272,2.281,273,1.928,285,3.383,289,4.52,290,2.241,300,4.419,304,2.281,324,1.58,341,5.501,344,2.544,345,3.755,354,2.544,356,2.544,359,3.755,360,2.544,569,1.453,602,2.259,636,3.267,645,1.686,1122,3.755,1123,3.755,1135,5.103,1136,2.281,1137,4.344,1138,4.344,1139,4.344,1140,2.943,1141,2.943,1142,4.344,1143,4.344,1144,2.943,1145,4.344,1146,2.943,1147,2.943,1148,2.943,1149,4.344,1150,2.943,1151,4.344,1152,2.943,1153,2.943,1154,5.163,1155,2.943,1156,4.344,1157,2.943,1158,2.943,1159,2.943,1160,2.943,1161,2.943,1162,4.344,1163,2.943,1164,2.943,1165,4.344]],["title/classes/UnauthorizedException.html",[16,0.1,49,2.516]],["body/classes/UnauthorizedException.html",[3,0.224,4,0.224,5,0.199,8,1.832,10,0.273,11,0.016,12,0.507,15,0.224,16,0.14,17,0.013,18,0.013,30,1.445,33,0.507,35,0.781,36,0.571,37,0.416,38,0.781,42,3.271,49,4.264,61,3.068,95,1.864,113,2.461,249,3.271,364,3.066,365,3.728,367,3.147,368,3.271,370,2.59,372,2.342,435,4.628,466,4.628,1166,4.628,1167,5.354,1168,5.354,1169,5.354,1170,5.354,1171,4.15]],["title/entities/User.html",[198,0.994,379,1.226]],["body/entities/User.html",[3,0.129,4,0.129,5,0.115,8,0.868,10,0.271,11,0.017,15,0.129,16,0.081,17,0.009,18,0.009,24,0.408,26,2.707,28,0.944,33,0.671,36,0.66,37,0.598,43,1.048,63,3.712,64,1.664,66,2.82,68,1.065,69,1.074,83,2.47,163,0.646,190,2.698,198,1.164,226,3.82,270,3.953,271,2.39,272,2.39,290,0.985,377,2.174,379,1.436,382,1.767,384,1.767,385,1.767,390,2.426,398,1.573,412,1.789,520,2.43,565,1.664,569,1.641,572,3.787,575,2.707,586,3.04,587,3.493,589,1.884,590,1.884,591,1.767,592,1.573,593,1.767,594,1.028,596,2.576,713,2.39,735,3.485,739,5.358,777,3.485,1056,3.886,1057,3.886,1058,3.886,1059,3.886,1060,3.886,1061,3.886,1133,3.886,1172,2.666,1173,5.83,1174,5.83,1175,5.83,1176,5.83,1177,5.83,1178,5.305,1179,7.269,1180,3.084,1181,3.084,1182,3.084,1183,3.084,1184,3.084,1185,3.084,1186,3.084,1187,3.084,1188,4.495,1189,3.084,1190,3.084,1191,4.495,1192,3.084,1193,3.084]],["title/classes/UserAlreadyExistsException.html",[16,0.1,312,2.72]],["body/classes/UserAlreadyExistsException.html",[3,0.217,4,0.217,5,0.193,8,1.795,10,0.267,11,0.016,12,0.49,15,0.217,16,0.135,17,0.013,18,0.013,30,1.399,33,0.49,35,0.756,36,0.552,37,0.403,38,0.756,43,1.058,66,3.342,95,1.804,113,2.381,198,1.342,312,4.519,314,4.724,364,3.022,367,3.487,368,3.166,369,3.166,370,2.507,372,2.267,534,4.017,787,4.017,788,4.48,790,4.017,1171,4.017,1194,4.944,1195,5.514,1196,5.182,1197,5.182]],["title/controllers/UserController.html",[177,1.337,1198,2.72]],["body/controllers/UserController.html",[1,1.639,3,0.15,4,0.15,5,0.133,10,0.313,11,0.017,12,0.338,15,0.15,16,0.093,17,0.01,18,0.01,24,0.471,25,1.138,33,0.544,35,0.839,36,0.613,37,0.484,38,0.839,40,1.258,43,0.546,45,2.08,68,1.316,73,1.82,74,1.092,88,1.298,163,0.748,177,1.242,179,1.242,181,1.925,190,2.188,193,3.441,195,4.075,198,1.697,206,2.692,207,2.044,208,1.925,209,1.725,210,2.527,211,1.925,212,1.925,220,2.545,222,1.925,223,1.725,224,1.925,225,1.925,232,3.047,244,1.925,283,2.935,305,1.82,316,2.337,324,2.471,331,2.527,347,3.084,558,3.084,559,3.084,561,3.084,687,2.863,692,2.044,693,2.337,740,3.514,744,2.337,745,3.178,746,3.013,747,3.013,748,3.013,753,2.179,754,2.527,755,2.179,756,2.527,757,2.527,1198,3.534,1199,2.765,1200,5.752,1201,5.752,1202,4.972,1203,3.567,1204,3.567,1205,3.567,1206,3.567,1207,5.385,1208,4.988,1209,3.567,1210,4.988,1211,3.084,1212,3.567,1213,3.567,1214,3.567,1215,3.567,1216,3.567,1217,3.567,1218,3.567,1219,3.567,1220,3.567]],["title/classes/UserDoesNotExistException.html",[16,0.1,1221,2.72]],["body/classes/UserDoesNotExistException.html",[3,0.211,4,0.211,5,0.187,8,1.763,10,0.286,11,0.016,12,0.476,15,0.211,16,0.131,17,0.013,18,0.013,30,1.359,33,0.476,35,0.735,36,0.536,37,0.391,38,0.735,63,3.452,64,2.717,66,3.452,95,1.753,113,2.313,198,1.766,364,2.983,367,3.452,369,3.075,370,2.435,372,2.202,457,3.902,523,3.902,534,3.902,1171,3.902,1194,4.856,1195,5.415,1221,4.438,1222,4.351,1223,5.034,1224,5.034,1225,5.034,1226,5.034,1227,5.034,1228,5.034,1229,5.034,1230,5.034]],["title/modules/UserModule.html",[136,1.226,154,2.072]],["body/modules/UserModule.html",[3,0.202,4,0.202,5,0.179,10,0.31,11,0.016,12,0.456,15,0.202,16,0.126,17,0.012,18,0.012,136,2.136,138,2.109,139,2.109,140,2.332,141,2.332,142,2.109,143,3.234,144,3.234,154,4.144,155,2.949,156,2.332,157,2.332,159,2.46,160,2.602,161,1.754,179,2.123,198,1.248,263,3.777,273,3.159,283,3.991,305,2.46,316,3.159,1198,4.738,1231,4.167,1232,4.167,1233,4.167,1234,4.82,1235,4.82,1236,4.82]],["title/injectables/UserService.html",[0,0.738,283,1.959]],["body/injectables/UserService.html",[0,0.791,2,0.995,3,0.115,4,0.115,5,0.102,10,0.277,11,0.017,12,0.259,15,0.115,16,0.071,17,0.008,18,0.008,24,0.361,25,0.939,28,1.896,30,1.11,33,0.64,35,0.987,36,0.721,37,0.526,38,0.987,40,1.446,43,1.147,45,2.293,48,1.938,63,1.323,64,1.476,66,1.989,68,1.327,69,0.952,74,1.259,83,0.952,88,2,90,2.062,92,2.527,93,1.968,100,1.476,110,2.522,116,1.799,122,1.476,161,0.995,163,0.573,186,3.188,198,1.604,231,2.364,263,2.806,273,1.792,283,2.099,285,3.239,290,2.313,303,2.68,305,1.395,306,1.323,307,1.567,308,1.567,313,2.364,318,2.364,324,1.496,349,1.567,432,1.323,478,1.257,569,1.809,602,1.799,605,2.099,608,2.099,636,3.151,645,1.567,663,1.671,687,2.953,740,3.02,744,1.792,745,3.008,746,2.66,747,2.66,748,2.66,838,3.188,1202,3.556,1211,4.273,1221,2.914,1237,2.364,1238,4.113,1239,4.113,1240,4.113,1241,2.735,1242,2.735,1243,4.113,1244,2.735,1245,2.735,1246,4.113,1247,2.735,1248,4.113,1249,2.735,1250,4.113,1251,2.735,1252,4.113,1253,2.735,1254,4.113,1255,2.735,1256,2.735,1257,2.735,1258,2.735,1259,2.735,1260,2.735,1261,2.735,1262,2.735,1263,2.735,1264,2.735,1265,2.735,1266,2.735,1267,5.499,1268,2.735,1269,2.735,1270,2.735,1271,2.735,1272,4.113,1273,2.735,1274,2.735,1275,2.735,1276,2.735,1277,2.735,1278,2.735,1279,2.735,1280,2.735]],["title/classes/ValidUUIDPipe.html",[16,0.1,614,1.959]],["body/classes/ValidUUIDPipe.html",[3,0.21,4,0.21,5,0.187,10,0.262,11,0.016,12,0.475,15,0.21,16,0.131,17,0.013,18,0.013,24,0.664,25,1.427,33,0.475,35,0.733,36,0.535,37,0.39,38,0.733,40,1.098,43,1.043,68,1.008,88,1.826,92,2.874,93,2.49,95,1.748,98,3.821,392,3.892,432,3.295,496,4.34,536,3.557,538,3.067,614,3.191,1281,5.407,1282,4.34,1283,6.812,1284,6.254,1285,6.254,1286,5.021,1287,5.021,1288,5.021,1289,6.254,1290,7.336,1291,5.021,1292,6.812,1293,5.021,1294,5.021]],["title/coverage.html",[1295,4.537]],["body/coverage.html",[0,1.397,1,1.222,5,0.099,6,2.299,7,3.122,11,0.016,16,0.191,17,0.008,18,0.008,19,1.743,20,2.062,21,2.853,32,1.436,37,0.207,49,1.743,59,1.884,61,2.308,93,1.059,94,2.062,96,2.299,97,2.299,104,1.286,142,1.163,177,2.283,178,1.884,180,2.062,198,1.043,213,1.884,215,1.625,218,1.884,223,1.286,263,1.357,264,1.743,270,1.625,279,2.062,283,1.357,306,1.286,309,1.743,312,1.884,314,2.639,362,2.299,363,2.299,364,1.163,377,1.286,378,2.062,379,2.094,380,2.062,394,2.062,404,4.082,405,2.299,411,3.122,420,4.202,492,1.884,518,1.884,519,2.299,520,1.465,521,2.299,528,2.299,529,2.299,536,1.884,537,2.299,538,1.625,539,2.299,547,2.062,548,2.299,549,2.299,564,1.436,566,2.299,567,2.299,575,1.357,577,1.357,592,1.357,597,1.884,598,2.299,599,2.299,614,1.357,617,1.524,633,2.299,634,2.299,646,1.436,648,1.524,666,2.299,667,2.299,678,1.884,679,2.299,692,1.524,704,2.299,712,1.436,714,1.524,729,1.524,737,1.884,738,2.299,753,1.625,755,1.625,758,1.625,770,3.185,771,2.062,785,1.884,786,2.299,787,3.122,794,1.884,795,3.444,796,2.299,802,1.524,822,3.444,823,2.299,856,2.299,868,1.884,869,2.299,875,1.524,892,2.299,937,2.299,954,1.884,955,2.299,962,1.625,977,2.299,992,2.299,1031,2.062,1032,2.299,1033,2.299,1044,1.884,1087,2.299,1089,2.062,1094,2.062,1095,2.299,1096,2.299,1105,2.062,1106,2.299,1107,2.299,1120,2.299,1121,2.299,1135,2.062,1136,2.062,1166,2.299,1172,2.299,1194,3.122,1198,1.884,1199,2.062,1221,1.884,1222,2.299,1237,2.299,1281,2.299,1282,2.299,1295,2.299,1296,2.66,1297,2.66,1298,2.66,1299,5.825,1300,6.843,1301,2.66,1302,3.482,1303,6.953,1304,7.564,1305,2.299,1306,3.122,1307,2.299,1308,2.299,1309,2.299,1310,2.66,1311,2.66,1312,3.482,1313,3.482,1314,2.299,1315,3.482,1316,2.299,1317,7.13,1318,2.66,1319,2.299,1320,4.027,1321,2.66,1322,2.66,1323,4.861,1324,2.66,1325,2.299,1326,3.482,1327,2.299,1328,2.299,1329,2.299,1330,2.66]],["title/dependencies.html",[139,2.021,1331,2.482]],["body/dependencies.html",[11,0.016,12,0.498,14,3.218,17,0.013,18,0.013,23,4.083,51,3.732,54,4.994,62,3.732,114,4.553,139,2.304,161,1.916,163,1.35,209,2.547,268,4.083,285,3.451,409,4.553,491,4.553,1332,6.959,1333,5.267,1334,5.267,1335,5.267,1336,5.267,1337,5.267,1338,5.267,1339,5.267,1340,5.267,1341,5.267,1342,5.267,1343,5.267,1344,5.267,1345,5.267,1346,5.267,1347,5.267,1348,5.267,1349,5.267,1350,5.267,1351,5.267,1352,5.267,1353,5.267]],["title/miscellaneous/enumerations.html",[1354,1.728,1355,3.994]],["body/miscellaneous/enumerations.html",[11,0.015,17,0.014,18,0.014,24,0.783,432,3.344,770,3.885,771,5.359,776,5.977,782,5.359,783,5.359,1354,3.2,1355,5.125,1356,5.929]],["title/miscellaneous/functions.html",[1354,1.728,1357,3.994]],["body/miscellaneous/functions.html",[11,0.016,17,0.012,18,0.012,24,0.628,33,0.449,35,0.969,36,0.708,37,0.543,38,0.969,40,1.321,83,1.654,142,2.642,163,0.996,193,2.297,223,2.921,290,2.121,379,1.517,391,4.106,397,4.279,399,5.417,428,4.106,431,4.106,432,2.297,433,4.106,441,4.106,478,3.052,538,3.69,542,4.106,575,3.082,587,2.423,592,3.082,676,4.106,1053,4.106,1308,4.106,1309,5.221,1319,4.106,1328,4.106,1329,5.221,1331,3.682,1354,2.564,1357,4.106,1358,4.749,1359,4.749,1360,4.749,1361,4.749,1362,4.749,1363,4.749,1364,6.039,1365,6.641,1366,4.749,1367,4.749,1368,4.749,1369,4.749,1370,4.749,1371,4.749,1372,4.749,1373,4.749,1374,4.749,1375,6.039,1376,6.039,1377,6.039]],["title/index.html",[24,0.507,1378,3.319]],["body/index.html",[2,1.256,11,0.016,17,0.01,18,0.01,19,3.703,32,3.05,95,1.202,104,2.97,136,1.103,137,5.45,138,1.51,139,1.51,140,1.67,141,1.67,142,1.51,143,1.67,144,1.67,145,2.985,146,2.985,147,5.041,148,4.573,149,4.527,150,4.167,151,4.443,152,4.765,153,4.404,154,3.97,155,2.358,156,1.67,157,1.67,179,1.202,215,4.221,259,2.985,260,2.985,262,2.985,263,3.133,264,3.703,283,3.525,565,1.863,617,3.958,625,2.985,626,2.985,627,2.985,727,2.676,758,4.221,802,3.958,813,2.985,814,2.985,815,2.985,875,3.958,885,2.985,886,2.985,887,2.985,930,2.985,932,2.985,933,2.985,962,4.221,971,2.985,972,2.985,973,2.985,1231,2.985,1232,2.985,1233,2.985,1378,2.985,1379,3.452,1380,3.452,1381,3.452,1382,3.452]],["title/modules.html",[138,2.296]],["body/modules.html",[11,0.013,17,0.013,18,0.013,137,3.858,138,2.382,147,3.568,148,3.326,149,3.568,150,3.12,151,3.326,152,3.568,153,3.568,154,2.939,1383,7.836,1384,7.836,1385,7.836,1386,7.836]],["title/properties.html",[412,1.839,1331,2.482]],["body/properties.html",[11,0.016,17,0.014,18,0.014,372,2.642,412,2.404,1387,6.04,1388,6.04,1389,6.04,1390,6.04,1391,6.04]],["title/miscellaneous/typealiases.html",[1354,1.728,1392,4.62]],["body/miscellaneous/typealiases.html",[11,0.014,17,0.012,18,0.012,20,3.737,21,4.978,24,0.637,37,0.605,43,0.738,46,5.447,56,3.725,63,2.949,69,1.678,180,3.737,188,5.27,203,4.726,216,4.726,220,3.111,279,3.737,300,4.726,317,5.27,378,3.737,379,1.948,380,4.726,390,3.291,394,3.737,399,4.726,1089,3.737,1135,3.737,1136,4.726,1199,3.737,1207,5.27,1306,3.737,1354,2.602,1393,4.82,1394,4.82,1395,4.82,1396,6.097,1397,4.167,1398,4.167,1399,4.167,1400,4.82,1401,4.82,1402,6.687,1403,4.82,1404,4.82,1405,4.82,1406,4.82,1407,7.735,1408,4.82,1409,4.82,1410,4.82,1411,4.82]],["title/miscellaneous/variables.html",[1354,1.728,1412,3.994]],["body/miscellaneous/variables.html",[11,0.017,17,0.008,18,0.008,24,0.331,37,0.364,42,3.209,43,1.132,48,1.772,59,2.723,61,3.009,68,1.375,83,1.63,88,2.786,198,0.995,218,2.723,377,2.894,379,2.054,392,4.638,404,2.388,411,1.939,412,0.996,432,3.442,461,4.54,478,3.148,492,2.723,493,1.939,552,4.54,563,2.162,687,1.15,692,2.682,746,1.21,747,2.741,748,1.21,753,3.807,755,3.209,1044,4.415,1046,1.939,1049,1.939,1302,2.162,1305,3.322,1306,1.939,1307,3.322,1312,2.162,1313,4.046,1314,3.322,1315,2.162,1316,3.322,1325,2.162,1326,4.54,1327,2.162,1354,1.35,1397,3.322,1398,2.162,1399,2.162,1412,2.162,1413,3.843,1414,3.843,1415,2.501,1416,3.843,1417,3.843,1418,2.501,1419,5.252,1420,5.252,1421,2.501,1422,6.951,1423,5.668,1424,2.501,1425,2.501,1426,2.501,1427,2.501,1428,2.501,1429,4.68,1430,2.501,1431,2.501,1432,4.68,1433,2.501,1434,2.501,1435,2.501,1436,2.501,1437,2.501,1438,2.501,1439,2.501,1440,4.68,1441,2.501,1442,2.501,1443,2.501,1444,2.501,1445,2.501,1446,2.501,1447,4.68,1448,2.501,1449,2.501,1450,2.501,1451,3.843,1452,2.501,1453,2.501,1454,2.501,1455,3.843,1456,2.501,1457,2.501,1458,2.501,1459,2.501,1460,3.843,1461,4.68,1462,4.68,1463,2.501,1464,2.501,1465,3.843,1466,2.501,1467,2.501,1468,2.501,1469,3.843,1470,2.501,1471,3.843,1472,3.843,1473,2.501,1474,2.501,1475,2.501,1476,2.501,1477,2.501,1478,2.501,1479,2.501,1480,2.501,1481,2.501,1482,2.501,1483,2.501,1484,2.501,1485,2.501,1486,2.501,1487,2.501,1488,2.501]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":404,"title":{},"body":{"classes/BaseException.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.2.1",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":448,"title":{},"body":{"injectables/DateService.html":{}}}],["1",{"_index":249,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BadRequestException.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/UnauthorizedException.html":{}}}],["1.0.0",{"_index":1388,"title":{},"body":{"properties.html":{}}}],["1.4.6",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["10.0.1",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":482,"title":{},"body":{"injectables/DateService.html":{}}}],["15",{"_index":1381,"title":{},"body":{"index.html":{}}}],["15:37:28",{"_index":449,"title":{},"body":{"injectables/DateService.html":{}}}],["16",{"_index":1382,"title":{},"body":{"index.html":{}}}],["16.3.1",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":531,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["2.18.1",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":447,"title":{},"body":{"injectables/DateService.html":{}}}],["24",{"_index":480,"title":{},"body":{"injectables/DateService.html":{}}}],["3",{"_index":669,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["3.4.4",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":438,"title":{},"body":{"injectables/DateService.html":{}}}],["30m",{"_index":454,"title":{},"body":{"injectables/DateService.html":{}}}],["4",{"_index":1196,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["4.0.1",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1224,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["5/6",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":789,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["60",{"_index":481,"title":{},"body":{"injectables/DateService.html":{}}}],["7",{"_index":727,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"index.html":{}}}],["7.8.1",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1380,"title":{},"body":{"index.html":{}}}],["83",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1379,"title":{},"body":{"index.html":{}}}],["9]){12",{"_index":1293,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["9]){4",{"_index":1292,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["9]){8",{"_index":1291,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["_",{"_index":556,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["academic_title",{"_index":1056,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["academictitle",{"_index":1173,"title":{},"body":{"entities/User.html":{}}}],["access",{"_index":435,"title":{},"body":{"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["access_token",{"_index":1046,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["access_token_cookie",{"_index":59,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token_expiration_date",{"_index":1048,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{}}}],["accesstoken",{"_index":85,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenexpiration",{"_index":450,"title":{},"body":{"injectables/DateService.html":{}}}],["accesstokenexpirationdate",{"_index":1122,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":19,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"index.html":{}}}],["accesstokenstrategy.fromcookie",{"_index":78,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["accesstokenstrategy.fromcookie()(request",{"_index":86,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["action",{"_index":1076,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["actually",{"_index":673,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["add",{"_index":793,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["additional",{"_index":1372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":534,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["affected",{"_index":648,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["ahead",{"_index":440,"title":{},"body":{"injectables/DateService.html":{}}}],["aliases",{"_index":1393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":94,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allowed.exception",{"_index":1005,"title":{},"body":{"injectables/ProjectService.html":{}}}],["allowed.exception.ts",{"_index":521,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"coverage.html":{}}}],["allowed.exception.ts:5",{"_index":522,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["allows",{"_index":1371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["already",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["alter",{"_index":1070,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["api.interceptor.ts",{"_index":549,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["api.interceptor.ts:7",{"_index":555,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["appmodule",{"_index":137,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":423,"title":{},"body":{"injectables/DateService.html":{}}}],["argumentshost",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.isarray(request.query.fields[table",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(request.query.include",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(filters[field",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialequalfilters(where",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialincludes(relations[include",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignpartialsparsefieldsets(fieldsets[table",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assignsparsefieldsets(sparsefieldsets",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["attribute",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["auth",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authenticationcontroller",{"_index":178,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":147,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationpayload",{"_index":188,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":215,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"index.html":{}}}],["authguard",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["author",{"_index":1391,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":466,"title":{},"body":{"injectables/DateService.html":{},"classes/UnauthorizedException.html":{}}}],["await",{"_index":90,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["bad",{"_index":371,"title":{},"body":{"classes/BadRequestException.html":{}}}],["badrequestexception",{"_index":306,"title":{"classes/BadRequestException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["badrequestexception(error",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["badrequestexception(exception",{"_index":663,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["badrequestexception(null",{"_index":928,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["base.exception",{"_index":368,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{}}}],["baseentity",{"_index":381,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/TokenWhitelist.html":{}}}],["baseentitywithextras",{"_index":377,"title":{"classes/BaseEntityWithExtras.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseexception",{"_index":364,"title":{"classes/BaseException.html":{}},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["beforeinsert",{"_index":586,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["begin",{"_index":1113,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["behind",{"_index":470,"title":{},"body":{"injectables/DateService.html":{}}}],["being",{"_index":1367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["body",{"_index":206,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":471,"title":{},"body":{"injectables/DateService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectReportController.html":{}}}],["bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bootstrap(port",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browse",{"_index":1386,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1383,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":554,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["cascade",{"_index":581,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{}}}],["catch",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cause",{"_index":367,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["caused",{"_index":672,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["change",{"_index":1101,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["check",{"_index":468,"title":{},"body":{"injectables/DateService.html":{}}}],["checks",{"_index":465,"title":{},"body":{"injectables/DateService.html":{}}}],["class",{"_index":16,"title":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"classes/ValidUUIDPipe.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["classes",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"classes/ValidUUIDPipe.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationmodule",{"_index":259,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_exports",{"_index":262,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_authenticationmodule_imports",{"_index":261,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":260,"title":{},"body":{"modules/AuthenticationModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule",{"_index":625,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule_exports",{"_index":627,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_milestoneestimatemodule_providers",{"_index":626,"title":{},"body":{"modules/MilestoneEstimateModule.html":{},"index.html":{}}}],["cluster_profilemodule",{"_index":700,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":701,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_projectmembermodule",{"_index":813,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmembermodule_exports",{"_index":815,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmembermodule_imports",{"_index":816,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["cluster_projectmembermodule_providers",{"_index":814,"title":{},"body":{"modules/ProjectMemberModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule",{"_index":885,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule_exports",{"_index":886,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmilestonemodule_imports",{"_index":888,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["cluster_projectmilestonemodule_providers",{"_index":887,"title":{},"body":{"modules/ProjectMilestoneModule.html":{},"index.html":{}}}],["cluster_projectmodule",{"_index":930,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectmodule_exports",{"_index":932,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectmodule_imports",{"_index":931,"title":{},"body":{"modules/ProjectModule.html":{}}}],["cluster_projectmodule_providers",{"_index":933,"title":{},"body":{"modules/ProjectModule.html":{},"index.html":{}}}],["cluster_projectreportmodule",{"_index":971,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_projectreportmodule_exports",{"_index":973,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_projectreportmodule_providers",{"_index":972,"title":{},"body":{"modules/ProjectReportModule.html":{},"index.html":{}}}],["cluster_usermodule",{"_index":1231,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_exports",{"_index":1232,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":1233,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["coalesce(u.first_name",{"_index":1263,"title":{},"body":{"injectables/UserService.html":{}}}],["coalesce(u.last_name",{"_index":1264,"title":{},"body":{"injectables/UserService.html":{}}}],["code",{"_index":401,"title":{},"body":{"classes/BaseException.html":{},"injectables/DateService.html":{}}}],["column",{"_index":587,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["column({name",{"_index":572,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":733,"title":{},"body":{"entities/Project.html":{}}}],["column({type",{"_index":777,"title":{},"body":{"entities/ProjectMember.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["columnoptions",{"_index":1364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.includes(field",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common/base",{"_index":589,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["conditions",{"_index":1006,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push",{"_index":1009,"title":{},"body":{"injectables/ProjectService.html":{}}}],["conditions.push(where",{"_index":1010,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":88,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1071,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["constructor(cause",{"_index":365,"title":{},"body":{"classes/BadRequestException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{}}}],["constructor(email",{"_index":1195,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["constructor(httpadapterhost",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(milestoneestimaterepository",{"_index":635,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["constructor(private",{"_index":73,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(projectmemberrepository",{"_index":825,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["constructor(projectmilestonerepository",{"_index":894,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["constructor(projectreportrepository",{"_index":978,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["constructor(projectrepository",{"_index":993,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(status",{"_index":395,"title":{},"body":{"classes/BaseException.html":{}}}],["constructor(tokenwhitelistrepository",{"_index":1140,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["constructor(tokenwhitelistservice",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(userrepository",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["contains",{"_index":485,"title":{},"body":{"injectables/DateService.html":{}}}],["context",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["continue",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributor",{"_index":782,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":177,"title":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":227,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('milestone/estimates",{"_index":620,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["controller('profile",{"_index":695,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('project/members",{"_index":805,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["controller('project/milestones",{"_index":877,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["controller('project/reports",{"_index":964,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["controller('projects",{"_index":760,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controller('users",{"_index":1212,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":179,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{}}}],["controllers/authentication.controller",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["controllers/milestone",{"_index":630,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["controllers/profile.controller",{"_index":703,"title":{},"body":{"modules/ProfileModule.html":{}}}],["controllers/project",{"_index":819,"title":{},"body":{"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectReportModule.html":{}}}],["controllers/project.controller",{"_index":935,"title":{},"body":{"modules/ProjectModule.html":{}}}],["controllers/user.controller",{"_index":1235,"title":{},"body":{"modules/UserModule.html":{}}}],["cookie",{"_index":62,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["cookie.ts",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1295,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":601,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["create(memberpartial",{"_index":829,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["create(partialreport",{"_index":981,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["create(partialresource",{"_index":639,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["create(payload",{"_index":603,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["create(project",{"_index":997,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createall",{"_index":824,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["createall(memberpartials",{"_index":832,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["createall(milestonepartials",{"_index":898,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createdproject",{"_index":1015,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.id",{"_index":1020,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.members",{"_index":1025,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createdproject.milestones",{"_index":1021,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createone",{"_index":893,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createone(payload",{"_index":901,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["createparamdecorator(filtersfactory",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(includesfactory",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(sparsefieldsetsfactory",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator(userfactory",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('u",{"_index":1261,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":533,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["credentials.exception",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["credentials.exception.ts",{"_index":529,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["credentials.exception.ts:5",{"_index":530,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["criteria",{"_index":1230,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["crypto",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.sha256(source).tostring(crypto.enc.hex",{"_index":410,"title":{},"body":{"injectables/CryptoService.html":{}}}],["cryptoservice",{"_index":263,"title":{"injectables/CryptoService.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ctx",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curdate",{"_index":1102,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["current",{"_index":430,"title":{},"body":{"injectables/DateService.html":{}}}],["current_date",{"_index":584,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["d",{"_index":479,"title":{},"body":{"injectables/DateService.html":{}}}],["data",{"_index":563,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":675,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["datasource",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["date.getcurrenttimestampwithoffset('30m",{"_index":451,"title":{},"body":{"injectables/DateService.html":{}}}],["date.getexpirationdatewithoffset('30m",{"_index":462,"title":{},"body":{"injectables/DateService.html":{}}}],["dateservice",{"_index":104,"title":{"injectables/DateService.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/DateService.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["datetime",{"_index":490,"title":{},"body":{"injectables/DateService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{}}}],["datetime.fromformat",{"_index":514,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromformat(date",{"_index":512,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(date).setzone(time_zone).toformat('yyyy",{"_index":517,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(jsdate",{"_index":507,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.fromjsdate(timestamp",{"_index":511,"title":{},"body":{"injectables/DateService.html":{}}}],["datetime.local",{"_index":500,"title":{},"body":{"injectables/DateService.html":{}}}],["day",{"_index":487,"title":{},"body":{"injectables/DateService.html":{}}}],["dd",{"_index":445,"title":{},"body":{"injectables/DateService.html":{}}}],["de",{"_index":510,"title":{},"body":{"injectables/DateService.html":{}}}],["declarations",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorator",{"_index":1365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":190,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/filters.decorator",{"_index":693,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/includes.decorator",{"_index":754,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/primary",{"_index":591,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["decorators/sparse",{"_index":756,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["decorators/user.decorator",{"_index":210,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/UserController.html":{}}}],["deeppartial",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["default",{"_index":478,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":606,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{}}}],["delete(id",{"_index":605,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["delete(userid",{"_index":1143,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["deleted",{"_index":525,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["deleteone",{"_index":1201,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteone(user",{"_index":1203,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprojectnotallowedexception",{"_index":518,"title":{"classes/DeleteProjectNotAllowedException.html":{}},"body":{"classes/DeleteProjectNotAllowedException.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["deleteprojectnotallowedexception(null",{"_index":1029,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteresult",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{}}}],["deleteresult.affected",{"_index":665,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["deliverables",{"_index":938,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["denied",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dependencies",{"_index":139,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":372,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"properties.html":{}}}],["documentation",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1035,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["down(queryrunner",{"_index":1038,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["drop",{"_index":1085,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["eg",{"_index":453,"title":{},"body":{"injectables/DateService.html":{}}}],["email",{"_index":66,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["engine=innodb",{"_index":1055,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["entities",{"_index":565,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"index.html":{}}}],["entities/milestone",{"_index":612,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["entities/project",{"_index":594,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"entities/User.html":{}}}],["entities/token",{"_index":271,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{}}}],["entities/user",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"entities/TokenWhitelist.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":379,"title":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity('milestone_estimate",{"_index":595,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["entity('project",{"_index":736,"title":{},"body":{"entities/Project.html":{}}}],["entity('project_member",{"_index":784,"title":{},"body":{"entities/ProjectMember.html":{}}}],["entity('project_milestone",{"_index":867,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["entity('project_report",{"_index":953,"title":{},"body":{"entities/ProjectReport.html":{}}}],["entity('token_whitelist",{"_index":1134,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["entity('user",{"_index":1193,"title":{},"body":{"entities/User.html":{}}}],["entity.getcolumns",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getproperties",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelations",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[field",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.getrelationtypes()[include",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.name.tolowercase",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entry",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":778,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["enumerations",{"_index":1355,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":55,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.access_token_expiration",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["env.jwt_access_secret",{"_index":81,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["env.jwt_refresh_secret",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["env.refresh_token_expiration",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["environment",{"_index":56,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{}}}],["errorhandler",{"_index":1376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["estimate",{"_index":613,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimate.controller",{"_index":631,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["estimate.controller.ts",{"_index":599,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["estimate.controller.ts:19",{"_index":604,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.controller.ts:27",{"_index":610,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.controller.ts:41",{"_index":607,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["estimate.id",{"_index":921,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["estimate.milestone",{"_index":859,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["estimate.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{}}}],["estimate.module.ts",{"_index":629,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["estimate.service",{"_index":619,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimate.service.ts",{"_index":634,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["estimate.service.ts:12",{"_index":637,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:19",{"_index":640,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:40",{"_index":644,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.service.ts:55",{"_index":642,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["estimate.ts",{"_index":567,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["estimate.ts:24",{"_index":576,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:27",{"_index":585,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:30",{"_index":574,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimate.ts:33",{"_index":582,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["estimates",{"_index":857,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["estimation_date",{"_index":573,"title":{},"body":{"entities/MilestoneEstimate.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["estimationdate",{"_index":568,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["europe/berlin",{"_index":493,"title":{},"body":{"injectables/DateService.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":1118,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["event_scheduler",{"_index":1117,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["example",{"_index":433,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["exception",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["exception.getstatus",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:13",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:7",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/bad",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["exceptions/base.exception",{"_index":523,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/UserDoesNotExistException.html":{}}}],["exceptions/delete",{"_index":1004,"title":{},"body":{"injectables/ProjectService.html":{}}}],["exceptions/incorrect",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["exceptions/invalid",{"_index":1287,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["exceptions/no",{"_index":647,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["exceptions/project",{"_index":839,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["exceptions/user",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":552,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1225,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["exist.exception",{"_index":1257,"title":{},"body":{"injectables/UserService.html":{}}}],["exist.exception.ts",{"_index":1222,"title":{},"body":{"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["exist.exception.ts:6",{"_index":1223,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["existingmember",{"_index":846,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["existingrelations",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existingrelations.includes(include",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":790,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/UserAlreadyExistsException.html":{}}}],["exists.exception",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMemberService.html":{}}}],["exists.exception.ts",{"_index":787,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:5",{"_index":788,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{}}}],["expected",{"_index":546,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["expiration",{"_index":434,"title":{},"body":{"injectables/DateService.html":{}}}],["expired",{"_index":467,"title":{},"body":{"injectables/DateService.html":{}}}],["expires",{"_index":239,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["expiresin",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":15,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["exports",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["express",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["express.user",{"_index":195,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/UserController.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"entities/MilestoneEstimate.html":{},"classes/NoAffectedRowException.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["extension",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":79,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(request",{"_index":87,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":77,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extras",{"_index":590,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["extras.ts",{"_index":380,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extras.ts:12",{"_index":388,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:16",{"_index":386,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:20",{"_index":387,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["extras.ts:8",{"_index":389,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["f0",{"_index":1290,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["false",{"_index":247,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"controllers/ProfileController.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["field",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.split",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.length",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...(request.query.fields[table",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.push(...entry.split",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields.slice(1",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields[0",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets.decorator",{"_index":757,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["fieldsets.decorator.ts",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldsets[field",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldsets[table][field",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["filter",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters",{"_index":692,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters(project",{"_index":761,"title":{},"body":{"controllers/ProjectController.html":{}}}],["filters(projectmilestone",{"_index":878,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["filters(projectreport",{"_index":965,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["filters(user",{"_index":1213,"title":{},"body":{"controllers/UserController.html":{}}}],["filters(userentity",{"_index":697,"title":{},"body":{"controllers/ProfileController.html":{}}}],["filters[field",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtersfactory",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":740,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(userid",{"_index":1000,"title":{},"body":{"injectables/ProjectService.html":{}}}],["findall(where",{"_index":744,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandcredentials(id",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuser",{"_index":1137,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findbyuser(userid",{"_index":1145,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["findone",{"_index":741,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["findone(id",{"_index":750,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["findoptionsrelations",{"_index":748,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionsselect",{"_index":746,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["findoptionswhere",{"_index":687,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":1059,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["firstname",{"_index":1174,"title":{},"body":{"entities/User.html":{}}}],["fk_2d04de5563e11736efb61e44285",{"_index":1083,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_7115f82a61e31ac95b2681d83e4",{"_index":1078,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_7e787585ded942fc095b659b594",{"_index":1080,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_9884b2ee80eb70b7db4f12e8aed",{"_index":1081,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_e7520163dafa7c1104fd672caad",{"_index":1077,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_f7accb0136106f3050f8e96c5e8",{"_index":1082,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["fk_fbe0e932e64303e1f63e3e16f5e",{"_index":1072,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["following",{"_index":441,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["follows",{"_index":436,"title":{},"body":{"injectables/DateService.html":{}}}],["forbiddenexception",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forbiddenexception('access",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["foreign",{"_index":1073,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["format",{"_index":442,"title":{},"body":{"injectables/DateService.html":{}}}],["format.exception",{"_index":1288,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["format.exception.ts",{"_index":539,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"coverage.html":{}}}],["format.exception.ts:4",{"_index":540,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["found",{"_index":1228,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["fromcookie",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["function",{"_index":420,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["functions",{"_index":1357,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":592,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatetokens",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generatetokens(userid",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get(':id",{"_index":688,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectReportController.html":{}}}],["getcolumns",{"_index":382,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getcurrenttimestampwithoffset",{"_index":414,"title":{},"body":{"injectables/DateService.html":{}}}],["getcurrenttimestampwithoffset(offsetwithunit",{"_index":418,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset",{"_index":415,"title":{},"body":{"injectables/DateService.html":{}}}],["getexpirationdatewithoffset(offsetwithunit",{"_index":458,"title":{},"body":{"injectables/DateService.html":{}}}],["getmany",{"_index":1266,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofile",{"_index":681,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(user",{"_index":684,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid",{"_index":682,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(id",{"_index":686,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getproperties",{"_index":383,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["getrelations",{"_index":384,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["getrelationtypes",{"_index":385,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{}}}],["given",{"_index":457,"title":{},"body":{"injectables/DateService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["given.diff(now).toobject().milliseconds",{"_index":516,"title":{},"body":{"injectables/DateService.html":{}}}],["global",{"_index":1116,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["goes",{"_index":1227,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["guards/access",{"_index":211,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["guards/refresh",{"_index":214,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["hadestimates",{"_index":916,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["hash",{"_index":406,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hash(source",{"_index":407,"title":{},"body":{"injectables/CryptoService.html":{}}}],["hashedaccesstoken",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["hashedrefreshedtoken",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hashedrefreshtoken",{"_index":1165,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["hazards",{"_index":939,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["hh:mm:ss",{"_index":446,"title":{},"body":{"injectables/DateService.html":{}}}],["host",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hsel",{"_index":402,"title":{},"body":{"classes/BaseException.html":{}}}],["hsel_mta",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(context.getrequest",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(context.getresponse",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["httponly",{"_index":235,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpstatus",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["httpstatus.internal_server_error",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":569,"title":{},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JsonApiInterceptor.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"classes/ValidUUIDPipe.html":{}}}],["import",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["imports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include.split",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes",{"_index":753,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["includes(project",{"_index":763,"title":{},"body":{"controllers/ProjectController.html":{}}}],["includes(projectmilestone",{"_index":880,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["includes(projectreport",{"_index":967,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["includes(user",{"_index":1215,"title":{},"body":{"controllers/UserController.html":{}}}],["includes.length",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...(request.query.include",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.push(...entry.split",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes.slice(1",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes[0",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includesfactory",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":532,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["incorrectcredentialsexception",{"_index":309,"title":{"classes/IncorrectCredentialsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["incorrectcredentialsexception(null",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{}}}],["increment",{"_index":429,"title":{},"body":{"injectables/DateService.html":{}}}],["incremented",{"_index":456,"title":{},"body":{"injectables/DateService.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["information",{"_index":677,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["initiated",{"_index":1368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":645,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["injectrepository(milestoneestimate",{"_index":650,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["injectrepository(project",{"_index":841,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["injectrepository(projectmember",{"_index":840,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["injectrepository(projectmilestone",{"_index":907,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["injectrepository(projectreport",{"_index":986,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["injectrepository(tokenwhitelist",{"_index":1153,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["injectrepository(user",{"_index":1258,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":475,"title":{},"body":{"injectables/DateService.html":{}}}],["insertresult",{"_index":651,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["insertresult.identifiers[0].id",{"_index":657,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["instanceof",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1058,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["intercept",{"_index":550,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["intercept(_",{"_index":551,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["invaliduuidformatexception",{"_index":536,"title":{"classes/InvalidUUIDFormatException.html":{}},"body":{"classes/InvalidUUIDFormatException.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["invaliduuidformatexception(null",{"_index":1289,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["isaftercurrenttimestamp",{"_index":416,"title":{},"body":{"injectables/DateService.html":{}}}],["isaftercurrenttimestamp(timestamp",{"_index":463,"title":{},"body":{"injectables/DateService.html":{}}}],["isc",{"_index":1390,"title":{},"body":{"properties.html":{}}}],["it's",{"_index":469,"title":{},"body":{"injectables/DateService.html":{}}}],["javascript",{"_index":460,"title":{},"body":{"injectables/DateService.html":{}}}],["joincolumn",{"_index":1132,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["joincolumn()@onetoone(undefined",{"_index":1129,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["js",{"_index":409,"title":{},"body":{"injectables/CryptoService.html":{},"dependencies.html":{}}}],["jsdate",{"_index":505,"title":{},"body":{"injectables/DateService.html":{}}}],["jsonapiincludes",{"_index":1396,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jsonapiinterceptor",{"_index":547,"title":{"injectables/JsonApiInterceptor.html":{}},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["jwt",{"_index":23,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":76,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":267,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.register",{"_index":277,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtpayload",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":1054,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["last_name",{"_index":1060,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["lastname",{"_index":1175,"title":{},"body":{"entities/User.html":{}}}],["lax",{"_index":238,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["legend",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["level",{"_index":1366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":1389,"title":{},"body":{"properties.html":{}}}],["line",{"_index":437,"title":{},"body":{"injectables/DateService.html":{}}}],["literal",{"_index":1407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["locale",{"_index":509,"title":{},"body":{"injectables/DateService.html":{}}}],["login",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["login(email",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(payload",{"_index":187,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["logout(user",{"_index":194,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logout(userid",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logoutresult",{"_index":221,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["lower(concat(coalesce(u.academic_title",{"_index":1262,"title":{},"body":{"injectables/UserService.html":{}}}],["luxon",{"_index":491,"title":{},"body":{"injectables/DateService.html":{},"dependencies.html":{}}}],["m",{"_index":483,"title":{},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{}}}],["m.estimates",{"_index":579,"title":{},"body":{"entities/MilestoneEstimate.html":{}}}],["malformed",{"_index":543,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["manytoone",{"_index":588,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["manytoone(undefined",{"_index":578,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{}}}],["map",{"_index":558,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["map((data",{"_index":562,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["map((users",{"_index":1218,"title":{},"body":{"controllers/UserController.html":{}}}],["matching",{"_index":18,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matriculation_number",{"_index":1057,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["matriculationnumber",{"_index":1176,"title":{},"body":{"entities/User.html":{}}}],["meaning",{"_index":455,"title":{},"body":{"injectables/DateService.html":{}}}],["mediumtext",{"_index":942,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["member",{"_index":714,"title":{},"body":{"entities/Project.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["member.controller",{"_index":820,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["member.controller.ts",{"_index":796,"title":{},"body":{"controllers/ProjectMemberController.html":{},"coverage.html":{}}}],["member.controller.ts:24",{"_index":798,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.controller.ts:46",{"_index":800,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.controller.ts:60",{"_index":799,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["member.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectModule.html":{}}}],["member.module.ts",{"_index":818,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["member.project",{"_index":715,"title":{},"body":{"entities/Project.html":{}}}],["member.remove",{"_index":855,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service",{"_index":804,"title":{},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectService.html":{}}}],["member.service.ts",{"_index":823,"title":{},"body":{"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["member.service.ts:19",{"_index":827,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:27",{"_index":836,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:43",{"_index":833,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:53",{"_index":830,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:83",{"_index":837,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.service.ts:97",{"_index":835,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["member.ts",{"_index":771,"title":{},"body":{"entities/ProjectMember.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["member.ts:31",{"_index":773,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:34",{"_index":779,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:37",{"_index":781,"title":{},"body":{"entities/ProjectMember.html":{}}}],["member.ts:40",{"_index":775,"title":{},"body":{"entities/ProjectMember.html":{}}}],["memberpartial",{"_index":831,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartial.project.id",{"_index":848,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartial.user.id",{"_index":849,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartials",{"_index":834,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["memberpartials.map((memberpartial",{"_index":843,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["members",{"_index":705,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectService.html":{}}}],["memberservice",{"_index":995,"title":{},"body":{"injectables/ProjectService.html":{}}}],["message",{"_index":370,"title":{},"body":{"classes/BadRequestException.html":{},"classes/BaseException.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["metadata",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["migrationinterface",{"_index":1034,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["milestone",{"_index":570,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["milestone.controller",{"_index":890,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["milestone.controller.ts",{"_index":869,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"coverage.html":{}}}],["milestone.controller.ts:22",{"_index":873,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:34",{"_index":871,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:42",{"_index":874,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.controller.ts:56",{"_index":872,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["milestone.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{}}}],["milestone.module.ts",{"_index":889,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["milestone.project",{"_index":717,"title":{},"body":{"entities/Project.html":{}}}],["milestone.remove",{"_index":929,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service",{"_index":876,"title":{},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectService.html":{}}}],["milestone.service.ts",{"_index":892,"title":{},"body":{"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["milestone.service.ts:120",{"_index":903,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:19",{"_index":896,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:26",{"_index":904,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:34",{"_index":905,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:50",{"_index":902,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:62",{"_index":899,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.service.ts:77",{"_index":906,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestone.ts",{"_index":856,"title":{},"body":{"entities/ProjectMilestone.html":{},"coverage.html":{}}}],["milestone.ts:26",{"_index":861,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:29",{"_index":864,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:32",{"_index":863,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:35",{"_index":866,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone.ts:38",{"_index":860,"title":{},"body":{"entities/ProjectMilestone.html":{}}}],["milestone/estimates",{"_index":600,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["milestone_estimate",{"_index":1067,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestone_reached",{"_index":862,"title":{},"body":{"entities/ProjectMilestone.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestoneestimate",{"_index":564,"title":{"entities/MilestoneEstimate.html":{}},"body":{"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"coverage.html":{}}}],["milestoneestimatecontroller",{"_index":597,"title":{"controllers/MilestoneEstimateController.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"coverage.html":{}}}],["milestoneestimatemodule",{"_index":148,"title":{"modules/MilestoneEstimateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMilestoneModule.html":{},"index.html":{},"modules.html":{}}}],["milestoneestimaterepository",{"_index":638,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["milestoneestimates",{"_index":895,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestoneestimateservice",{"_index":617,"title":{"injectables/MilestoneEstimateService.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMilestoneService.html":{},"coverage.html":{},"index.html":{}}}],["milestoneid",{"_index":1069,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["milestonepartial",{"_index":914,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonepartials",{"_index":900,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonepartials.map(async",{"_index":913,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["milestonereached",{"_index":858,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{}}}],["milestones",{"_index":706,"title":{},"body":{"entities/Project.html":{}}}],["milestoneservice",{"_index":994,"title":{},"body":{"injectables/ProjectService.html":{}}}],["milliseconds",{"_index":489,"title":{},"body":{"injectables/DateService.html":{}}}],["minute",{"_index":488,"title":{},"body":{"injectables/DateService.html":{}}}],["minutes",{"_index":439,"title":{},"body":{"injectables/DateService.html":{}}}],["miscellaneous",{"_index":1354,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":444,"title":{},"body":{"injectables/DateService.html":{}}}],["module",{"_index":136,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["modules",{"_index":138,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["modules/authentication.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/milestone",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{}}}],["modules/profile.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/project",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectModule.html":{}}}],["modules/project.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{}}}],["mysql",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["nestinterceptor",{"_index":557,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":268,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":93,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["newproject",{"_index":1013,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newproject.save",{"_index":1016,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newrecord",{"_index":1157,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newrecord.save",{"_index":1159,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["newreport",{"_index":989,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["newreport.save",{"_index":991,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["next",{"_index":553,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["next.handle().pipe",{"_index":560,"title":{},"body":{"injectables/JsonApiInterceptor.html":{}}}],["noaffectedrowexception",{"_index":646,"title":{"classes/NoAffectedRowException.html":{}},"body":{"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["noaffectedrowexception(null",{"_index":662,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["notfoundexception",{"_index":838,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["now",{"_index":513,"title":{},"body":{"injectables/DateService.html":{}}}],["null",{"_index":69,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":63,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":397,"title":{},"body":{"classes/BaseException.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"miscellaneous/functions.html":{}}}],["oberservable",{"_index":225,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["oberservable.ts",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":461,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["object.hasown(exception",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object.hasown(payload",{"_index":910,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["object.hasown(req.cookies",{"_index":71,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["object.hasown(request.query",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(updatedfields).length",{"_index":926,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["objectives",{"_index":940,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["observable",{"_index":193,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["occured",{"_index":373,"title":{},"body":{"classes/BadRequestException.html":{}}}],["official_end",{"_index":720,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["official_start",{"_index":722,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["officialend",{"_index":707,"title":{},"body":{"entities/Project.html":{}}}],["officialstart",{"_index":708,"title":{},"body":{"entities/Project.html":{}}}],["offset",{"_index":425,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit",{"_index":452,"title":{},"body":{"injectables/DateService.html":{}}}],["offsetwithunit.replace(offset.tostring",{"_index":499,"title":{},"body":{"injectables/DateService.html":{}}}],["ondelete",{"_index":580,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{}}}],["one",{"_index":422,"title":{},"body":{"injectables/DateService.html":{}}}],["onetomany",{"_index":735,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":713,"title":{},"body":{"entities/Project.html":{},"entities/ProjectMilestone.html":{},"entities/User.html":{}}}],["onetoone",{"_index":1133,"title":{},"body":{"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":1190,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":399,"title":{},"body":{"classes/BaseException.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":472,"title":{},"body":{"injectables/DateService.html":{}}}],["out",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":1378,"title":{"index.html":{}},"body":{"index.html":{}}}],["owner",{"_index":527,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"entities/Project.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["ownerid",{"_index":1065,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["package",{"_index":1331,"title":{"dependencies.html":{},"properties.html":{}},"body":{"miscellaneous/functions.html":{}}}],["param",{"_index":495,"title":{},"body":{"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["param('id",{"_index":622,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["parameter",{"_index":542,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["parsed",{"_index":477,"title":{},"body":{"injectables/DateService.html":{}}}],["parsedate",{"_index":417,"title":{},"body":{"injectables/DateService.html":{}}}],["parsedate(date",{"_index":473,"title":{},"body":{"injectables/DateService.html":{}}}],["parseint(regex.exec(offsetwithunit)[0",{"_index":498,"title":{},"body":{"injectables/DateService.html":{}}}],["parser",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":476,"title":{},"body":{"injectables/DateService.html":{}}}],["part",{"_index":1370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partialreport",{"_index":983,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["partialresource",{"_index":641,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["partialresource.estimationdate",{"_index":653,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["partialresource.reportdate",{"_index":655,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["passport",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":266,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":50,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":22,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passreqtocallback",{"_index":82,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passthrough",{"_index":229,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["password",{"_index":226,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/IncorrectCredentialsException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["patch",{"_index":611,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patch(':id",{"_index":609,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["patchone",{"_index":957,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["patchone(id",{"_index":960,"title":{},"body":{"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{}}}],["path",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload.id",{"_index":911,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["payload.password",{"_index":231,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["payload?.password",{"_index":1273,"title":{},"body":{"injectables/UserService.html":{}}}],["payload[attribute",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["performing",{"_index":374,"title":{},"body":{"classes/BadRequestException.html":{}}}],["phone_number",{"_index":1061,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/User.html":{}}}],["phonenumber",{"_index":1177,"title":{},"body":{"entities/User.html":{}}}],["pipe",{"_index":807,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["pipes/valid",{"_index":615,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["pipetransform",{"_index":1283,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["plus(offset",{"_index":502,"title":{},"body":{"injectables/DateService.html":{}}}],["port",{"_index":1362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":207,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":191,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('logout",{"_index":245,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('refresh",{"_index":253,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('register",{"_index":204,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('search",{"_index":1208,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["present",{"_index":1226,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["primary",{"_index":1053,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid",{"_index":575,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["primarygenerateduuid(options",{"_index":1363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["procedure",{"_index":1111,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["profile",{"_index":680,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilecontroller",{"_index":678,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":149,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":520,"title":{"entities/Project.html":{}},"body":{"classes/DeleteProjectNotAllowedException.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/User.html":{},"coverage.html":{}}}],["project.members",{"_index":774,"title":{},"body":{"entities/ProjectMember.html":{},"injectables/ProjectService.html":{}}}],["project.members.map((member",{"_index":1024,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.milestones",{"_index":865,"title":{},"body":{"entities/ProjectMilestone.html":{},"injectables/ProjectService.html":{}}}],["project.milestones.map((milestone",{"_index":1019,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.owner",{"_index":1188,"title":{},"body":{"entities/User.html":{}}}],["project.owner.id",{"_index":1028,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.remove",{"_index":1030,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.reports",{"_index":948,"title":{},"body":{"entities/ProjectReport.html":{}}}],["project/members",{"_index":797,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["project/milestones",{"_index":870,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["project/reports",{"_index":956,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["project\\`(\\`id",{"_index":1079,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_1723758746739",{"_index":1103,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_member",{"_index":1062,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_milestone",{"_index":1066,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_milestone\\`(\\`id",{"_index":1084,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["project_report",{"_index":1064,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["projectcontroller",{"_index":737,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectid",{"_index":1063,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["projectmember",{"_index":712,"title":{"entities/ProjectMember.html":{}},"body":{"entities/Project.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmember.save",{"_index":845,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmember.user",{"_index":810,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["projectmemberalreadyexistsexception",{"_index":785,"title":{"classes/ProjectMemberAlreadyExistsException.html":{}},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"injectables/ProjectMemberService.html":{},"coverage.html":{}}}],["projectmembercontroller",{"_index":794,"title":{"controllers/ProjectMemberController.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"coverage.html":{}}}],["projectmembermodule",{"_index":150,"title":{"modules/ProjectMemberModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectmemberrepository",{"_index":828,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["projectmembers",{"_index":1022,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmemberservice",{"_index":802,"title":{"injectables/ProjectMemberService.html":{}},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmilestone",{"_index":577,"title":{"entities/ProjectMilestone.html":{}},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectmilestonecontroller",{"_index":868,"title":{"controllers/ProjectMilestoneController.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"coverage.html":{}}}],["projectmilestonemodule",{"_index":151,"title":{"modules/ProjectMilestoneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectmilestonerepository",{"_index":897,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["projectmilestones",{"_index":1017,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmilestoneservice",{"_index":875,"title":{"injectables/ProjectMilestoneService.html":{}},"body":{"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projectmodule",{"_index":152,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"index.html":{},"modules.html":{}}}],["projectreport",{"_index":729,"title":{"entities/ProjectReport.html":{}},"body":{"entities/Project.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["projectreportcontroller",{"_index":954,"title":{"controllers/ProjectReportController.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"coverage.html":{}}}],["projectreportmodule",{"_index":153,"title":{"modules/ProjectReportModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectReportModule.html":{},"index.html":{},"modules.html":{}}}],["projectreportrepository",{"_index":980,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["projectreportservice",{"_index":962,"title":{"injectables/ProjectReportService.html":{}},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{},"index.html":{}}}],["projectrepository",{"_index":826,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{}}}],["projectrole",{"_index":776,"title":{},"body":{"entities/ProjectMember.html":{},"miscellaneous/enumerations.html":{}}}],["projects",{"_index":739,"title":{},"body":{"controllers/ProjectController.html":{},"entities/User.html":{}}}],["projectservice",{"_index":758,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["projektarbeitapi.ts",{"_index":1033,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["projektarbeitapi.ts:4",{"_index":1037,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi.ts:51",{"_index":1040,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi.ts:6",{"_index":1042,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["projektarbeitapi1723306279388",{"_index":1031,"title":{"classes/ProjektarbeitAPI1723306279388.html":{}},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["projektarbeitapimilestone",{"_index":1104,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["promise",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{},"entities/MilestoneEstimate.html":{},"injectables/MilestoneEstimateService.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["promise.all(updates",{"_index":924,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["promisetoobservable",{"_index":223,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["promisetoobservable(promise",{"_index":1374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promisetoobservable(this.authenticationservice.logout(user['sub",{"_index":246,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.authenticationservice.register(payload",{"_index":228,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.create(payload",{"_index":621,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.delete(id",{"_index":624,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.milestoneestimateservice.update(id",{"_index":623,"title":{},"body":{"controllers/MilestoneEstimateController.html":{}}}],["promisetoobservable(this.projectmemberservice.delete(id",{"_index":812,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmemberservice.update(id",{"_index":811,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.createone(payload",{"_index":882,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.delete(id",{"_index":884,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.findall(where",{"_index":881,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectmilestoneservice.update(id",{"_index":883,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["promisetoobservable(this.projectreportservice.create(payload",{"_index":970,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectreportservice.findone(id",{"_index":968,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["promisetoobservable(this.projectservice.create(payload",{"_index":766,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.delete(id",{"_index":769,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findall(user['sub",{"_index":764,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.findone(id",{"_index":765,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.projectservice.update(id",{"_index":768,"title":{},"body":{"controllers/ProjectController.html":{}}}],["promisetoobservable(this.userservice.delete(user['sub",{"_index":1220,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.findall(where",{"_index":1216,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.findbyid(user['sub",{"_index":696,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.findbyidandcredentials(id",{"_index":698,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promisetoobservable(this.userservice.searchall(payload.searchterm)).pipe",{"_index":1217,"title":{},"body":{"controllers/UserController.html":{}}}],["promisetoobservable(this.userservice.update(id",{"_index":699,"title":{},"body":{"controllers/ProfileController.html":{}}}],["properties",{"_index":412,"title":{"properties.html":{}},"body":{"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["properties.includes(field",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":391,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"miscellaneous/functions.html":{}}}],["propertydecorator",{"_index":1373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":676,"title":{},"body":{"classes/NoAffectedRowException.html":{},"miscellaneous/functions.html":{}}}],["provided",{"_index":1171,"title":{},"body":{"classes/UnauthorizedException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["providers",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["public",{"_index":67,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["query",{"_index":376,"title":{},"body":{"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{}}}],["queryrunner",{"_index":1039,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query",{"_index":1043,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query(`alter",{"_index":1100,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["queryrunner.query(`drop",{"_index":1086,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["queryrunner.query(`set",{"_index":1115,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["references",{"_index":1074,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["reflect",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":1088,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh_token",{"_index":1049,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"entities/TokenWhitelist.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_cookie",{"_index":218,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_expiration_date",{"_index":1050,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{}}}],["refreshtoken",{"_index":256,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenexpirationdate",{"_index":1123,"title":{},"body":{"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{}}}],["refreshtokenguard",{"_index":213,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["refreshtokens(email",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshtokens(user",{"_index":199,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["refreshtokenstrategy",{"_index":264,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"index.html":{}}}],["refreshtokenstrategy.fromcookie",{"_index":1091,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["refreshtokenstrategy.fromcookie()(request",{"_index":1092,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["regex",{"_index":496,"title":{},"body":{"injectables/DateService.html":{},"classes/ValidUUIDPipe.html":{}}}],["regex.test(value.tolowercase",{"_index":1294,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["regexp(/\\d",{"_index":497,"title":{},"body":{"injectables/DateService.html":{}}}],["register",{"_index":186,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["register(payload",{"_index":202,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["register(undefined",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register(userdata",{"_index":1252,"title":{},"body":{"injectables/UserService.html":{}}}],["registered",{"_index":1197,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["registereduser",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.email",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.id",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registereduser.password",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerpayload",{"_index":203,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["rel_fbe0e932e64303e1f63e3e16f5",{"_index":1052,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["relations",{"_index":747,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["relations[include",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations[table",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relationtypes",{"_index":390,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/User.html":{},"miscellaneous/typealiases.html":{}}}],["relocatedmilestonereachedflag.ts",{"_index":1096,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["relocatedmilestonereachedflag.ts:4",{"_index":1097,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag.ts:6",{"_index":1099,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag.ts:85",{"_index":1098,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["relocatedmilestonereachedflag1723758746739",{"_index":1094,"title":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["removeexpiredtokens",{"_index":1112,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["removeexpiredtokensevent",{"_index":1119,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["report",{"_index":730,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{}}}],["report.controller",{"_index":975,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["report.controller.ts",{"_index":955,"title":{},"body":{"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["report.controller.ts:22",{"_index":959,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:36",{"_index":961,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.controller.ts:53",{"_index":958,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["report.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["report.module.ts",{"_index":974,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["report.project",{"_index":731,"title":{},"body":{"entities/Project.html":{}}}],["report.service",{"_index":963,"title":{},"body":{"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{}}}],["report.service.ts",{"_index":977,"title":{},"body":{"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["report.service.ts:17",{"_index":979,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:23",{"_index":984,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:39",{"_index":985,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.service.ts:53",{"_index":982,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["report.ts",{"_index":937,"title":{},"body":{"entities/ProjectReport.html":{},"coverage.html":{}}}],["report.ts:25",{"_index":945,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:28",{"_index":952,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:31",{"_index":950,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:34",{"_index":943,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:37",{"_index":944,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:40",{"_index":946,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:43",{"_index":947,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report.ts:46",{"_index":949,"title":{},"body":{"entities/ProjectReport.html":{}}}],["report_date",{"_index":583,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["report_interval",{"_index":726,"title":{},"body":{"entities/Project.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["reportdate",{"_index":571,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/ProjectReport.html":{}}}],["reportinterval",{"_index":709,"title":{},"body":{"entities/Project.html":{}}}],["reports",{"_index":710,"title":{},"body":{"entities/Project.html":{}}}],["repository",{"_index":636,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["representation",{"_index":486,"title":{},"body":{"injectables/DateService.html":{}}}],["representing",{"_index":424,"title":{},"body":{"injectables/DateService.html":{}}}],["req",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies",{"_index":70,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.cookies[access_token_cookie",{"_index":72,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["req.cookies[refresh_token_cookie",{"_index":1090,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["request",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BadRequestException.html":{},"classes/NoAffectedRowException.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"miscellaneous/variables.html":{}}}],["request.exception",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["request.exception.ts",{"_index":363,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:5",{"_index":366,"title":{},"body":{"classes/BadRequestException.html":{}}}],["request.query.fields",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.fields[table",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.filter[field",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query.include",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":544,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["requires",{"_index":1170,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["res",{"_index":189,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.clearcookie(access_token_cookie",{"_index":250,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.clearcookie(refresh_token_cookie",{"_index":251,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.cookie(access_token_cookie",{"_index":233,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["res.cookie(refresh_token_cookie",{"_index":241,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reset",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["resource",{"_index":545,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["response",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{}}}],["responsebody",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":232,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["result.accesstoken",{"_index":234,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["result.affected",{"_index":248,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["result.refreshtoken",{"_index":242,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["resulted",{"_index":670,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["results",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":68,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/TokenWhitelistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":772,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["row",{"_index":674,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["row.exception",{"_index":649,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["row.exception.ts",{"_index":667,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["row.exception.ts:5",{"_index":668,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rows",{"_index":671,"title":{},"body":{"classes/NoAffectedRowException.html":{}}}],["rxjs",{"_index":209,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JsonApiInterceptor.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["samesite",{"_index":237,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["search",{"_index":1229,"title":{},"body":{"classes/UserDoesNotExistException.html":{}}}],["searchall",{"_index":1202,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["searchall(payload",{"_index":1206,"title":{},"body":{"controllers/UserController.html":{}}}],["searchall(searchterm",{"_index":1254,"title":{},"body":{"injectables/UserService.html":{}}}],["searchbody",{"_index":1207,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/typealiases.html":{}}}],["searchterm",{"_index":1211,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["searchterm.tolowercase",{"_index":1265,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["secretorkey",{"_index":80,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["secure",{"_index":236,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["select",{"_index":745,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["selected",{"_index":526,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["sequence_number",{"_index":951,"title":{},"body":{"entities/ProjectReport.html":{},"classes/ProjektarbeitAPI1723306279388.html":{}}}],["sequencenumber",{"_index":941,"title":{},"body":{"entities/ProjectReport.html":{}}}],["services/authentication.service",{"_index":217,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["services/crypto.service",{"_index":273,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["services/date.service",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/TokenWhitelistService.html":{}}}],["services/milestone",{"_index":618,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/ProjectMilestoneService.html":{}}}],["services/project",{"_index":803,"title":{},"body":{"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectService.html":{}}}],["services/project.service",{"_index":759,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{}}}],["services/token",{"_index":57,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["services/user.service",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["set",{"_index":1114,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["setzone(time_zone",{"_index":501,"title":{},"body":{"injectables/DateService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"modules/MilestoneEstimateModule.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"modules/ProjectMemberModule.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"modules/ProjectMilestoneModule.html":{},"injectables/ProjectMilestoneService.html":{},"modules/ProjectModule.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"modules/ProjectReportModule.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["sparsefieldsets",{"_index":755,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sparsefieldsets(project",{"_index":762,"title":{},"body":{"controllers/ProjectController.html":{}}}],["sparsefieldsets(projectmilestone",{"_index":879,"title":{},"body":{"controllers/ProjectMilestoneController.html":{}}}],["sparsefieldsets(projectreport",{"_index":966,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["sparsefieldsets(user",{"_index":1214,"title":{},"body":{"controllers/UserController.html":{}}}],["sparsefieldsetsfactory",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sql",{"_index":375,"title":{},"body":{"classes/BadRequestException.html":{}}}],["src/.../access",{"_index":1398,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../authentication.controller.ts",{"_index":1394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":1402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base",{"_index":1403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../base.exception.ts",{"_index":1401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../date.service.ts",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../filters.decorator.ts",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../includes.decorator.ts",{"_index":1397,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nullable.ts",{"_index":1400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../primary",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../promise",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../refresh",{"_index":1399,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sparse",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../success.ts",{"_index":1405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../token",{"_index":1406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.controller.ts",{"_index":1404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.decorator.ts",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/base",{"_index":378,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/authentication.controller.ts",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/authentication.controller.ts:34",{"_index":205,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:42",{"_index":192,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:72",{"_index":197,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/authentication.controller.ts:94",{"_index":201,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/controllers/milestone",{"_index":598,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"coverage.html":{}}}],["src/controllers/profile.controller.ts",{"_index":679,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/controllers/profile.controller.ts:23",{"_index":685,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/profile.controller.ts:37",{"_index":689,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/profile.controller.ts:55",{"_index":691,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/controllers/project",{"_index":795,"title":{},"body":{"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"coverage.html":{}}}],["src/controllers/project.controller.ts",{"_index":738,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/controllers/project.controller.ts:23",{"_index":749,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:37",{"_index":751,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:51",{"_index":742,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:61",{"_index":752,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/project.controller.ts:75",{"_index":743,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/controllers/user.controller.ts",{"_index":1199,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/controllers/user.controller.ts:26",{"_index":1205,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:38",{"_index":1209,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:57",{"_index":1204,"title":{},"body":{"controllers/UserController.html":{}}}],["src/decorators/filters.decorator.ts",{"_index":1302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/includes.decorator.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/primary",{"_index":1308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/decorators/sparse",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/milestone",{"_index":566,"title":{},"body":{"entities/MilestoneEstimate.html":{},"coverage.html":{}}}],["src/entities/project",{"_index":770,"title":{},"body":{"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/entities/project.ts",{"_index":704,"title":{},"body":{"entities/Project.html":{},"coverage.html":{}}}],["src/entities/project.ts:31",{"_index":711,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:34",{"_index":719,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:41",{"_index":723,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:44",{"_index":721,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:47",{"_index":728,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:50",{"_index":734,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:53",{"_index":725,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:56",{"_index":716,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:59",{"_index":732,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project.ts:62",{"_index":718,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/token",{"_index":1120,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["src/entities/user.ts",{"_index":1172,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/entities/user.ts:35",{"_index":1183,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:38",{"_index":1180,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:41",{"_index":1185,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:44",{"_index":1182,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:47",{"_index":1184,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:50",{"_index":1181,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:53",{"_index":1186,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:56",{"_index":1187,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:59",{"_index":1189,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.ts:62",{"_index":1192,"title":{},"body":{"entities/User.html":{}}}],["src/environment.ts",{"_index":1408,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/exceptions/bad",{"_index":362,"title":{},"body":{"classes/BadRequestException.html":{},"coverage.html":{}}}],["src/exceptions/base.exception.ts",{"_index":394,"title":{},"body":{"classes/BaseException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/exceptions/base.exception.ts:9",{"_index":400,"title":{},"body":{"classes/BaseException.html":{}}}],["src/exceptions/delete",{"_index":519,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{},"coverage.html":{}}}],["src/exceptions/incorrect",{"_index":528,"title":{},"body":{"classes/IncorrectCredentialsException.html":{},"coverage.html":{}}}],["src/exceptions/invalid",{"_index":537,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"coverage.html":{}}}],["src/exceptions/no",{"_index":666,"title":{},"body":{"classes/NoAffectedRowException.html":{},"coverage.html":{}}}],["src/exceptions/project",{"_index":786,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts",{"_index":1166,"title":{},"body":{"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["src/exceptions/unauthorized.exception.ts:5",{"_index":1167,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["src/exceptions/user",{"_index":1194,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{},"coverage.html":{}}}],["src/filters/all",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/guards/access",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/guards/refresh",{"_index":1087,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/interceptors/json",{"_index":548,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1319,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1723306279388",{"_index":1032,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"coverage.html":{}}}],["src/migrations/1723306299388",{"_index":1106,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["src/migrations/1723758746739",{"_index":1095,"title":{},"body":{"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{}}}],["src/modules/authentication.module.ts",{"_index":265,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/modules/milestone",{"_index":628,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["src/modules/profile.module.ts",{"_index":702,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/project",{"_index":817,"title":{},"body":{"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectReportModule.html":{}}}],["src/modules/project.module.ts",{"_index":934,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/modules/user.module.ts",{"_index":1234,"title":{},"body":{"modules/UserModule.html":{}}}],["src/pipes/valid",{"_index":1281,"title":{},"body":{"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["src/services/authentication.service.ts",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/authentication.service.ts:126",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:160",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:30",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:38",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:68",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:90",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:94",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/crypto.service.ts",{"_index":405,"title":{},"body":{"injectables/CryptoService.html":{},"coverage.html":{}}}],["src/services/crypto.service.ts:7",{"_index":408,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/services/date.service.ts",{"_index":411,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/date.service.ts:108",{"_index":474,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:13",{"_index":484,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:33",{"_index":459,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:61",{"_index":419,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/date.service.ts:77",{"_index":464,"title":{},"body":{"injectables/DateService.html":{}}}],["src/services/milestone",{"_index":633,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"coverage.html":{}}}],["src/services/project",{"_index":822,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"coverage.html":{}}}],["src/services/project.service.ts",{"_index":992,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/services/project.service.ts:115",{"_index":1003,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:129",{"_index":999,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:22",{"_index":996,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:30",{"_index":1001,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:53",{"_index":1002,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:69",{"_index":998,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/token",{"_index":1135,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/user.service.ts",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:19",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:26",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:34",{"_index":1255,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:47",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:51",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:55",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:63",{"_index":1253,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:69",{"_index":1256,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:87",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["src/strategies/access",{"_index":20,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/strategies/refresh",{"_index":1089,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tokens/access",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tokens/refresh",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/nullable.ts",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/success.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/promise",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{}}}],["status",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseException.html":{}}}],["statuscode",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["storedprocedureandevent.ts",{"_index":1107,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["storedprocedureandevent.ts:24",{"_index":1109,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent.ts:4",{"_index":1108,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent.ts:6",{"_index":1110,"title":{},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["storedprocedureandevent1723306299388",{"_index":1105,"title":{"classes/StoredProcedureAndEvent1723306299388.html":{}},"body":{"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{}}}],["strategies/access",{"_index":274,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategies/refresh",{"_index":276,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategy",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(subcode).padstart(3",{"_index":403,"title":{},"body":{"classes/BaseException.html":{}}}],["string).split",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sub",{"_index":65,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["subcode",{"_index":396,"title":{},"body":{"classes/BaseException.html":{}}}],["subentity",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getcolumns",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subentity.getrelationtypes",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":220,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{},"miscellaneous/typealiases.html":{}}}],["successhandler",{"_index":1375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":75,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/BaseException.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["super(httpstatus.bad_request",{"_index":369,"title":{},"body":{"classes/BadRequestException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/NoAffectedRowException.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserDoesNotExistException.html":{}}}],["super(httpstatus.method_not_allowed",{"_index":524,"title":{},"body":{"classes/DeleteProjectNotAllowedException.html":{}}}],["super(httpstatus.not_acceptable",{"_index":541,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{}}}],["super(httpstatus.unauthorized",{"_index":1168,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["support",{"_index":1384,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1385,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":801,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["switchmap((projectmember",{"_index":808,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["t",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t').concat('z",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["table",{"_index":1044,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.split",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.length",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables.slice(1",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tables[0",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":559,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["take(1",{"_index":561,"title":{},"body":{"injectables/JsonApiInterceptor.html":{},"controllers/UserController.html":{}}}],["takes",{"_index":421,"title":{},"body":{"injectables/DateService.html":{}}}],["this.authenticationservice.login(payload.email",{"_index":230,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authenticationservice.refreshtokens(useremail",{"_index":258,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.crypto.hash(accesstoken",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.crypto.hash(password",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.crypto.hash(payload.password",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{}}}],["this.crypto.hash(refreshtoken",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["this.crypto.hash(where.password",{"_index":1270,"title":{},"body":{"injectables/UserService.html":{}}}],["this.date.getcurrenttimestampwithoffset",{"_index":1156,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.getcurrenttimestampwithoffset('0m').replace",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.date.getexpirationdatewithoffset(env.access_token_expiration",{"_index":240,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.date.getexpirationdatewithoffset(env.refresh_token_expiration",{"_index":243,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.date.isaftercurrenttimestamp(tokenwhitelistentry.accesstokenexpirationdate",{"_index":1163,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.isaftercurrenttimestamp(tokenwhitelistentry.refreshtokenexpirationdate",{"_index":1164,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.date.parsedate(partialresource.estimationdate",{"_index":654,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.date.parsedate(partialresource.reportdate",{"_index":656,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.findbyid(id",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findbyuser(userid",{"_index":1154,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.findone",{"_index":1027,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.findone(id",{"_index":854,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{}}}],["this.generatetokens(registereduser.id",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(user.id",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetokens(userwithoutpassword.id",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getcurrenttimestampwithoffset('0m",{"_index":515,"title":{},"body":{"injectables/DateService.html":{}}}],["this.getexpirationdatewithoffset(offsetwithunit",{"_index":506,"title":{},"body":{"injectables/DateService.html":{}}}],["this.getrelations().concat(...this.getcolumns",{"_index":393,"title":{},"body":{"classes/BaseEntityWithExtras.html":{}}}],["this.httpadapterhost",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.id",{"_index":596,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["this.jwtservice.signasync",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.memberservice.createall",{"_index":1023,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.milestoneestimaterepository.delete",{"_index":664,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimaterepository.insert(partialresource",{"_index":652,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimaterepository.update",{"_index":660,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["this.milestoneestimates.update(id",{"_index":922,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.milestoneservice.createall",{"_index":1018,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmemberrepository.create(memberpartial",{"_index":844,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.findone",{"_index":842,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.findoneby",{"_index":847,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberrepository.update",{"_index":852,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectmemberservice.create(payload",{"_index":806,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["this.projectmilestonerepository.find",{"_index":908,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.findone",{"_index":909,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.insert(milestonepartial",{"_index":915,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.insert(payload",{"_index":912,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectmilestonerepository.update",{"_index":927,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["this.projectreportrepository.create(partialreport",{"_index":990,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.findone",{"_index":987,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportrepository.update",{"_index":988,"title":{},"body":{"injectables/ProjectReportService.html":{}}}],["this.projectreportservice.patchone(id",{"_index":969,"title":{},"body":{"controllers/ProjectReportController.html":{}}}],["this.projectrepository.create",{"_index":1014,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.find",{"_index":1011,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.findone",{"_index":1012,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.findoneby",{"_index":850,"title":{},"body":{"injectables/ProjectMemberService.html":{}}}],["this.projectrepository.update",{"_index":1026,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.tokenwhitelistrepository.create",{"_index":1158,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.delete",{"_index":1160,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.findone",{"_index":1161,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistrepository.remove(tokenwhitelistentry",{"_index":1155,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["this.tokenwhitelistservice.delete(userid",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.findbyuser(user.id",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.update",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.tokenwhitelistservice.verifyaccesstoken(payload.sub",{"_index":91,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["this.tokenwhitelistservice.verifyrefreshtoken(payload.sub",{"_index":1093,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["this.units[unit",{"_index":503,"title":{},"body":{"injectables/DateService.html":{}}}],["this.updatewhitelistedtokens",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userrepository",{"_index":1260,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.create(userdata",{"_index":1271,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1259,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":1267,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyemail(email",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.findbyid(projectmember.user.id",{"_index":809,"title":{},"body":{"controllers/ProjectMemberController.html":{}}}],["this.userservice.register",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throw",{"_index":92,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{}}}],["thrown",{"_index":791,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["time",{"_index":426,"title":{},"body":{"injectables/DateService.html":{}}}],["time_zone",{"_index":492,"title":{},"body":{"injectables/DateService.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DateService.html":{}}}],["tinyint",{"_index":1068,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["toformat('yyyy",{"_index":508,"title":{},"body":{"injectables/DateService.html":{}}}],["tojsdate",{"_index":504,"title":{},"body":{"injectables/DateService.html":{}}}],["token",{"_index":61,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.guard",{"_index":212,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["token.strategy",{"_index":275,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["token.strategy.ts",{"_index":21,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token.strategy.ts:19",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:27",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:40",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token_whitelist",{"_index":1045,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["tokenpair",{"_index":1178,"title":{},"body":{"entities/User.html":{}}}],["tokenpairandowner",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tokens/access",{"_index":60,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{}}}],["tokens/refresh",{"_index":219,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["tokensresponse",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenswithuserresponse",{"_index":216,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["tokenwhitelist",{"_index":270,"title":{"entities/TokenWhitelist.html":{}},"body":{"modules/AuthenticationModule.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"coverage.html":{}}}],["tokenwhitelist.user",{"_index":1191,"title":{},"body":{"entities/User.html":{}}}],["tokenwhitelistentry",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.accesstoken",{"_index":1162,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistentry.refreshtoken",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistrepository",{"_index":1142,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["tokenwhitelistservice",{"_index":32,"title":{"injectables/TokenWhitelistService.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TokenWhitelistService.html":{},"coverage.html":{},"index.html":{}}}],["transform",{"_index":1284,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["transform(value",{"_index":1285,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["tried",{"_index":792,"title":{},"body":{"classes/ProjectMemberAlreadyExistsException.html":{}}}],["true",{"_index":83,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"injectables/DateService.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["ts",{"_index":494,"title":{},"body":{"injectables/DateService.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/BadRequestException.html":{},"classes/BaseEntityWithExtras.html":{},"classes/BaseException.html":{},"injectables/CryptoService.html":{},"injectables/DateService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"classes/IncorrectCredentialsException.html":{},"classes/InvalidUUIDFormatException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"classes/NoAffectedRowException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1392,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":392,"title":{},"body":{"classes/BaseEntityWithExtras.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/BaseEntityWithExtras.html":{},"entities/MilestoneEstimate.html":{},"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"entities/ProjectMilestone.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"entities/ProjectReport.html":{},"controllers/ProjectReportController.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["typeormmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([milestoneestimate",{"_index":632,"title":{},"body":{"modules/MilestoneEstimateModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":936,"title":{},"body":{"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([projectmember",{"_index":821,"title":{},"body":{"modules/ProjectMemberModule.html":{}}}],["typeormmodule.forfeature([projectmilestone",{"_index":891,"title":{},"body":{"modules/ProjectMilestoneModule.html":{}}}],["typeormmodule.forfeature([projectreport",{"_index":976,"title":{},"body":{"modules/ProjectReportModule.html":{}}}],["typeormmodule.forfeature([tokenwhitelist",{"_index":278,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1236,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["types/nullable",{"_index":64,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"entities/ProjectReport.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{}}}],["types/success",{"_index":222,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["unauthorized",{"_index":1169,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["unauthorizedexception",{"_index":49,"title":{"classes/UnauthorizedException.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["undefined",{"_index":398,"title":{},"body":{"classes/BaseException.html":{},"injectables/JsonApiInterceptor.html":{},"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["unique",{"_index":1051,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["unit",{"_index":427,"title":{},"body":{"injectables/DateService.html":{}}}],["units",{"_index":413,"title":{},"body":{"injectables/DateService.html":{}}}],["unknown",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":1036,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["up(queryrunner",{"_index":1041,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{}}}],["update",{"_index":602,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":608,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"injectables/MilestoneEstimateService.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"controllers/ProjectMilestoneController.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["update(undefined",{"_index":1147,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["updated",{"_index":851,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updated.affected",{"_index":853,"title":{},"body":{"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectReportService.html":{},"injectables/ProjectService.html":{}}}],["updatedestimatessuccessfully",{"_index":917,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields",{"_index":643,"title":{},"body":{"injectables/MilestoneEstimateService.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectMilestoneService.html":{},"injectables/ProjectService.html":{}}}],["updatedfields.estimates",{"_index":918,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields.estimates.map((estimate",{"_index":920,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatedfields.id",{"_index":658,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateprofile",{"_index":683,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":690,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateresult",{"_index":659,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateresult.affected",{"_index":661,"title":{},"body":{"injectables/MilestoneEstimateService.html":{}}}],["updateresults",{"_index":923,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updateresults.includes(false",{"_index":925,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updates",{"_index":919,"title":{},"body":{"injectables/ProjectMilestoneService.html":{}}}],["updatewhitelistedtokens",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updatewhitelistedtokens(undefined",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["used",{"_index":428,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":208,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard",{"_index":244,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard)@post('logout",{"_index":196,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard",{"_index":252,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(refreshtokenguard)@post('refresh",{"_index":200,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":198,"title":{"entities/User.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/DeleteProjectNotAllowedException.html":{},"controllers/ProfileController.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"entities/ProjectMember.html":{},"classes/ProjectMemberAlreadyExistsException.html":{},"controllers/ProjectMemberController.html":{},"injectables/ProjectMemberService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"entities/TokenWhitelist.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"controllers/UserController.html":{},"classes/UserDoesNotExistException.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/UserController.html":{}}}],["user.id",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.matriculationnumber",{"_index":780,"title":{},"body":{"entities/ProjectMember.html":{}}}],["user.password",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{}}}],["user.phonenumber",{"_index":1219,"title":{},"body":{"controllers/UserController.html":{}}}],["user.projects",{"_index":724,"title":{},"body":{"entities/Project.html":{}}}],["user.remove",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":1272,"title":{},"body":{"injectables/UserService.html":{}}}],["user.tokenpair",{"_index":1130,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["user['email",{"_index":255,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['refreshtoken",{"_index":257,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user['sub",{"_index":767,"title":{},"body":{"controllers/ProjectController.html":{}}}],["user[attribute",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["user\\`(\\`id",{"_index":1075,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{}}}],["useralreadyexistsexception",{"_index":312,"title":{"classes/UserAlreadyExistsException.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["useralreadyexistsexception(email",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usercontroller",{"_index":1198,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["userdoesnotexistexception",{"_index":1221,"title":{"classes/UserDoesNotExistException.html":{}},"body":{"classes/UserDoesNotExistException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdoesnotexistexception(null",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":254,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["userentity",{"_index":694,"title":{},"body":{"controllers/ProfileController.html":{}}}],["userfactory",{"_index":1316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfromrequest",{"_index":1210,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"injectables/TokenWhitelistService.html":{}}}],["usermodule",{"_index":154,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["userrepository",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1200,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":283,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/ProfileController.html":{},"controllers/ProjectMemberController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["userwithoutpassword",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.email",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.id",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userwithoutpassword.password",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["utils/promise",{"_index":224,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"controllers/UserController.html":{}}}],["uuid",{"_index":538,"title":{},"body":{"classes/InvalidUUIDFormatException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuid.decorator",{"_index":593,"title":{},"body":{"entities/MilestoneEstimate.html":{},"entities/Project.html":{},"entities/ProjectMember.html":{},"entities/ProjectMilestone.html":{},"entities/ProjectReport.html":{},"entities/TokenWhitelist.html":{},"entities/User.html":{}}}],["uuid.decorator.ts",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuid.pipe",{"_index":616,"title":{},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{}}}],["uuid.pipe.ts",{"_index":1282,"title":{},"body":{"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["uuid.pipe.ts:6",{"_index":1286,"title":{},"body":{"classes/ValidUUIDPipe.html":{}}}],["validate",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/DateService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(@req",{"_index":84,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(request",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validuuidpipe",{"_index":614,"title":{"classes/ValidUUIDPipe.html":{}},"body":{"controllers/MilestoneEstimateController.html":{},"controllers/ProfileController.html":{},"controllers/ProjectController.html":{},"controllers/ProjectMemberController.html":{},"controllers/ProjectMilestoneController.html":{},"controllers/ProjectReportController.html":{},"classes/ValidUUIDPipe.html":{},"coverage.html":{}}}],["value",{"_index":432,"title":{},"body":{"injectables/DateService.html":{},"classes/InvalidUUIDFormatException.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{},"classes/StoredProcedureAndEvent1723306299388.html":{},"injectables/UserService.html":{},"classes/ValidUUIDPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["varchar",{"_index":1179,"title":{},"body":{"entities/User.html":{}}}],["varchar(255",{"_index":1047,"title":{},"body":{"classes/ProjektarbeitAPI1723306279388.html":{}}}],["variable",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1412,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":89,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["verifyaccesstoken",{"_index":1138,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyaccesstoken(userid",{"_index":1149,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken",{"_index":1139,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["verifyrefreshtoken(userid",{"_index":1151,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["version",{"_index":1387,"title":{},"body":{"properties.html":{}}}],["viewer",{"_index":783,"title":{},"body":{"entities/ProjectMember.html":{},"classes/ProjektarbeitAPI1723306279388.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["where.members",{"_index":1008,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.owner",{"_index":1007,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where.password",{"_index":1269,"title":{},"body":{"injectables/UserService.html":{}}}],["where?.password",{"_index":1268,"title":{},"body":{"injectables/UserService.html":{}}}],["whitelist",{"_index":272,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/TokenWhitelistService.html":{},"entities/User.html":{}}}],["whitelist.service",{"_index":58,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["whitelist.service.ts",{"_index":1136,"title":{},"body":{"injectables/TokenWhitelistService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whitelist.service.ts:18",{"_index":1141,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:26",{"_index":1148,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:53",{"_index":1144,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:61",{"_index":1146,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:71",{"_index":1150,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.service.ts:85",{"_index":1152,"title":{},"body":{"injectables/TokenWhitelistService.html":{}}}],["whitelist.ts",{"_index":1121,"title":{},"body":{"entities/TokenWhitelist.html":{},"coverage.html":{}}}],["whitelist.ts:12",{"_index":1124,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:19",{"_index":1125,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:22",{"_index":1127,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:29",{"_index":1128,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:33",{"_index":1131,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["whitelist.ts:9",{"_index":1126,"title":{},"body":{"entities/TokenWhitelist.html":{}}}],["wraps",{"_index":431,"title":{},"body":{"injectables/DateService.html":{},"miscellaneous/functions.html":{}}}],["wrong",{"_index":535,"title":{},"body":{"classes/IncorrectCredentialsException.html":{}}}],["yes",{"_index":1377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yyyy",{"_index":443,"title":{},"body":{"injectables/DateService.html":{}}}],["zoom",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/MilestoneEstimateModule.html":{},"modules/ProfileModule.html":{},"modules/ProjectMemberModule.html":{},"modules/ProjectMilestoneModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectReportModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/access-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/access-token.strategy.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (req: Request) => string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/access-token.strategy.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { ACCESS_TOKEN_COOKIE } from '@Tokens/access-token-cookie';\nimport { Nullable } from '@Types/nullable';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n\tpublic static fromCookie() {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, ACCESS_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[ACCESS_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tAccessTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_ACCESS_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Request, payload: JwtPayload) {\n\t\tlet accessToken: Nullable = AccessTokenStrategy.fromCookie()(request);\n\n\t\tif (!accessToken) {\n\t\t\taccessToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\t\t}\n\n\t\tconst verified = await this.tokenWhitelistService.verifyAccessToken(payload.sub, accessToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost, date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/filters/all-exceptions.filter.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/all-exceptions.filter.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\nimport { DateService } from '@Services/date.service';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\tconstructor(\n\t\tprivate readonly httpAdapterHost: HttpAdapterHost,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\tcatch(exception: any, host: ArgumentsHost): void {\n\t\tconst { httpAdapter } = this.httpAdapterHost;\n\t\tconst context = host.switchToHttp();\n\t\tconst statusCode =\n\t\t\texception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tconst responseBody = {\n\t\t\ttimestamp: this.date.getCurrentTimestampWithOffset('0m').replace(' ', 'T').concat('Z'),\n\t\t\tpath: httpAdapter.getRequestUrl(context.getRequest()),\n\t\t\t...(Object.hasOwn(exception, 'response') ? exception.response : exception),\n\t\t\tstatus: statusCode,\n\t\t};\n\n\t\thttpAdapter.reply(context.getResponse(), responseBody, statusCode);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                        \n                            MilestoneEstimateModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            ProjectMemberModule\n                        \n                        \n                            ProjectMilestoneModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            ProjectReportModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DataSource } from 'typeorm';\n\nimport config from './config';\nimport { AuthenticationModule } from '@Modules/authentication.module';\nimport { MilestoneEstimateModule } from '@Modules/milestone-estimate.module';\nimport { ProfileModule } from '@Modules/profile.module';\nimport { ProjectModule } from '@Modules/project.module';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { ProjectMilestoneModule } from '@Modules/project-milestone.module';\nimport { ProjectReportModule } from '@Modules/project-report.module';\nimport { UserModule } from '@Modules/user.module';\n\n@Module({\n\timports: [\n\t\tTypeOrmModule.forRootAsync({\n\t\t\tuseFactory: () => config,\n\t\t}),\n\t\tAuthenticationModule,\n\t\tMilestoneEstimateModule,\n\t\tProfileModule,\n\t\tProjectMemberModule,\n\t\tProjectMilestoneModule,\n\t\tProjectModule,\n\t\tProjectReportModule,\n\t\tUserModule,\n\t],\n})\nexport class AppModule {\n\tconstructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                refreshTokens\n                            \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: AuthenticationPayload, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            AuthenticationPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(user: Express.User, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/authentication.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res, UseGuards } from '@nestjs/common';\n\nimport { Response } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { User } from '@Decorators/user.decorator';\nimport env from '@Environment';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { RefreshTokenGuard } from '@Guards/refresh-token.guard';\nimport {\n\tAuthenticationService,\n\tRegisterPayload,\n\tTokensWithUserResponse,\n} from '@Services/authentication.service';\nimport { DateService } from '@Services/date.service';\nimport { ACCESS_TOKEN_COOKIE } from '@Tokens/access-token-cookie';\nimport { REFRESH_TOKEN_COOKIE } from '@Tokens/refresh-token-cookie';\nimport { Success as LogoutResult } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\ntype AuthenticationPayload = {\n\temail: string;\n\tpassword: string;\n};\n\n@Controller('auth')\nexport class AuthenticationController {\n\tconstructor(\n\t\tprivate readonly authenticationService: AuthenticationService,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\t@Post('register')\n\tregister(\n\t\t@Body()\n\t\tpayload: RegisterPayload,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.register(payload));\n\t}\n\n\t@Post('login')\n\tlogin(\n\t\t@Body()\n\t\tpayload: AuthenticationPayload,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.login(payload.email, payload.password),\n\t\t\t(result) => {\n\t\t\t\tres.cookie(ACCESS_TOKEN_COOKIE, result.accessToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.ACCESS_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\tres.cookie(REFRESH_TOKEN_COOKIE, result.refreshToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.REFRESH_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n\n\t@UseGuards(AccessTokenGuard)\n\t@Post('logout')\n\tlogout(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\treturn promiseToObservable(this.authenticationService.logout(user['sub']), (result) => {\n\t\t\tlet success = false;\n\n\t\t\tif (result.affected && result.affected === 1) success = true;\n\n\t\t\tif (success) {\n\t\t\t\tres.clearCookie(ACCESS_TOKEN_COOKIE);\n\t\t\t\tres.clearCookie(REFRESH_TOKEN_COOKIE);\n\t\t\t}\n\n\t\t\treturn { success } as LogoutResult;\n\t\t}) as Observable;\n\t}\n\n\t@UseGuards(RefreshTokenGuard)\n\t@Post('refresh')\n\trefreshTokens(\n\t\t@User()\n\t\tuser: Express.User,\n\t\t@Res({ passthrough: true })\n\t\tres: Response,\n\t): Observable {\n\t\tconst userEmail = user['email'];\n\t\tconst refreshToken = user['refreshToken'];\n\n\t\treturn promiseToObservable(\n\t\t\tthis.authenticationService.refreshTokens(userEmail, refreshToken),\n\t\t\t(result) => {\n\t\t\t\tres.cookie(ACCESS_TOKEN_COOKIE, result.accessToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.ACCESS_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\tres.cookie(REFRESH_TOKEN_COOKIE, result.refreshToken, {\n\t\t\t\t\thttpOnly: true,\n\t\t\t\t\tsecure: true,\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\texpires: this.date.getExpirationDateWithOffset(env.REFRESH_TOKEN_EXPIRATION),\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CryptoService\n                        \n                        \n                            DateService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                        \n                            TokenWhitelistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AuthenticationController } from '@Controllers/authentication.controller';\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport { UserModule } from '@Modules/user.module';\nimport { AuthenticationService } from '@Services/authentication.service';\nimport { CryptoService } from '@Services/crypto.service';\nimport { DateService } from '@Services/date.service';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { AccessTokenStrategy } from '@Strategies/access-token.strategy';\nimport { RefreshTokenStrategy } from '@Strategies/refresh-token.strategy';\n\n@Module({\n\timports: [\n\t\tUserModule,\n\t\tPassportModule,\n\t\tJwtModule.register({}),\n\t\tTypeOrmModule.forFeature([TokenWhitelist]),\n\t],\n\tproviders: [\n\t\tAuthenticationService,\n\t\tTokenWhitelistService,\n\t\tCryptoService,\n\t\tDateService,\n\t\tAccessTokenStrategy,\n\t\tRefreshTokenStrategy,\n\t],\n\texports: [AuthenticationService],\n\tcontrollers: [AuthenticationController],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Private\n                                    Async\n                                updateWhitelistedTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, tokenWhitelistService: TokenWhitelistService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/authentication.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(userId: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(email: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RegisterPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        updateWhitelistedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWhitelistedTokens(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\n\nimport { DeepPartial, DeleteResult } from 'typeorm';\n\nimport { User } from '@Entities/user';\nimport env from '@Environment';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { IncorrectCredentialsException } from '@Exceptions/incorrect-credentials.exception';\nimport { UserAlreadyExistsException } from '@Exceptions/user-already-exists.exception';\nimport { CryptoService } from '@Services/crypto.service';\nimport { TokenPairAndOwner, TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { UserService } from '@Services/user.service';\n\nexport type RegisterPayload = DeepPartial & {\n\temail: string;\n\tpassword: string;\n};\n\nexport type TokensResponse = {\n\taccessToken: string;\n\trefreshToken: string;\n};\n\nexport type TokensWithUserResponse = TokensResponse & {\n\tuser: DeepPartial;\n};\n\n@Injectable()\nexport class AuthenticationService {\n\tconstructor(\n\t\tprivate readonly userService: UserService,\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly tokenWhitelistService: TokenWhitelistService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync register({\n\t\temail,\n\t\tpassword,\n\t\t...userData\n\t}: RegisterPayload): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (user !== null) {\n\t\t\tthrow new UserAlreadyExistsException(email, null);\n\t\t}\n\n\t\tconst registeredUser = await this.userService.register({\n\t\t\temail,\n\t\t\tpassword: this.crypto.hash(password),\n\t\t\t...userData,\n\t\t});\n\t\tdelete registeredUser.password;\n\n\t\tconst tokens = await this.generateTokens(registeredUser.id, registeredUser.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: registeredUser.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: registeredUser,\n\t\t};\n\t}\n\n\tasync login(email: string, password: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user || user.password !== this.crypto.hash(password)) {\n\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t}\n\n\t\tconst userWithoutPassword: DeepPartial = user;\n\t\tdelete userWithoutPassword.password;\n\n\t\tconst tokens = await this.generateTokens(userWithoutPassword.id, userWithoutPassword.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: userWithoutPassword.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser: userWithoutPassword,\n\t\t};\n\t}\n\n\tlogout(userId: string): Promise {\n\t\treturn this.tokenWhitelistService.delete(userId);\n\t}\n\n\tasync refreshTokens(email: string, refreshToken: string): Promise {\n\t\tconst user = await this.userService.findByEmail(email);\n\n\t\tif (!user) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tdelete user.password;\n\t\tconst tokenWhitelistEntry = await this.tokenWhitelistService.findByUser(user.id);\n\n\t\tif (!tokenWhitelistEntry) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\n\t\tif (hashedRefreshedToken !== tokenWhitelistEntry.refreshToken) {\n\t\t\tthrow new ForbiddenException('Access Denied');\n\t\t}\n\n\t\tconst tokens = await this.generateTokens(user.id, user.email);\n\t\tawait this.updateWhitelistedTokens({\n\t\t\t...tokens,\n\t\t\tuserId: user.id,\n\t\t});\n\n\t\treturn {\n\t\t\t...tokens,\n\t\t\tuser,\n\t\t};\n\t}\n\n\tprivate async generateTokens(userId: string, email: string): Promise {\n\t\ttry {\n\t\t\tconst [accessToken, refreshToken] = await Promise.all([\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_ACCESS_SECRET,\n\t\t\t\t\t\texpiresIn: env.ACCESS_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\tthis.jwtService.signAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: userId,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsecret: env.JWT_REFRESH_SECRET,\n\t\t\t\t\t\texpiresIn: env.REFRESH_TOKEN_EXPIRATION,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\treturn {\n\t\t\t\taccessToken,\n\t\t\t\trefreshToken,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new BadRequestException(error);\n\t\t}\n\t}\n\n\tprivate async updateWhitelistedTokens({\n\t\trefreshToken,\n\t\taccessToken,\n\t\tuserId,\n\t}: TokenPairAndOwner): Promise {\n\t\tconst hashedRefreshedToken = this.crypto.hash(refreshToken);\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\n\t\tawait this.tokenWhitelistService.update({\n\t\t\tuserId,\n\t\t\taccessToken: hashedAccessToken,\n\t\t\trefreshToken: hashedRefreshedToken,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestException.html":{"url":"classes/BadRequestException.html","title":"class - BadRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/bad-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/bad-request.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class BadRequestException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 1, {\n\t\t\tmessage: 'Bad Request',\n\t\t\tdescription: 'An error occured while performing the sql query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithExtras.html":{"url":"classes/BaseEntityWithExtras.html","title":"class - BaseEntityWithExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithExtras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/base-entity-with-extras.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColumns\n                            \n                            \n                                    Static\n                                getProperties\n                            \n                            \n                                    Static\n                                getRelations\n                            \n                            \n                                    Static\n                                getRelationTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getColumns\n                        \n                    \n                \n            \n            \n                \n                        \n                    getColumns()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProperties()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getRelationTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelationTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/base-entity-with-extras.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         RelationTypes\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport type RelationTypes = {\n\t[property: string]: typeof BaseEntityWithExtras;\n};\n\nexport class BaseEntityWithExtras extends BaseEntity {\n\tpublic static getRelationTypes(): RelationTypes {\n\t\treturn {};\n\t}\n\n\tpublic static getRelations(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getColumns(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic static getProperties(): string[] {\n\t\treturn this.getRelations().concat(...this.getColumns());\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseException.html":{"url":"classes/BaseException.html","title":"class - BaseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/base.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: HttpStatus, subCode: number, undefined: Options)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/base.exception.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\ntype Options = {\n\tmessage: string;\n\tdescription: string;\n\tcause: any;\n};\n\nexport class BaseException extends HttpException {\n\tconstructor(status: HttpStatus, subCode: number, { message, description, cause }: Options) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tstatus,\n\t\t\t\tmessage,\n\t\t\t\tdescription,\n\t\t\t\tcode: `HSEL-${status}-${String(subCode).padStart(3, '0')}`,\n\t\t\t},\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tcause,\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptoService.html":{"url":"injectables/CryptoService.html","title":"injectable - CryptoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/crypto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(source: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/crypto.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class CryptoService {\n\thash(source: string): string {\n\t\treturn crypto.SHA256(source).toString(crypto.enc.Hex);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/date.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                UNITS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTimestampWithOffset\n                            \n                            \n                                getExpirationDateWithOffset\n                            \n                            \n                                isAfterCurrentTimestamp\n                            \n                            \n                                parseDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentTimestampWithOffset\n                        \n                    \n                \n            \n            \n                \ngetCurrentTimestampWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:61\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. It wraps the function getExpirationDateWithOffset and\nreturns the value as a string. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time in the following format:\n// yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\nconst accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string of the current timestamp incremented by the given offset and time unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpirationDateWithOffset\n                        \n                    \n                \n            \n            \n                \ngetExpirationDateWithOffset(offsetWithUnit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:33\n                        \n                    \n\n\n            \n                \n                        This function takes one argument representing an offset and a time unit which will be used\nto increment the current timestamp. For example, it can be used to get an expiration date for\nthe access token which would be used as follows:\nExample :const date = new DateService();\n// This line of code will get a date 30 minutes ahead of time as a JavaScript date object\nconst accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offsetWithUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                A javascript Date of the current time incremented by the given offset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAfterCurrentTimestamp\n                        \n                    \n                \n            \n            \n                \nisAfterCurrentTimestamp(timestamp: string | Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:77\n                        \n                    \n\n\n            \n                \n                        This function checks if the given timestamp is after the current time. It can be used to\nvalidate an authorization token so that it has not yet expired.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                        string | Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The timestamp to check if it's behind the current time.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if it's behind the current time, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseDate\n                        \n                    \n                \n            \n            \n                \nparseDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/date.service.ts:108\n                        \n                    \n\n\n            \n                \n                        This function takes a javascript date object as input and parses it to be a string with the\nformat 'yyyy-MM-dd'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The date to be parsed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The parsed date in the format 'yyyy-MM-dd'.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        UNITS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/services/date.service.ts:13\n                        \n                    \n\n            \n                \n                    This object contains the representation for one day and one minute in milliseconds.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DateTime } from 'luxon';\n\nconst TIME_ZONE = 'Europe/Berlin';\n\n@Injectable()\nexport class DateService {\n\t/**\n\t * @description\n\t * This object contains the representation for one day and one minute in milliseconds.\n\t */\n\tprivate readonly UNITS = {\n\t\td: 24 * 60 * 60 * 1000,\n\t\tm: 60 * 1000,\n\t};\n\n\t/**\n\t * @description\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time as a JavaScript date object\n\t * const accessTokenExpiration = date.getExpirationDateWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A javascript Date of the current time incremented by the given offset.\n\t */\n\tgetExpirationDateWithOffset(offsetWithUnit: string): Date {\n\t\tconst regex = new RegExp(/\\d*/);\n\t\tconst offset = parseInt(regex.exec(offsetWithUnit)[0]);\n\t\tconst unit = offsetWithUnit.replace(offset.toString(), '');\n\n\t\treturn DateTime.local()\n\t\t\t.setZone(TIME_ZONE)\n\t\t\t.plus(offset * (this.UNITS[unit] ?? 1))\n\t\t\t.toJSDate();\n\t}\n\n\t/**\n\t * @description\n\t * This function takes one argument representing an offset and a time unit which will be used\n\t * to increment the current timestamp. It wraps the function `getExpirationDateWithOffset` and\n\t * returns the value as a string. For example, it can be used to get an expiration date for\n\t * the access token which would be used as follows:\n\t *\n\t * ```ts\n\t * const date = new DateService();\n\t * // This line of code will get a date 30 minutes ahead of time in the following format:\n\t * // yyyy-MM-dd HH:mm:ss ~> example timestamp: 2024-05-30 15:37:28\n\t * const accessTokenExpiration = date.getCurrentTimestampWithOffset('30m');\n\t * ```\n\t *\n\t * @param offsetWithUnit The offset and the time unit - eg. 30m ~> meaning 30 minutes.\n\t * @returns A string of the current timestamp incremented by the given offset and time unit.\n\t */\n\tgetCurrentTimestampWithOffset(offsetWithUnit: string): string {\n\t\tconst jsDate = this.getExpirationDateWithOffset(offsetWithUnit);\n\n\t\treturn DateTime.fromJSDate(jsDate)\n\t\t\t.setZone(TIME_ZONE)\n\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss', { locale: 'de-DE' });\n\t}\n\n\t/**\n\t * @description\n\t * This function checks if the given timestamp is after the current time. It can be used to\n\t * validate an authorization token so that it has not yet expired.\n\t *\n\t * @param timestamp The timestamp to check if it's behind the current time.\n\t * @returns `true` if it's behind the current time, otherwise `false`\n\t */\n\tisAfterCurrentTimestamp(timestamp: string | Date): boolean {\n\t\tlet date: string;\n\n\t\tif (timestamp instanceof Date) {\n\t\t\tdate = DateTime.fromJSDate(timestamp)\n\t\t\t\t.setZone(TIME_ZONE)\n\t\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss', { locale: 'de-DE' });\n\t\t} else {\n\t\t\tdate = timestamp;\n\t\t}\n\n\t\tconst given = DateTime.fromFormat(date, 'yyyy-MM-dd HH:mm:ss', {\n\t\t\tlocale: 'de-DE',\n\t\t}).setZone(TIME_ZONE);\n\t\tconst now = DateTime.fromFormat(\n\t\t\tthis.getCurrentTimestampWithOffset('0m'),\n\t\t\t'yyyy-MM-dd HH:mm:ss',\n\t\t\t{ locale: 'de-DE' },\n\t\t).setZone(TIME_ZONE);\n\n\t\treturn given.diff(now).toObject().milliseconds > 0;\n\t}\n\n\t/**\n\t * @description\n\t * This function takes a javascript date object as input and parses it to be a string with the\n\t * format 'yyyy-MM-dd'.\n\t *\n\t * @param date The date to be parsed.\n\t * @returns The parsed date in the format 'yyyy-MM-dd'.\n\t */\n\tparseDate(date: Date): string {\n\t\treturn DateTime.fromJSDate(date).setZone(TIME_ZONE).toFormat('yyyy-MM-dd');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProjectNotAllowedException.html":{"url":"classes/DeleteProjectNotAllowedException.html","title":"class - DeleteProjectNotAllowedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProjectNotAllowedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/delete-project-not-allowed.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/delete-project-not-allowed.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from '@Exceptions/base.exception';\n\nexport class DeleteProjectNotAllowedException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.METHOD_NOT_ALLOWED, 1, {\n\t\t\tmessage: 'Project cannot be deleted',\n\t\t\tdescription:\n\t\t\t\t'The selected project cannot be deleted because the user is not the owner of that project.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectCredentialsException.html":{"url":"classes/IncorrectCredentialsException.html","title":"class - IncorrectCredentialsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectCredentialsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/incorrect-credentials.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/incorrect-credentials.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class IncorrectCredentialsException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 2, {\n\t\t\tmessage: 'Incorrect Credentials',\n\t\t\tdescription: 'The given password or the email address is wrong.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUUIDFormatException.html":{"url":"classes/InvalidUUIDFormatException.html","title":"class - InvalidUUIDFormatException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUUIDFormatException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/invalid-uuid-format.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/invalid-uuid-format.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseException } from '@Exceptions/base.exception';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class InvalidUUIDFormatException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.NOT_ACCEPTABLE, 1, {\n\t\t\tmessage: 'The value of the parameter is malformed',\n\t\t\tdescription:\n\t\t\t\t'The parameter for the requested resource expected an uuid but it was malformed.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonApiInterceptor.html":{"url":"injectables/JsonApiInterceptor.html","title":"injectable - JsonApiInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonApiInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/json-api.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/json-api.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\n\nimport { map, Observable, take } from 'rxjs';\n\n@Injectable()\nexport class JsonApiInterceptor implements NestInterceptor {\n\tintercept(_: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttake(1),\n\t\t\tmap((data) => {\n\t\t\t\tif (data === null || data === undefined) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn { data };\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MilestoneEstimate.html":{"url":"entities/MilestoneEstimate.html","title":"entity - MilestoneEstimate","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MilestoneEstimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/milestone-estimate.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                milestone\n                            \n                            \n                                    \n                                reportDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'estimation_date', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectMilestone\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, m => m.estimates, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/milestone-estimate.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { ProjectMilestone } from '@Entities/project-milestone';\n\n@Entity('milestone_estimate')\nexport class MilestoneEstimate extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tmilestone: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['milestone'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'reportDate', 'estimationDate'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ name: 'estimation_date', type: 'date' })\n\testimationDate: string;\n\n\t@ManyToOne(() => ProjectMilestone, (m) => m.estimates, { onDelete: 'CASCADE' })\n\tmilestone: ProjectMilestone;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MilestoneEstimateController.html":{"url":"controllers/MilestoneEstimateController.html","title":"controller - MilestoneEstimateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MilestoneEstimateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/milestone-estimate.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                milestone/estimates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/milestone-estimate.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial } from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('milestone/estimates')\nexport class MilestoneEstimateController {\n\tconstructor(private readonly milestoneEstimateService: MilestoneEstimateService) {}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.create(payload));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.update(id, payload), (success) => {\n\t\t\treturn {\n\t\t\t\tsuccess,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.milestoneEstimateService.delete(id), (success) => {\n\t\t\treturn {\n\t\t\t\tsuccess,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MilestoneEstimateModule.html":{"url":"modules/MilestoneEstimateModule.html","title":"module - MilestoneEstimateModule","body":"\n                   \n\n\n\n\n    Modules\n    MilestoneEstimateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\ncluster_MilestoneEstimateModule_exports\n\n\n\n\nMilestoneEstimateService \n\nMilestoneEstimateService \n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\nMilestoneEstimateService  -->\n\nMilestoneEstimateModule->MilestoneEstimateService \n\n\n\n\n\nDateService\n\nDateService\n\nMilestoneEstimateModule -->\n\nDateService->MilestoneEstimateModule\n\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/milestone-estimate.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DateService\n                        \n                        \n                            MilestoneEstimateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MilestoneEstimateController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MilestoneEstimateService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MilestoneEstimateController } from '@Controllers/milestone-estimate.controller';\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { DateService } from '@Services/date.service';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([MilestoneEstimate])],\n\tproviders: [MilestoneEstimateService, DateService],\n\tcontrollers: [MilestoneEstimateController],\n\texports: [MilestoneEstimateService],\n})\nexport class MilestoneEstimateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MilestoneEstimateService.html":{"url":"injectables/MilestoneEstimateService.html","title":"injectable - MilestoneEstimateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MilestoneEstimateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/milestone-estimate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(milestoneEstimateRepository: Repository, date: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/milestone-estimate.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        milestoneEstimateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(partialResource: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialResource\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/milestone-estimate.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeepPartial, Repository } from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { DateService } from '@Services/date.service';\n\n@Injectable()\nexport class MilestoneEstimateService {\n\tconstructor(\n\t\t@InjectRepository(MilestoneEstimate)\n\t\tprivate readonly milestoneEstimateRepository: Repository,\n\t\tprivate readonly date: DateService,\n\t) {}\n\n\tasync create(partialResource: DeepPartial): Promise {\n\t\tconst insertResult = await this.milestoneEstimateRepository.insert(partialResource);\n\n\t\tif (partialResource.estimationDate) {\n\t\t\tif ((partialResource.estimationDate as any) instanceof Date) {\n\t\t\t\tpartialResource.estimationDate = this.date.parseDate(partialResource.estimationDate as any);\n\t\t\t}\n\t\t}\n\n\t\tif (partialResource.reportDate) {\n\t\t\tif ((partialResource.reportDate as any) instanceof Date) {\n\t\t\t\tpartialResource.reportDate = this.date.parseDate(partialResource.reportDate as any);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...partialResource,\n\t\t\tid: insertResult.identifiers[0].id,\n\t\t} as MilestoneEstimate;\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tdelete updatedFields.id;\n\t\t\tconst updateResult = await this.milestoneEstimateRepository.update({ id }, updatedFields);\n\n\t\t\tif (updateResult.affected && updateResult.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst deleteResult = await this.milestoneEstimateRepository.delete({ id });\n\n\t\t\tif (deleteResult.affected && deleteResult.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoAffectedRowException.html":{"url":"classes/NoAffectedRowException.html","title":"class - NoAffectedRowException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoAffectedRowException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/no-affected-row.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/no-affected-row.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class NoAffectedRowException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 3, {\n\t\t\tmessage: 'The request resulted in no affected rows.',\n\t\t\tdescription:\n\t\t\t\t'This exception can either be caused since actually no row was affected or the database ' +\n\t\t\t\t'type does not provide the information if rows were affected by the query.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                getProfileById\n                            \n                            \n                                    \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileById(id: string, where: FindOptionsWhere)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/profile.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { User } from '@Decorators/user.decorator';\nimport { User as UserEntity } from '@Entities/user';\nimport { IncorrectCredentialsException } from '@Exceptions/incorrect-credentials.exception';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { UserService } from '@Services/user.service';\nimport { Nullable } from '@Types/nullable';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('profile')\nexport class ProfileController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tgetProfile(\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findById(user['sub']), (user) => {\n\t\t\tif (user) {\n\t\t\t\tdelete user.password;\n\t\t\t}\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Get(':id')\n\tgetProfileById(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(UserEntity)\n\t\twhere: FindOptionsWhere,\n\t): Observable> {\n\t\treturn promiseToObservable(this.userService.findByIdAndCredentials(id, where), (user) => {\n\t\t\tif (!user) {\n\t\t\t\tthrow new IncorrectCredentialsException(null);\n\t\t\t}\n\n\t\t\tdelete user.password;\n\n\t\t\treturn user;\n\t\t});\n\t}\n\n\t@Patch(':id')\n\tupdateProfile(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.update(id, payload), (user) => {\n\t\t\tif (user) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProjectMemberModule->ProfileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectMemberModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ProfileController } from '@Controllers/profile.controller';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { UserModule } from '@Modules/user.module';\n\n@Module({\n\timports: [UserModule, ProjectMemberModule],\n\tproviders: [],\n\tcontrollers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                members\n                            \n                            \n                                    \n                                milestones\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                officialEnd\n                            \n                            \n                                    \n                                officialStart\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                reportInterval\n                            \n                            \n                                    \n                                reports\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, member => member.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMilestone[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, milestone => milestone.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_end', nullable: true, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        officialStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'official_start', type: 'date', default: () => CURRENT_DATE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.projects, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_interval', default: 7})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectReport[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, report => report.project)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { ProjectMember } from '@Entities/project-member';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { ProjectReport } from '@Entities/project-report';\nimport { User } from '@Entities/user';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('project')\nexport class Project extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\towner: User,\n\t\t\tmembers: ProjectMember,\n\t\t\treports: ProjectReport,\n\t\t\tmilestones: ProjectMilestone,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['owner', 'members', 'reports', 'milestones'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name', 'officialStart', 'officialEnd', 'reportInterval', 'type'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@Column({\n\t\tname: 'official_start',\n\t\ttype: 'date',\n\t\tdefault: () => 'CURRENT_DATE',\n\t})\n\tofficialStart: string;\n\n\t@Column({ name: 'official_end', nullable: true, type: 'date' })\n\tofficialEnd: Nullable;\n\n\t@Column({ name: 'report_interval', default: 7 })\n\treportInterval: number;\n\n\t@Column({ nullable: true })\n\ttype: string;\n\n\t@ManyToOne(() => User, (user) => user.projects, { onDelete: 'CASCADE' })\n\towner: User;\n\n\t@OneToMany(() => ProjectMember, (member) => member.project)\n\tmembers: ProjectMember[];\n\n\t@OneToMany(() => ProjectReport, (report) => report.project)\n\treports: ProjectReport[];\n\n\t@OneToMany(() => ProjectMilestone, (milestone) => milestone.project)\n\tmilestones: ProjectMilestone[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations, user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { DeepPartial, FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { User } from '@Decorators/user.decorator';\nimport { Project } from '@Entities/project';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectService } from '@Services/project.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('projects')\nexport class ProjectController {\n\tconstructor(private readonly projectService: ProjectService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findAll(user['sub'], where, select, relations));\n\t}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(Project)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(Project)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(Project)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.findOne(id, where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.create(payload, user['sub']));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@User()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectService.delete(id, user['sub']), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMember.html":{"url":"entities/ProjectMember.html","title":"entity - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-member.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ProjectRole})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.matriculationNumber, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-member.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { User } from '@Entities/user';\n\nexport enum ProjectRole {\n\tContributor = 'contributor',\n\tViewer = 'viewer',\n}\n\n@Entity('project_member')\nexport class ProjectMember extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tuser: User,\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['user', 'project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'role'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ type: 'enum', enum: ProjectRole })\n\trole: ProjectRole;\n\n\t@ManyToOne(() => User, (user) => user.matriculationNumber, { onDelete: 'CASCADE' })\n\tuser: User;\n\n\t@ManyToOne(() => Project, (project) => project.members, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectMemberAlreadyExistsException.html":{"url":"classes/ProjectMemberAlreadyExistsException.html","title":"class - ProjectMemberAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectMemberAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/project-member-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/project-member-already-exists.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class ProjectMemberAlreadyExistsException extends BaseException {\n\tconstructor(cause: any = null) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 6, {\n\t\t\tmessage: 'The project member already exists.',\n\t\t\tdescription:\n\t\t\t\t'This exception was thrown because the user tried to add a new project member, .' +\n\t\t\t\t'who is already a member of the project.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMemberController.html":{"url":"controllers/ProjectMemberController.html","title":"controller - ProjectMemberController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMemberController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-member.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/members\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-member.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable, switchMap } from 'rxjs';\nimport { DeepPartial } from 'typeorm';\n\nimport { ProjectMember } from '@Entities/project-member';\nimport { User } from '@Entities/user';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectMemberService } from '@Services/project-member.service';\nimport { UserService } from '@Services/user.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/members')\nexport class ProjectMemberController {\n\tconstructor(\n\t\tprivate readonly projectMemberService: ProjectMemberService,\n\t\tprivate readonly userService: UserService,\n\t) {}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.projectMemberService.create(payload),\n\t\t).pipe(\n\t\t\tswitchMap((projectMember) => {\n\t\t\t\treturn promiseToObservable(\n\t\t\t\t\tthis.userService.findById(projectMember.user.id),\n\t\t\t\t\t(user) => {\n\t\t\t\t\t\tdelete user.password;\n\t\t\t\t\t\tprojectMember.user = user;\n\n\t\t\t\t\t\treturn projectMember;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t) as Observable;\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMemberService.delete(id), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMemberModule.html":{"url":"modules/ProjectMemberModule.html","title":"module - ProjectMemberModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMemberModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\ncluster_ProjectMemberModule_exports\n\n\n\ncluster_ProjectMemberModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nProjectMemberModule -->\n\nUserModule->ProjectMemberModule\n\n\n\n\n\nProjectMemberService \n\nProjectMemberService \n\nProjectMemberService  -->\n\nProjectMemberModule->ProjectMemberService \n\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-member.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMemberService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMemberController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectMemberService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMemberController } from '@Controllers/project-member.controller';\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { UserModule } from '@Modules/user.module';\nimport { ProjectMemberService } from '@Services/project-member.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectMember, Project]), UserModule],\n\tproviders: [ProjectMemberService],\n\tcontrollers: [ProjectMemberController],\n\texports: [ProjectMemberService],\n})\nexport class ProjectMemberModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMemberService.html":{"url":"injectables/ProjectMemberService.html","title":"injectable - ProjectMemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                createAll\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMemberRepository: Repository, projectRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-member.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMemberRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(memberPartial: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberPartial\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(memberPartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberPartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-member.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { ProjectMemberAlreadyExistsException } from '@Exceptions/project-member-already-exists.exception';\n\n@Injectable()\nexport class ProjectMemberService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMember)\n\t\tprivate readonly projectMemberRepository: Repository,\n\t\t@InjectRepository(Project)\n\t\tprivate readonly projectRepository: Repository,\n\t) {}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMemberRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tcreateAll(memberPartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmemberPartials.map((memberPartial) => {\n\t\t\t\tconst projectMember = this.projectMemberRepository.create(memberPartial);\n\n\t\t\t\treturn projectMember.save();\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync create(memberPartial: DeepPartial): Promise {\n\t\tconst existingMember: ProjectMember = await this.projectMemberRepository.findOneBy({\n\t\t\tproject: {\n\t\t\t\tid: memberPartial.project.id,\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tid: memberPartial.user.id,\n\t\t\t},\n\t\t});\n\n\t\tif (existingMember) {\n\t\t\tthrow new ProjectMemberAlreadyExistsException();\n\t\t}\n\n\t\tconst project = await this.projectRepository.findOneBy({\n\t\t\tid: memberPartial.project.id,\n\t\t\towner: {\n\t\t\t\tid: memberPartial.user.id,\n\t\t\t},\n\t\t});\n\n\t\tif (project) {\n\t\t\tthrow new ProjectMemberAlreadyExistsException();\n\t\t}\n\n\t\tconst projectMember = this.projectMemberRepository.create(memberPartial);\n\n\t\treturn projectMember.save();\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectMemberRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst member = await this.findOne(id, {}, {}, {});\n\n\t\t\tif (!member) {\n\t\t\t\tthrow new NotFoundException();\n\t\t\t}\n\n\t\t\tawait member.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NotFoundException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectMilestone.html":{"url":"entities/ProjectMilestone.html","title":"entity - ProjectMilestone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectMilestone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-milestone.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estimates\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                milestoneReached\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estimates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MilestoneEstimate[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, estimate => estimate.milestone)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        milestoneReached\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'milestone_reached', type: 'boolean', default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.milestones, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-milestone.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { Project } from '@Entities/project';\n\n@Entity('project_milestone')\nexport class ProjectMilestone extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t\testimates: MilestoneEstimate,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project', 'estimates'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'name', 'milestoneReached'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column()\n\tname: string;\n\n\t@Column({ name: 'milestone_reached', type: 'boolean', default: () => false })\n\tmilestoneReached: boolean;\n\n\t@ManyToOne(() => Project, (project) => project.milestones, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@OneToMany(() => MilestoneEstimate, (estimate) => estimate.milestone)\n\testimates: MilestoneEstimate[];\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectMilestoneController.html":{"url":"controllers/ProjectMilestoneController.html","title":"controller - ProjectMilestoneController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectMilestoneController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-milestone.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/milestones\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-milestone.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/milestones')\nexport class ProjectMilestoneController {\n\tconstructor(private readonly projectMilestoneService: ProjectMilestoneService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(ProjectMilestone)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectMilestone)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectMilestone)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.findAll(where, select, relations));\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.createOne(payload));\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.update(id, payload), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n\n\t@Delete(':id')\n\tdelete(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectMilestoneService.delete(id), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectMilestoneModule.html":{"url":"modules/ProjectMilestoneModule.html","title":"module - ProjectMilestoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectMilestoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_exports\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\ncluster_ProjectMilestoneModule_imports\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectMilestoneModule -->\n\nMilestoneEstimateModule->ProjectMilestoneModule\n\n\n\n\n\nMilestoneEstimateModule \n\nMilestoneEstimateModule \n\nMilestoneEstimateModule  -->\n\nProjectMilestoneModule->MilestoneEstimateModule \n\n\n\n\n\nProjectMilestoneService \n\nProjectMilestoneService \n\nProjectMilestoneService  -->\n\nProjectMilestoneModule->ProjectMilestoneService \n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-milestone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectMilestoneService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectMilestoneController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MilestoneEstimateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MilestoneEstimateModule\n                        \n                        \n                            ProjectMilestoneService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectMilestoneController } from '@Controllers/project-milestone.controller';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { MilestoneEstimateModule } from '@Modules/milestone-estimate.module';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\n\n@Module({\n\timports: [MilestoneEstimateModule, TypeOrmModule.forFeature([ProjectMilestone])],\n\tproviders: [ProjectMilestoneService],\n\tcontrollers: [ProjectMilestoneController],\n\texports: [ProjectMilestoneService, MilestoneEstimateModule],\n})\nexport class ProjectMilestoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectMilestoneService.html":{"url":"injectables/ProjectMilestoneService.html","title":"injectable - ProjectMilestoneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectMilestoneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-milestone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAll\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectMilestoneRepository: Repository, milestoneEstimates: MilestoneEstimateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-milestone.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectMilestoneRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        milestoneEstimates\n                                                  \n                                                        \n                                                                        MilestoneEstimateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAll\n                        \n                    \n                \n            \n            \n                \ncreateAll(milestonePartials: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                milestonePartials\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-milestone.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { MilestoneEstimate } from '@Entities/milestone-estimate';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { MilestoneEstimateService } from '@Services/milestone-estimate.service';\n\n@Injectable()\nexport class ProjectMilestoneService {\n\tconstructor(\n\t\t@InjectRepository(ProjectMilestone)\n\t\tprivate readonly projectMilestoneRepository: Repository,\n\t\tprivate readonly milestoneEstimates: MilestoneEstimateService,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.find({ where, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectMilestoneRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tasync createOne(payload: DeepPartial): Promise {\n\t\tif (Object.hasOwn(payload, 'id')) delete payload.id;\n\t\tconst insertResult = await this.projectMilestoneRepository.insert(payload);\n\n\t\treturn {\n\t\t\t...payload,\n\t\t\tid: insertResult.identifiers[0].id,\n\t\t\testimates: [],\n\t\t\tmilestoneReached: false,\n\t\t} as ProjectMilestone;\n\t}\n\n\tcreateAll(milestonePartials: DeepPartial[]): Promise {\n\t\treturn Promise.all(\n\t\t\tmilestonePartials.map(async (milestonePartial) => {\n\t\t\t\tconst insertResult = await this.projectMilestoneRepository.insert(milestonePartial);\n\n\t\t\t\treturn {\n\t\t\t\t\t...milestonePartial,\n\t\t\t\t\tid: insertResult.identifiers[0].id,\n\t\t\t\t\testimates: [],\n\t\t\t\t\tmilestoneReached: false,\n\t\t\t\t} as ProjectMilestone;\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tlet hadEstimates = false;\n\t\t\tlet updatedEstimatesSuccessfully = false;\n\n\t\t\tif (updatedFields.estimates) {\n\t\t\t\thadEstimates = true;\n\n\t\t\t\tconst updates$ = updatedFields.estimates.map((estimate: DeepPartial) => {\n\t\t\t\t\tconst id = estimate.id;\n\t\t\t\t\tdelete estimate.id;\n\n\t\t\t\t\treturn this.milestoneEstimates.update(id, estimate);\n\t\t\t\t});\n\n\t\t\t\tconst updateResults = await Promise.all(updates$);\n\t\t\t\tupdatedEstimatesSuccessfully = !updateResults.includes(false);\n\n\t\t\t\tdelete updatedFields.estimates;\n\t\t\t}\n\n\t\t\tif (Object.keys(updatedFields).length === 0) {\n\t\t\t\tif (hadEstimates) return updatedEstimatesSuccessfully;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst updated = await this.projectMilestoneRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) {\n\t\t\t\tif (hadEstimates) return updatedEstimatesSuccessfully;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string): Promise {\n\t\ttry {\n\t\t\tconst milestone = await this.findOne(id, {}, {}, {});\n\n\t\t\tif (!milestone) throw new BadRequestException(null);\n\n\t\t\tawait milestone.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof BadRequestException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_imports\n\n\n\ncluster_ProjectModule_exports\n\n\n\ncluster_ProjectModule_providers\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectMemberModule->ProjectModule\n\n\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectModule -->\n\nProjectMilestoneModule->ProjectModule\n\n\n\n\n\nProjectService \n\nProjectService \n\nProjectService  -->\n\nProjectModule->ProjectService \n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectMemberModule\n                        \n                        \n                            ProjectMilestoneModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectController } from '@Controllers/project.controller';\nimport { Project } from '@Entities/project';\nimport { ProjectMemberModule } from '@Modules/project-member.module';\nimport { ProjectMilestoneModule } from '@Modules/project-milestone.module';\nimport { ProjectService } from '@Services/project.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([Project]), ProjectMilestoneModule, ProjectMemberModule],\n\tproviders: [ProjectService],\n\tcontrollers: [ProjectController],\n\texports: [ProjectService],\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProjectReport.html":{"url":"entities/ProjectReport.html","title":"entity - ProjectReport","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProjectReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project-report.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deliverables\n                            \n                            \n                                    \n                                hazards\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                objectives\n                            \n                            \n                                    \n                                other\n                            \n                            \n                                    \n                                project\n                            \n                            \n                                    \n                                reportDate\n                            \n                            \n                                    \n                                sequenceNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliverables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hazards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumtext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, project => project.reports, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'report_date', default: () => CURRENT_DATE, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sequenceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'sequence_number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project-report.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('project_report')\nexport class ProjectReport extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tproject: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['project'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn ['id', 'sequenceNumber', 'reportDate', 'deliverables', 'hazards', 'objectives', 'other'];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'sequence_number' })\n\tsequenceNumber: number;\n\n\t@Column({ name: 'report_date', default: () => 'CURRENT_DATE', type: 'date' })\n\treportDate: string;\n\n\t@Column({ type: 'mediumtext' })\n\tdeliverables: string;\n\n\t@Column({ type: 'mediumtext' })\n\thazards: string;\n\n\t@Column({ type: 'mediumtext' })\n\tobjectives: string;\n\n\t@Column({ type: 'mediumtext', nullable: true })\n\tother: Nullable;\n\n\t@ManyToOne(() => Project, (project) => project.reports, { onDelete: 'CASCADE' })\n\tproject: Project;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectReportController.html":{"url":"controllers/ProjectReportController.html","title":"controller - ProjectReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/project-report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project/reports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/project-report.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { FindOptionsWhere, FindOptionsSelect, FindOptionsRelations, DeepPartial } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { ProjectReport } from '@Entities/project-report';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { ValidUUIDPipe } from '@Pipes/valid-uuid.pipe';\nimport { ProjectReportService } from '@Services/project-report.service';\nimport { Success } from '@Types/success';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\n\n@UseGuards(AccessTokenGuard)\n@Controller('project/reports')\nexport class ProjectReportController {\n\tconstructor(private readonly projectReportService: ProjectReportService) {}\n\n\t@Get(':id')\n\tfindOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Filters(ProjectReport)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(ProjectReport)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(ProjectReport)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.findOne(id, where, select, relations));\n\t}\n\n\t@Patch(':id')\n\tpatchOne(\n\t\t@Param('id', ValidUUIDPipe)\n\t\tid: string,\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(\n\t\t\tthis.projectReportService.patchOne(id, payload),\n\t\t\t(result: boolean) => {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: result,\n\t\t\t\t};\n\t\t\t},\n\t\t) as Observable;\n\t}\n\n\t@Post()\n\tcreate(\n\t\t@Body()\n\t\tpayload: DeepPartial,\n\t): Observable {\n\t\treturn promiseToObservable(this.projectReportService.create(payload));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectReportModule.html":{"url":"modules/ProjectReportModule.html","title":"module - ProjectReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\ncluster_ProjectReportModule_exports\n\n\n\n\nProjectReportService \n\nProjectReportService \n\n\n\nProjectReportModule\n\nProjectReportModule\n\nProjectReportService  -->\n\nProjectReportModule->ProjectReportService \n\n\n\n\n\nProjectReportService\n\nProjectReportService\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/project-report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectReportService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectReportController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectReportService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectReportController } from '@Controllers/project-report.controller';\nimport { ProjectReport } from '@Entities/project-report';\nimport { ProjectReportService } from '@Services/project-report.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([ProjectReport])],\n\tproviders: [ProjectReportService],\n\tcontrollers: [ProjectReportController],\n\texports: [ProjectReportService],\n})\nexport class ProjectReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectReportService.html":{"url":"injectables/ProjectReportService.html","title":"injectable - ProjectReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project-report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                patchOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectReportRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/project-report.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectReportRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(partialReport: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialReport\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patchOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchOne(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project-report.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { ProjectReport } from '@Entities/project-report';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\n\n@Injectable()\nexport class ProjectReportService {\n\tconstructor(\n\t\t@InjectRepository(ProjectReport)\n\t\tprivate readonly projectReportRepository: Repository,\n\t) {}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectReportRepository.findOne({\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t\tselect,\n\t\t\trelations,\n\t\t});\n\t}\n\n\tasync patchOne(id: string, payload: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectReportRepository.update({ id }, payload);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tcreate(partialReport: DeepPartial): Promise {\n\t\tconst newReport = this.projectReportRepository.create(partialReport);\n\n\t\treturn newReport.save();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectRepository: Repository, milestoneService: ProjectMilestoneService, memberService: ProjectMemberService)\n                    \n                \n                        \n                            \n                                Defined in src/services/project.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        milestoneService\n                                                  \n                                                        \n                                                                        ProjectMilestoneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        ProjectMemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(project: DeepPartial, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(userId: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatedFields: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedFields\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { Project } from '@Entities/project';\nimport { ProjectMember } from '@Entities/project-member';\nimport { ProjectMilestone } from '@Entities/project-milestone';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { DeleteProjectNotAllowedException } from '@Exceptions/delete-project-not-allowed.exception';\nimport { NoAffectedRowException } from '@Exceptions/no-affected-row.exception';\nimport { ProjectMemberService } from '@Services/project-member.service';\nimport { ProjectMilestoneService } from '@Services/project-milestone.service';\n\n@Injectable()\nexport class ProjectService {\n\tconstructor(\n\t\t@InjectRepository(Project)\n\t\tprivate readonly projectRepository: Repository,\n\t\tprivate readonly milestoneService: ProjectMilestoneService,\n\t\tprivate readonly memberService: ProjectMemberService,\n\t) {}\n\n\tfindAll(\n\t\tuserId: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\tconst conditions: FindOptionsWhere[] = [];\n\n\t\tif (where.owner) {\n\t\t\tdelete where.owner;\n\t\t}\n\n\t\tif (where.members) {\n\t\t\tdelete where.members;\n\t\t}\n\n\t\tconditions.push({ owner: { id: userId } });\n\t\tconditions.push({ members: { user: { id: userId } } });\n\t\tconditions.push(where);\n\n\t\treturn this.projectRepository.find({ where: conditions, select, relations });\n\t}\n\n\tfindOne(\n\t\tid: string,\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.projectRepository.findOne({\n\t\t\trelations,\n\t\t\tselect,\n\t\t\twhere: {\n\t\t\t\t...where,\n\t\t\t\tid,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync create(project: DeepPartial, userId: string): Promise {\n\t\ttry {\n\t\t\tconst newProject = this.projectRepository.create({\n\t\t\t\t...project,\n\t\t\t\towner: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst createdProject = await newProject.save();\n\n\t\t\tif (project.milestones) {\n\t\t\t\tconst projectMilestones = await this.milestoneService.createAll(\n\t\t\t\t\tproject.milestones.map((milestone: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...milestone,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.milestones = projectMilestones;\n\t\t\t}\n\n\t\t\tif (project.members) {\n\t\t\t\tconst projectMembers = await this.memberService.createAll(\n\t\t\t\t\tproject.members.map((member: DeepPartial) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...member,\n\t\t\t\t\t\t\tproject: {\n\t\t\t\t\t\t\t\tid: createdProject.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tcreatedProject.members = projectMembers;\n\t\t\t}\n\n\t\t\treturn createdProject;\n\t\t} catch (exception) {\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync update(id: string, updatedFields: DeepPartial): Promise {\n\t\ttry {\n\t\t\tconst updated = await this.projectRepository.update({ id }, updatedFields);\n\n\t\t\tif (updated.affected && updated.affected > 0) return true;\n\n\t\t\tthrow new NoAffectedRowException(null);\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NoAffectedRowException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n\n\tasync delete(id: string, userId: string): Promise {\n\t\ttry {\n\t\t\tconst project = await this.findOne(\n\t\t\t\tid,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: {\n\t\t\t\t\t\tid: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\towner: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!project) {\n\t\t\t\tthrow new NotFoundException();\n\t\t\t}\n\n\t\t\tif (project.owner.id !== userId) throw new DeleteProjectNotAllowedException(null);\n\n\t\t\tawait project.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof NotFoundException) throw exception;\n\t\t\tif (exception instanceof DeleteProjectNotAllowedException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjektarbeitAPI1723306279388.html":{"url":"classes/ProjektarbeitAPI1723306279388.html","title":"class - ProjektarbeitAPI1723306279388","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjektarbeitAPI1723306279388\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723306279388-ProjektarbeitAPI.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ProjektarbeitAPI1723306279388'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306279388-ProjektarbeitAPI.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ProjektarbeitAPI1723306279388 implements MigrationInterface {\n\tname = 'ProjektarbeitAPI1723306279388';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`token_whitelist\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`access_token\\` varchar(255) NULL, \\`access_token_expiration_date\\` datetime NULL, \\`refresh_token\\` varchar(255) NULL, \\`refresh_token_expiration_date\\` datetime NULL, \\`userId\\` uuid NULL, UNIQUE INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` (\\`userId\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`user\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`academic_title\\` varchar(255) NULL, \\`matriculation_number\\` int NULL, \\`first_name\\` varchar(255) NULL, \\`last_name\\` varchar(255) NULL, \\`email\\` varchar(255) NOT NULL, \\`password\\` varchar(255) NOT NULL, \\`phone_number\\` varchar(255) NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_member\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`role\\` enum ('contributor', 'viewer') NOT NULL, \\`userId\\` uuid NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_report\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`sequence_number\\` int NOT NULL, \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`deliverables\\` mediumtext NOT NULL, \\`hazards\\` mediumtext NOT NULL, \\`objectives\\` mediumtext NOT NULL, \\`other\\` mediumtext NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE, \\`official_end\\` date NULL, \\`report_interval\\` int NOT NULL DEFAULT '7', \\`type\\` varchar(255) NULL, \\`ownerId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`project_milestone\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`name\\` varchar(255) NOT NULL, \\`projectId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \\`milestone_estimate\\` (\\`id\\` uuid NOT NULL DEFAULT UUID(), \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE, \\`estimation_date\\` date NOT NULL, \\`milestone_reached\\` tinyint NOT NULL, \\`milestoneId\\` uuid NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \\`milestone_estimate\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_milestone\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_report\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`project_member\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`user\\``);\n\t\tawait queryRunner.query(`DROP INDEX \\`REL_fbe0e932e64303e1f63e3e16f5\\` ON \\`token_whitelist\\``);\n\t\tawait queryRunner.query(`DROP TABLE \\`token_whitelist\\``);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/refresh-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/refresh-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromCookie\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistService: TokenWhitelistService)\n                    \n                \n                        \n                            \n                                Defined in src/strategies/refresh-token.strategy.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistService\n                                                  \n                                                        \n                                                                        TokenWhitelistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCookie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (req: Request) => string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/refresh-token.strategy.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport env from '@Environment';\nimport { TokenWhitelistService } from '@Services/token-whitelist.service';\nimport { REFRESH_TOKEN_COOKIE } from '@Tokens/refresh-token-cookie';\nimport { Nullable } from '@Types/nullable';\n\ntype JwtPayload = {\n\tsub: string;\n\temail: string;\n};\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n\tpublic static fromCookie() {\n\t\treturn (req: Request): string | null => {\n\t\t\tif (req.cookies && Object.hasOwn(req.cookies, REFRESH_TOKEN_COOKIE)) {\n\t\t\t\treturn req.cookies[REFRESH_TOKEN_COOKIE];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tconstructor(private readonly tokenWhitelistService: TokenWhitelistService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromExtractors([\n\t\t\t\tRefreshTokenStrategy.fromCookie(),\n\t\t\t\tExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\t]),\n\t\t\tsecretOrKey: env.JWT_REFRESH_SECRET,\n\t\t\tpassReqToCallback: true,\n\t\t});\n\t}\n\n\tasync validate(@Req() request: Request, payload: JwtPayload) {\n\t\tlet refreshToken: Nullable = RefreshTokenStrategy.fromCookie()(request);\n\n\t\tif (!refreshToken) {\n\t\t\trefreshToken = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\t\t}\n\n\t\tconst verified = await this.tokenWhitelistService.verifyRefreshToken(payload.sub, refreshToken);\n\n\t\tif (!verified) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn {\n\t\t\t...payload,\n\t\t\trefreshToken,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RelocatedMilestoneReachedFlag1723758746739.html":{"url":"classes/RelocatedMilestoneReachedFlag1723758746739.html","title":"class - RelocatedMilestoneReachedFlag1723758746739","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RelocatedMilestoneReachedFlag1723758746739\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RelocatedMilestoneReachedFlag1723758746739'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RelocatedMilestoneReachedFlag1723758746739 implements MigrationInterface {\n\tname = 'RelocatedMilestoneReachedFlag1723758746739';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`ALTER TABLE \\`milestone_estimate\\` DROP COLUMN \\`milestone_reached\\``);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD \\`milestone_reached\\` tinyint NOT NULL DEFAULT false`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT UUID()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT CURRENT_DATE`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t}\n\n\tpublic async down(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` DROP FOREIGN KEY \\`FK_2d04de5563e11736efb61e44285\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` DROP FOREIGN KEY \\`FK_f7accb0136106f3050f8e96c5e8\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` DROP FOREIGN KEY \\`FK_9884b2ee80eb70b7db4f12e8aed\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` DROP FOREIGN KEY \\`FK_7e787585ded942fc095b659b594\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_7115f82a61e31ac95b2681d83e4\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` DROP FOREIGN KEY \\`FK_e7520163dafa7c1104fd672caad\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` DROP FOREIGN KEY \\`FK_fbe0e932e64303e1f63e3e16f5e\\``,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_1723758746739-ProjektarbeitAPImilestone\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD CONSTRAINT \\`FK_2d04de5563e11736efb61e44285\\` FOREIGN KEY (\\`milestoneId\\`) REFERENCES \\`project_milestone\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`official_start\\` \\`official_start\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_milestone\\` ADD CONSTRAINT \\`FK_f7accb0136106f3050f8e96c5e8\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` ADD CONSTRAINT \\`FK_7e787585ded942fc095b659b594\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_7115f82a61e31ac95b2681d83e4\\` FOREIGN KEY (\\`projectId\\`) REFERENCES \\`project\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`report_date\\` \\`report_date\\` date NOT NULL DEFAULT curdate()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_report\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`user\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project\\` ADD CONSTRAINT \\`FK_9884b2ee80eb70b7db4f12e8aed\\` FOREIGN KEY (\\`ownerId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`project_member\\` ADD CONSTRAINT \\`FK_e7520163dafa7c1104fd672caad\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` ADD CONSTRAINT \\`FK_fbe0e932e64303e1f63e3e16f5e\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE NO ACTION`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`token_whitelist\\` CHANGE \\`id\\` \\`id\\` uuid NOT NULL DEFAULT uuid()`,\n\t\t);\n\t\tawait queryRunner.query(`ALTER TABLE \\`project_milestone\\` DROP COLUMN \\`milestone_reached\\``);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \\`milestone_estimate\\` ADD \\`milestone_reached\\` tinyint NOT NULL`,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoredProcedureAndEvent1723306299388.html":{"url":"classes/StoredProcedureAndEvent1723306299388.html","title":"class - StoredProcedureAndEvent1723306299388","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoredProcedureAndEvent1723306299388\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1723306299388-StoredProcedureAndEvent.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'StoredProcedureAndEvent1723306299388'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1723306299388-StoredProcedureAndEvent.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class StoredProcedureAndEvent1723306299388 implements MigrationInterface {\n\tname = 'StoredProcedureAndEvent1723306299388';\n\n\tpublic async up(queryRunner: QueryRunner): Promise {\n\t\tawait queryRunner.query(`\n      CREATE PROCEDURE IF NOT EXISTS RemoveExpiredTokens()\n      BEGIN\n        SET time_zone = 'Europe/Berlin';\n        DELETE FROM token_whitelist WHERE refresh_token_expiration_date  {\n\t\tawait queryRunner.query(`SET GLOBAL event_scheduler = OFF;`);\n\t\tawait queryRunner.query(`DROP EVENT IF EXISTS RemoveExpiredTokensEvent;`);\n\t\tawait queryRunner.query(`DROP PROCEDURE IF EXISTS RemoveExpiredTokens`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TokenWhitelist.html":{"url":"entities/TokenWhitelist.html","title":"entity - TokenWhitelist","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TokenWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/token-whitelist.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpirationDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpirationDate\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token_expiration_date', type: 'datetime', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token_expiration_date', type: 'datetime', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn()@OneToOne(undefined, user => user.tokenPair, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/token-whitelist.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, BeforeInsert, Column, Entity, JoinColumn, OneToOne } from 'typeorm';\n\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { User } from '@Entities/user';\n\n@Entity('token_whitelist')\nexport class TokenWhitelist extends BaseEntity {\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'access_token', nullable: true })\n\taccessToken: string;\n\n\t@Column({\n\t\tname: 'access_token_expiration_date',\n\t\ttype: 'datetime',\n\t\tnullable: true,\n\t})\n\taccessTokenExpirationDate: string;\n\n\t@Column({ name: 'refresh_token', nullable: true })\n\trefreshToken: string;\n\n\t@Column({\n\t\tname: 'refresh_token_expiration_date',\n\t\ttype: 'datetime',\n\t\tnullable: true,\n\t})\n\trefreshTokenExpirationDate: string;\n\n\t@JoinColumn()\n\t@OneToOne(() => User, (user) => user.tokenPair, { onDelete: 'CASCADE' })\n\tuser: User;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenWhitelistService.html":{"url":"injectables/TokenWhitelistService.html","title":"injectable - TokenWhitelistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenWhitelistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token-whitelist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                findByUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyAccessToken\n                            \n                            \n                                    Async\n                                verifyRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenWhitelistRepository: Repository, date: DateService, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/token-whitelist.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUser\n                        \n                    \n                \n            \n            \n                \nfindByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined: TokenPairAndOwner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPairAndOwner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAccessToken(userId: string, accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/token-whitelist.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeleteResult, Repository } from 'typeorm';\n\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport env from '@Environment';\nimport { CryptoService } from '@Services/crypto.service';\nimport { DateService } from '@Services/date.service';\n\nexport type TokenPairAndOwner = {\n\taccessToken: string;\n\trefreshToken: string;\n\tuserId: string;\n};\n\n@Injectable()\nexport class TokenWhitelistService {\n\tconstructor(\n\t\t@InjectRepository(TokenWhitelist)\n\t\tprivate readonly tokenWhitelistRepository: Repository,\n\t\tprivate readonly date: DateService,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tasync update({ accessToken, refreshToken, userId }: TokenPairAndOwner): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry !== null) {\n\t\t\tawait this.tokenWhitelistRepository.remove(tokenWhitelistEntry);\n\t\t}\n\n\t\tconst accessTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.ACCESS_TOKEN_EXPIRATION,\n\t\t);\n\t\tconst refreshTokenExpirationDate = this.date.getCurrentTimestampWithOffset(\n\t\t\tenv.REFRESH_TOKEN_EXPIRATION,\n\t\t);\n\n\t\tconst newRecord = this.tokenWhitelistRepository.create({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t\taccessToken,\n\t\t\taccessTokenExpirationDate,\n\t\t\trefreshToken,\n\t\t\trefreshTokenExpirationDate,\n\t\t});\n\n\t\tawait newRecord.save();\n\t}\n\n\tdelete(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.delete({\n\t\t\tuser: {\n\t\t\t\tid: userId,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindByUser(userId: string): Promise {\n\t\treturn this.tokenWhitelistRepository.findOne({\n\t\t\twhere: {\n\t\t\t\tuser: {\n\t\t\t\t\tid: userId,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync verifyAccessToken(userId: string, accessToken: string): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\t\tif (tokenWhitelistEntry.accessToken === null) return false;\n\t\tif (!this.date.isAfterCurrentTimestamp(tokenWhitelistEntry.accessTokenExpirationDate)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hashedAccessToken = this.crypto.hash(accessToken);\n\n\t\treturn tokenWhitelistEntry.accessToken === hashedAccessToken;\n\t}\n\n\tasync verifyRefreshToken(userId: string, refreshToken: string): Promise {\n\t\tconst tokenWhitelistEntry = await this.findByUser(userId);\n\n\t\tif (tokenWhitelistEntry === null) return false;\n\t\tif (tokenWhitelistEntry.refreshToken === null) return false;\n\t\tif (!this.date.isAfterCurrentTimestamp(tokenWhitelistEntry.refreshTokenExpirationDate)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hashedRefreshToken = this.crypto.hash(refreshToken);\n\n\t\treturn tokenWhitelistEntry.refreshToken === hashedRefreshToken;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedException.html":{"url":"classes/UnauthorizedException.html","title":"class - UnauthorizedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/unauthorized.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/unauthorized.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UnauthorizedException extends BaseException {\n\tconstructor(cause: any) {\n\t\tsuper(HttpStatus.UNAUTHORIZED, 1, {\n\t\t\tmessage: 'Unauthorized',\n\t\t\tdescription: 'This request requires authorization provided by an access token.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                academicTitle\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                matriculationNumber\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                projects\n                            \n                            \n                                    \n                                tokenPair\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        academicTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'academic_title', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'first_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'last_name', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matriculationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'matriculation_number', nullable: true, type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'phone_number', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, project => project.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenPair\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenWhitelist\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, tokenWhitelist => tokenWhitelist.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, OneToMany, OneToOne } from 'typeorm';\n\nimport { BaseEntityWithExtras, RelationTypes } from '@Common/base-entity-with-extras';\nimport { PrimaryGeneratedUUID } from '@Decorators/primary-generated-uuid.decorator';\nimport { Project } from '@Entities/project';\nimport { TokenWhitelist } from '@Entities/token-whitelist';\nimport { Nullable } from '@Types/nullable';\n\n@Entity('user')\nexport class User extends BaseEntityWithExtras {\n\tstatic getRelationTypes(): RelationTypes {\n\t\treturn {\n\t\t\tprojects: Project,\n\t\t};\n\t}\n\n\tstatic getRelations(): string[] {\n\t\treturn ['projects'];\n\t}\n\n\tstatic getColumns(): string[] {\n\t\treturn [\n\t\t\t'id',\n\t\t\t'academicTitle',\n\t\t\t'matriculationNumber',\n\t\t\t'firstName',\n\t\t\t'lastName',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'phoneNumber',\n\t\t];\n\t}\n\n\t@PrimaryGeneratedUUID()\n\tid: string;\n\n\t@Column({ name: 'academic_title', nullable: true, type: 'varchar' })\n\tacademicTitle: Nullable;\n\n\t@Column({ name: 'matriculation_number', nullable: true, type: 'int' })\n\tmatriculationNumber: Nullable;\n\n\t@Column({ name: 'first_name', nullable: true, type: 'varchar' })\n\tfirstName: Nullable;\n\n\t@Column({ name: 'last_name', nullable: true, type: 'varchar' })\n\tlastName: Nullable;\n\n\t@Column({ type: 'varchar' })\n\temail: string;\n\n\t@Column({ type: 'varchar' })\n\tpassword: string;\n\n\t@Column({ name: 'phone_number', nullable: true, type: 'varchar' })\n\tphoneNumber: Nullable;\n\n\t@OneToMany(() => Project, (project) => project.owner)\n\tprojects: Project[];\n\n\t@OneToOne(() => TokenWhitelist, (tokenWhitelist) => tokenWhitelist.user)\n\ttokenPair: TokenWhitelist;\n\n\t@BeforeInsert()\n\tasync beforeInsert(): Promise {\n\t\tif (this.id === null) {\n\t\t\tthis.id = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAlreadyExistsException.html":{"url":"classes/UserAlreadyExistsException.html","title":"class - UserAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-already-exists.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from './base.exception';\n\nexport class UserAlreadyExistsException extends BaseException {\n\tconstructor(email: string, cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 4, {\n\t\t\tmessage: 'User already exists',\n\t\t\tdescription: `The provided email address (${email}) is already registered.`,\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deleteOne\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(user: Express.User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Express.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(payload: SearchBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('search')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SearchBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Post, UseGuards } from '@nestjs/common';\n\nimport { map, Observable, take } from 'rxjs';\nimport { FindOptionsRelations, FindOptionsSelect, FindOptionsWhere } from 'typeorm';\n\nimport { Filters } from '@Decorators/filters.decorator';\nimport { Includes } from '@Decorators/includes.decorator';\nimport { SparseFieldsets } from '@Decorators/sparse-fieldsets.decorator';\nimport { User as UserFromRequest } from '@Decorators/user.decorator';\nimport { User } from '@Entities/user';\nimport { AccessTokenGuard } from '@Guards/access-token.guard';\nimport { UserService } from '@Services/user.service';\nimport { promiseToObservable } from '@Utils/promise-to-oberservable';\nimport { Success } from '@Types/success';\n\ntype SearchBody = {\n\tsearchTerm: string;\n};\n\n@UseGuards(AccessTokenGuard)\n@Controller('users')\nexport class UserController {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Get()\n\tfindAll(\n\t\t@Filters(User)\n\t\twhere: FindOptionsWhere,\n\t\t@SparseFieldsets(User)\n\t\tselect: FindOptionsSelect,\n\t\t@Includes(User)\n\t\trelations: FindOptionsRelations,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.findAll(where, select, relations));\n\t}\n\n\t@Post('search')\n\tsearchAll(\n\t\t@Body()\n\t\tpayload: SearchBody,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.searchAll(payload.searchTerm)).pipe(\n\t\t\ttake(1),\n\t\t\tmap((users) => {\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tdelete user.email;\n\t\t\t\t\tdelete user.password;\n\t\t\t\t\tdelete user.phoneNumber;\n\t\t\t\t}\n\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t);\n\t}\n\n\t@Delete()\n\tdeleteOne(\n\t\t@UserFromRequest()\n\t\tuser: Express.User,\n\t): Observable {\n\t\treturn promiseToObservable(this.userService.delete(user['sub']), (result) => {\n\t\t\treturn {\n\t\t\t\tsuccess: result,\n\t\t\t};\n\t\t}) as Observable;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDoesNotExistException.html":{"url":"classes/UserDoesNotExistException.html","title":"class - UserDoesNotExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDoesNotExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-does-not-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: Nullable, cause: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-does-not-exist.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        Nullable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nimport { BaseException } from '@Exceptions/base.exception';\nimport { Nullable } from '@Types/nullable';\n\nexport class UserDoesNotExistException extends BaseException {\n\tconstructor(email: Nullable, cause: any) {\n\t\tsuper(HttpStatus.BAD_REQUEST, 5, {\n\t\t\tmessage: 'User does not exist',\n\t\t\tdescription: email\n\t\t\t\t? `There is no user present who goes by the provided email address (${email}).`\n\t\t\t\t: 'No user could be found by the given search criteria.',\n\t\t\tcause,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCryptoService\n\nCryptoService\n\nUserModule -->\n\nCryptoService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CryptoService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserController } from '@Controllers/user.controller';\nimport { User } from '@Entities/user';\nimport { CryptoService } from '@Services/crypto.service';\nimport { UserService } from '@Services/user.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([User])],\n\tproviders: [UserService, CryptoService],\n\tcontrollers: [UserController],\n\texports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByIdAndCredentials\n                            \n                            \n                                register\n                            \n                            \n                                searchAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, crypto: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypto\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(where: FindOptionsWhere, select: FindOptionsSelect, relations: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                select\n                                            \n                                                            FindOptionsSelect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                            FindOptionsRelations\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIdAndCredentials\n                        \n                    \n                \n            \n            \n                \nfindByIdAndCredentials(id: string, where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchAll\n                        \n                    \n                \n            \n            \n                \nsearchAll(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport {\n\tDeepPartial,\n\tFindOptionsRelations,\n\tFindOptionsSelect,\n\tFindOptionsWhere,\n\tRepository,\n} from 'typeorm';\n\nimport { User } from '@Entities/user';\nimport { BadRequestException } from '@Exceptions/bad-request.exception';\nimport { UserDoesNotExistException } from '@Exceptions/user-does-not-exist.exception';\nimport { CryptoService } from '@Services/crypto.service';\nimport { Nullable } from '@Types/nullable';\n\n@Injectable()\nexport class UserService {\n\tconstructor(\n\t\t@InjectRepository(User)\n\t\tprivate readonly userRepository: Repository,\n\t\tprivate readonly crypto: CryptoService,\n\t) {}\n\n\tfindAll(\n\t\twhere: FindOptionsWhere,\n\t\tselect: FindOptionsSelect,\n\t\trelations: FindOptionsRelations,\n\t): Promise {\n\t\treturn this.userRepository.find({ where, select, relations });\n\t}\n\n\tsearchAll(searchTerm: string): Promise {\n\t\treturn this.userRepository\n\t\t\t.createQueryBuilder('u')\n\t\t\t.select()\n\t\t\t.where(\n\t\t\t\t\"LOWER(CONCAT(COALESCE(u.academic_title, ''), ' ', COALESCE(u.first_name, ''), ' ', COALESCE(u.last_name, ''))) LIKE :searchTerm\",\n\t\t\t\t{\n\t\t\t\t\tsearchTerm: `%${searchTerm.toLowerCase()}%`,\n\t\t\t\t},\n\t\t\t)\n\t\t\t.getMany();\n\t}\n\n\tfindByEmail(email: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ email });\n\t}\n\n\tfindById(id: string): Promise> {\n\t\treturn this.userRepository.findOneBy({ id });\n\t}\n\n\tfindByIdAndCredentials(id: string, where: FindOptionsWhere = {}): Promise> {\n\t\tif (where?.password) {\n\t\t\twhere.password = this.crypto.hash(where.password as string);\n\t\t}\n\n\t\treturn this.userRepository.findOneBy({ id, ...where });\n\t}\n\n\tregister(userData: DeepPartial): Promise {\n\t\tconst user = this.userRepository.create(userData);\n\n\t\treturn user.save();\n\t}\n\n\tasync update(id: string, payload: DeepPartial): Promise {\n\t\tconst user = await this.userRepository.findOneBy({ id });\n\n\t\tif (!user) {\n\t\t\tthrow new NotFoundException();\n\t\t}\n\n\t\tif (payload?.password) {\n\t\t\tpayload.password = this.crypto.hash(payload.password);\n\t\t}\n\n\t\tfor (const attribute in payload) {\n\t\t\tuser[attribute] = payload[attribute];\n\t\t}\n\n\t\treturn user.save();\n\t}\n\n\tasync delete(id: string) {\n\t\ttry {\n\t\t\tconst user = await this.findById(id);\n\n\t\t\tif (!user) throw new UserDoesNotExistException(null, null);\n\n\t\t\tawait user.remove();\n\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tif (exception instanceof UserDoesNotExistException) throw exception;\n\n\t\t\tthrow new BadRequestException(exception);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidUUIDPipe.html":{"url":"classes/ValidUUIDPipe.html","title":"class - ValidUUIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidUUIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/valid-uuid.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/valid-uuid.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform } from '@nestjs/common';\n\nimport { InvalidUUIDFormatException } from '@Exceptions/invalid-uuid-format.exception';\n\nexport class ValidUUIDPipe implements PipeTransform {\n\ttransform(value: any): string {\n\t\tif (typeof value !== 'string') throw new InvalidUUIDFormatException(null);\n\n\t\tconst regex = /^([a-f0-9]){8}-([a-f0-9]){4}-([a-f0-9]){4}-([a-f0-9]){4}-([a-f0-9]){12}$/;\n\n\t\tif (!regex.test(value.toLowerCase())) throw new InvalidUUIDFormatException(null);\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/base-entity-with-extras.ts\n            \n            class\n            BaseEntityWithExtras\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/milestone-estimate.controller.ts\n            \n            controller\n            MilestoneEstimateController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project-member.controller.ts\n            \n            controller\n            ProjectMemberController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project-milestone.controller.ts\n            \n            controller\n            ProjectMilestoneController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/project-report.controller.ts\n            \n            controller\n            ProjectReportController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            Filters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/filters.decorator.ts\n            \n            variable\n            filtersFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            Includes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/includes.decorator.ts\n            \n            variable\n            includesFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/primary-generated-uuid.decorator.ts\n            \n            function\n            PrimaryGeneratedUUID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            SparseFieldsets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/sparse-fieldsets.decorator.ts\n            \n            variable\n            sparseFieldsetsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/milestone-estimate.ts\n            \n            entity\n            MilestoneEstimate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-member.ts\n            \n            entity\n            ProjectMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-milestone.ts\n            \n            entity\n            ProjectMilestone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project-report.ts\n            \n            entity\n            ProjectReport\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/project.ts\n            \n            entity\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/token-whitelist.ts\n            \n            entity\n            TokenWhitelist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/user.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/bad-request.exception.ts\n            \n            class\n            BadRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/base.exception.ts\n            \n            class\n            BaseException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/delete-project-not-allowed.exception.ts\n            \n            class\n            DeleteProjectNotAllowedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/incorrect-credentials.exception.ts\n            \n            class\n            IncorrectCredentialsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/invalid-uuid-format.exception.ts\n            \n            class\n            InvalidUUIDFormatException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/no-affected-row.exception.ts\n            \n            class\n            NoAffectedRowException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/project-member-already-exists.exception.ts\n            \n            class\n            ProjectMemberAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/unauthorized.exception.ts\n            \n            class\n            UnauthorizedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-already-exists.exception.ts\n            \n            class\n            UserAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-does-not-exist.exception.ts\n            \n            class\n            UserDoesNotExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/access-token.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/refresh-token.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/json-api.interceptor.ts\n            \n            injectable\n            JsonApiInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1723306279388-ProjektarbeitAPI.ts\n            \n            class\n            ProjektarbeitAPI1723306279388\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1723306299388-StoredProcedureAndEvent.ts\n            \n            class\n            StoredProcedureAndEvent1723306299388\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1723758746739-RelocatedMilestoneReachedFlag.ts\n            \n            class\n            RelocatedMilestoneReachedFlag1723758746739\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pipes/valid-uuid.pipe.ts\n            \n            class\n            ValidUUIDPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/crypto.service.ts\n            \n            injectable\n            CryptoService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/services/date.service.ts\n            \n            variable\n            TIME_ZONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/milestone-estimate.service.ts\n            \n            injectable\n            MilestoneEstimateService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/project-member.service.ts\n            \n            injectable\n            ProjectMemberService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/project-milestone.service.ts\n            \n            injectable\n            ProjectMilestoneService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/project-report.service.ts\n            \n            injectable\n            ProjectReportService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/token-whitelist.service.ts\n            \n            injectable\n            TokenWhitelistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/strategies/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/strategies/refresh-token.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tokens/access-token-cookie.ts\n            \n            variable\n            ACCESS_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tokens/refresh-token-cookie.ts\n            \n            variable\n            REFRESH_TOKEN_COOKIE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/promise-to-oberservable.ts\n            \n            function\n            promiseToObservable\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.0\n        \n            @nestjs/core : ^10.3.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.2.0\n        \n            dotenv : ^16.3.1\n        \n            luxon : ^3.4.4\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.1\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n        \n            typeorm-extension : ^3.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProjectRole   (src/.../project-member.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/entities/project-member.ts\n    \n        \n            \n                \n                    \n                        \n                        ProjectRole\n                    \n                \n                        \n                            \n                                 Contributor\n                            \n                        \n                        \n                            \n                                Value : contributor\n                            \n                        \n                        \n                            \n                                 Viewer\n                            \n                        \n                        \n                            \n                                Value : viewer\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PrimaryGeneratedUUID   (src/.../primary-generated-uuid.decorator.ts)\n                        \n                        \n                            promiseToObservable   (src/.../promise-to-oberservable.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(port: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/decorators/primary-generated-uuid.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PrimaryGeneratedUUID\n                        \n                    \n                \n            \n            \n                \nPrimaryGeneratedUUID(options: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n                        This decorator can be used on the property level of an entity.\nIt wraps the Column decorator from the typeorm package, which is being\ninitiated with the following default values\nExample :{\n   type: 'uuid',\n   default: () => 'UUID',\n   primary: true,\n   ...options,\n}The part ...options allows to provide any additional options, which can be\ndefined as a parameter of this decorator.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/promise-to-oberservable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        promiseToObservable\n                        \n                    \n                \n            \n            \n                \npromiseToObservable(promise$: Promise, successHandler?, errorHandler?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                promise$\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                successHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                errorHandler\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_MilestoneEstimateModule\n\n\n\ncluster_MilestoneEstimateModule_exports\n\n\n\ncluster_MilestoneEstimateModule_providers\n\n\n\ncluster_ProjectMemberModule\n\n\n\ncluster_ProjectMemberModule_exports\n\n\n\ncluster_ProjectMemberModule_providers\n\n\n\ncluster_ProjectMilestoneModule\n\n\n\ncluster_ProjectMilestoneModule_exports\n\n\n\ncluster_ProjectMilestoneModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_exports\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_ProjectReportModule\n\n\n\ncluster_ProjectReportModule_exports\n\n\n\ncluster_ProjectReportModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nMilestoneEstimateModule\n\nMilestoneEstimateModule\n\n\n\nProjectMilestoneModule\n\nProjectMilestoneModule\n\nProjectMilestoneModule -->\n\nMilestoneEstimateModule->ProjectMilestoneModule\n\n\n\nAppModule -->\n\nMilestoneEstimateModule->AppModule\n\n\n\n\n\nMilestoneEstimateService \n\nMilestoneEstimateService \n\nMilestoneEstimateService  -->\n\nMilestoneEstimateModule->MilestoneEstimateService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProjectMemberModule\n\nProjectMemberModule\n\nProfileModule -->\n\nProjectMemberModule->ProfileModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectMemberModule->ProjectModule\n\n\n\nAppModule -->\n\nProjectMemberModule->AppModule\n\n\n\n\n\nProjectMemberService \n\nProjectMemberService \n\nProjectMemberService  -->\n\nProjectMemberModule->ProjectMemberService \n\n\n\nProjectModule -->\n\nProjectMilestoneModule->ProjectModule\n\n\n\nAppModule -->\n\nProjectMilestoneModule->AppModule\n\n\n\n\n\nMilestoneEstimateModule \n\nMilestoneEstimateModule \n\nMilestoneEstimateModule  -->\n\nProjectMilestoneModule->MilestoneEstimateModule \n\n\n\n\n\nProjectMilestoneService \n\nProjectMilestoneService \n\nProjectMilestoneService  -->\n\nProjectMilestoneModule->ProjectMilestoneService \n\n\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectService \n\nProjectService \n\nProjectService  -->\n\nProjectModule->ProjectService \n\n\n\n\n\nProjectReportModule\n\nProjectReportModule\n\nAppModule -->\n\nProjectReportModule->AppModule\n\n\n\n\n\nProjectReportService \n\nProjectReportService \n\nProjectReportService  -->\n\nProjectReportModule->ProjectReportService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthenticationModule -->\n\nUserModule->AuthenticationModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nProjectMemberModule -->\n\nUserModule->ProjectMemberModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nCryptoService\n\nCryptoService\n\nAuthenticationModule -->\n\nCryptoService->AuthenticationModule\n\n\n\nUserModule -->\n\nCryptoService->UserModule\n\n\n\n\n\nDateService\n\nDateService\n\nAuthenticationModule -->\n\nDateService->AuthenticationModule\n\n\n\nMilestoneEstimateModule -->\n\nDateService->MilestoneEstimateModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthenticationModule -->\n\nRefreshTokenStrategy->AuthenticationModule\n\n\n\n\n\nTokenWhitelistService\n\nTokenWhitelistService\n\nAuthenticationModule -->\n\nTokenWhitelistService->AuthenticationModule\n\n\n\n\n\nMilestoneEstimateService\n\nMilestoneEstimateService\n\nMilestoneEstimateModule -->\n\nMilestoneEstimateService->MilestoneEstimateModule\n\n\n\n\n\nProjectMemberService\n\nProjectMemberService\n\nProjectMemberModule -->\n\nProjectMemberService->ProjectMemberModule\n\n\n\n\n\nProjectMilestoneService\n\nProjectMilestoneService\n\nProjectMilestoneModule -->\n\nProjectMilestoneService->ProjectMilestoneModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nProjectReportService\n\nProjectReportService\n\nProjectReportModule -->\n\nProjectReportService->ProjectReportModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MilestoneEstimateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMemberModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectMilestoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : ISC\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationPayload   (src/.../authentication.controller.ts)\n                        \n                        \n                            Environment   (src/.../environment.ts)\n                        \n                        \n                            JsonApiIncludes   (src/.../includes.decorator.ts)\n                        \n                        \n                            JwtPayload   (src/.../access-token.strategy.ts)\n                        \n                        \n                            JwtPayload   (src/.../refresh-token.strategy.ts)\n                        \n                        \n                            Nullable   (src/.../nullable.ts)\n                        \n                        \n                            Options   (src/.../base.exception.ts)\n                        \n                        \n                            RegisterPayload   (src/.../authentication.service.ts)\n                        \n                        \n                            RelationTypes   (src/.../base-entity-with-extras.ts)\n                        \n                        \n                            SearchBody   (src/.../user.controller.ts)\n                        \n                        \n                            Success   (src/.../success.ts)\n                        \n                        \n                            TokenPairAndOwner   (src/.../token-whitelist.service.ts)\n                        \n                        \n                            TokensResponse   (src/.../authentication.service.ts)\n                        \n                        \n                            TokensWithUserResponse   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/controllers/authentication.controller.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/environment.ts\n    \n    \n        \n            \n                \n                    \n                    Environment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/decorators/includes.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    JsonApiIncludes\n                \n            \n            \n                \n                        string[]\n\n                \n            \n        \n    \n    src/strategies/access-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/strategies/refresh-token.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/nullable.ts\n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    src/exceptions/base.exception.ts\n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/services/authentication.service.ts\n    \n    \n        \n            \n                \n                    \n                    RegisterPayload\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TokensWithUserResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/base-entity-with-extras.ts\n    \n    \n        \n            \n                \n                    \n                    RelationTypes\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/controllers/user.controller.ts\n    \n    \n        \n            \n                \n                    \n                    SearchBody\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/success.ts\n    \n    \n        \n            \n                \n                    \n                    Success\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/services/token-whitelist.service.ts\n    \n    \n        \n            \n                \n                    \n                    TokenPairAndOwner\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_COOKIE   (src/.../access-token-cookie.ts)\n                        \n                        \n                            Filters   (src/.../filters.decorator.ts)\n                        \n                        \n                            filtersFactory   (src/.../filters.decorator.ts)\n                        \n                        \n                            Includes   (src/.../includes.decorator.ts)\n                        \n                        \n                            includesFactory   (src/.../includes.decorator.ts)\n                        \n                        \n                            REFRESH_TOKEN_COOKIE   (src/.../refresh-token-cookie.ts)\n                        \n                        \n                            SparseFieldsets   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            sparseFieldsetsFactory   (src/.../sparse-fieldsets.decorator.ts)\n                        \n                        \n                            TIME_ZONE   (src/.../date.service.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            userFactory   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens/access-token-cookie.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-access_token'\n                    \n                \n\n\n        \n    \n\n    src/decorators/filters.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Filters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(filtersFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtersFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst where: FindOptionsWhere = {};\n\n\tconst assignPartialEqualFilters = (\n\t\tfilters: object,\n\t\tfields: string[],\n\t\tvalue: string,\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst field = fields[0];\n\t\tfields = fields.slice(1);\n\t\tconst properties = entity.getProperties();\n\n\t\tif (!properties.includes(field)) return;\n\n\t\tif (fields.length === 0) {\n\t\t\tfilters[field] = value;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfilters[field] = {\n\t\t\t...(filters[field] || {}),\n\t\t};\n\t\tassignPartialEqualFilters(filters[field], fields, value, entity.getRelationTypes()[field]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'filter')) {\n\t\tfor (const field in request.query.filter as { [field: string]: string }) {\n\t\t\tassignPartialEqualFilters(where, field.split('.'), request.query.filter[field], entity);\n\t\t}\n\t}\n\n\treturn where;\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/includes.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Includes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(includesFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includesFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst relations: FindOptionsRelations = {};\n\n\tconst assignPartialIncludes = (\n\t\trelations: object,\n\t\tincludes: string[],\n\t\tentity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst include = includes[0];\n\t\tincludes = includes.slice(1);\n\t\tconst existingRelations = entity.getRelations();\n\n\t\tif (!existingRelations.includes(include)) return;\n\n\t\tif (includes.length === 0) {\n\t\t\trelations[include] = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\trelations[include] = {\n\t\t\t...(relations[include] || {}),\n\t\t};\n\t\tassignPartialIncludes(relations[include], includes, entity.getRelationTypes()[include]);\n\t};\n\n\tif (Object.hasOwn(request.query, 'include')) {\n\t\tconst includes: string[] = [];\n\n\t\tif (Array.isArray(request.query.include)) {\n\t\t\tfor (const entry of request.query.include as string[]) {\n\t\t\t\tincludes.push(...entry.split(','));\n\t\t\t}\n\t\t} else {\n\t\t\tincludes.push(...(request.query.include as string).split(','));\n\t\t}\n\n\t\tfor (const include of includes) {\n\t\t\tassignPartialIncludes(relations, include.split('.'), entity);\n\t\t}\n\t}\n\n\treturn relations;\n}\n                    \n                \n\n\n        \n    \n\n    src/tokens/refresh-token-cookie.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_COOKIE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hsel_mta-refresh_token'\n                    \n                \n\n\n        \n    \n\n    src/decorators/sparse-fieldsets.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SparseFieldsets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(sparseFieldsetsFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparseFieldsetsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tentity: typeof BaseEntityWithExtras,\n\tctx: ExecutionContext,\n) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\tconst sparseFieldsets: FindOptionsSelect = {};\n\n\tconst assignPartialSparseFieldsets = (\n\t\tfieldsets: object,\n\t\ttables: string[],\n\t\tfields: string[],\n\t\tsubEntity: typeof BaseEntityWithExtras,\n\t) => {\n\t\tconst table = tables[0];\n\t\ttables = tables.slice(1);\n\t\tfieldsets[table] = {\n\t\t\t...(fieldsets[table] || {}),\n\t\t};\n\t\tconst relations = subEntity.getRelationTypes();\n\n\t\tif (!(table in relations)) return;\n\n\t\tsubEntity = relations[table];\n\n\t\tif (tables.length === 0) {\n\t\t\tconst columns = subEntity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[table][field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets[table], tables, fields, subEntity);\n\t};\n\n\tconst assignSparseFieldsets = (fieldsets: object, table: string, fields: string[]) => {\n\t\tif (table === entity.name.toLowerCase()) {\n\t\t\tconst columns = entity.getColumns();\n\n\t\t\tfor (const field of fields) {\n\t\t\t\tif (!columns.includes(field)) continue;\n\n\t\t\t\tfieldsets[field] = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tassignPartialSparseFieldsets(fieldsets, table.split('.'), fields, entity);\n\t};\n\n\tif (Object.hasOwn(request.query, 'fields')) {\n\t\tfor (const table in request.query.fields as {\n\t\t\t[table: string]: string | string[];\n\t\t}) {\n\t\t\tconst fields: string[] = [];\n\n\t\t\tif (Array.isArray(request.query.fields[table])) {\n\t\t\t\tfor (const entry of request.query.fields[table] as string[]) {\n\t\t\t\t\tfields.push(...entry.split(','));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfields.push(...(request.query.fields[table] as string).split(','));\n\t\t\t}\n\n\t\t\tassignSparseFieldsets(sparseFieldsets, table, fields);\n\t\t}\n\t}\n\n\treturn sparseFieldsets;\n}\n                    \n                \n\n\n        \n    \n\n    src/services/date.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TIME_ZONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Europe/Berlin'\n                    \n                \n\n\n        \n    \n\n    src/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(userFactory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (data: unknown, ctx: ExecutionContext) => {\n\tconst request = ctx.switchToHttp().getRequest();\n\n\treturn request.user;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
