version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8

jobs:
  frontend_unit_tests:
    working_directory: ~/project
    docker:
      - image: cimg/node:21.7.3-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check Chrome Installation
          command: |
            google-chrome --version
            chromedriver --version
      - checkout
      - restore_cache:
          key: frontend-cache-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            cd frontend
            npm install --legacy-peer-deps
      - save_cache:
          key: frontend-cache-{{ checksum "frontend/package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Run Unit Tests
          command: |
            cd frontend
            npm run test:ci

  frontend_build:
    working_directory: ~/project
    docker:
      - image: cimg/node:21.7.3
    steps:
      - checkout
      - restore_cache:
          key: frontend-cache-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            cd frontend
            npm install --legacy-peer-deps
      - save_cache:
          key: frontend-cache-{{ checksum "frontend/package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Building Client
          command: |
            cd frontend
            npm run build

  api_unit_tests:
    working_directory: ~/project
    docker:
      - image: cimg/node:21.7.3
    steps:
      - checkout
      - restore_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            cd api
            npm install --legacy-peer-deps
      - save_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Run Unit Tests
          command: |
            cd api
            npm run test:ci

  api_e2e_tests:
    working_directory: ~/project
    docker:
      - image: cimg/node:21.7.3
    steps:
      - checkout
      - restore_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            cd api
            npm install --legacy-peer-deps
      - save_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Run e2e Tests
          command: |
            cd api
            npm run test:e2e

  api_build:
    working_directory: ~/project
    docker:
      - image: cimg/node:21.7.3
    steps:
      - checkout
      - restore_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            cd api
            npm install --legacy-peer-deps
      - save_cache:
          key: api-cache-{{ checksum "api/package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Building API
          command: |
            cd api
            npm run build

workflows:
  frontend_test_and_build:
    jobs:
      - frontend_unit_tests
      - frontend_build:
          requires:
            - frontend_unit_tests

  api_test_and_build:
    jobs:
      - api_unit_tests
      - api_e2e_tests:
          requires:
            - api_unit_tests
      - api_build:
          requires:
            - api_e2e_tests
